{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Nav.svelte","../../src/Body.svelte","../../node_modules/compromise/src/API/world.js","../../node_modules/compromise/src/API/methods/compute.js","../../node_modules/compromise/src/API/methods/loops.js","../../node_modules/compromise/src/API/methods/utils.js","../../node_modules/compromise/src/API/methods/index.js","../../node_modules/compromise/src/API/View.js","../../node_modules/compromise/src/API/extend.js","../../node_modules/compromise/src/API/inputs.js","../../node_modules/compromise/src/nlp.js","../../node_modules/compromise/src/API/_lib.js","../../node_modules/compromise/src/_version.js","../../node_modules/compromise/src/1-one/cache/api.js","../../node_modules/compromise/src/1-one/cache/compute.js","../../node_modules/compromise/src/1-one/cache/plugin.js","../../node_modules/compromise/src/1-one/cache/methods/index.js","../../node_modules/compromise/src/1-one/cache/methods/cacheDoc.js","../../node_modules/compromise/src/1-one/change/api/lib/insert.js","../../node_modules/compromise/src/1-one/change/compute/uuid.js","../../node_modules/compromise/src/1-one/change/api/insert.js","../../node_modules/compromise/src/1-one/change/api/replace.js","../../node_modules/compromise/src/1-one/change/api/lib/remove.js","../../node_modules/compromise/src/1-one/change/api/remove.js","../../node_modules/compromise/src/1-one/change/api/whitespace.js","../../node_modules/compromise/src/1-one/change/api/lib/_sort.js","../../node_modules/compromise/src/1-one/change/api/sort.js","../../node_modules/compromise/src/1-one/change/api/concat.js","../../node_modules/compromise/src/1-one/change/api/harden.js","../../node_modules/compromise/src/1-one/change/api/index.js","../../node_modules/compromise/src/1-one/change/api/case.js","../../node_modules/compromise/src/1-one/change/compute/index.js","../../node_modules/compromise/src/1-one/change/plugin.js","../../node_modules/compromise/src/1-one/contraction-one/model/index.js","../../node_modules/compromise/src/1-one/contraction-one/model/contractions.js","../../node_modules/compromise/src/1-one/contraction-one/compute/contractions/_splice.js","../../node_modules/compromise/src/1-one/contraction-one/compute/contractions/apostrophe-d.js","../../node_modules/compromise/src/1-one/contraction-one/compute/contractions/french.js","../../node_modules/compromise/src/1-one/contraction-one/compute/contractions/number-range.js","../../node_modules/compromise/src/1-one/contraction-one/compute/contractions/number-unit.js","../../node_modules/compromise/src/1-one/contraction-one/compute/contractions/index.js","../../node_modules/compromise/src/1-one/contraction-one/compute/contractions/apostrophe-t.js","../../node_modules/compromise/src/1-one/contraction-one/compute/index.js","../../node_modules/compromise/src/1-one/contraction-one/plugin.js","../../node_modules/compromise/src/1-one/lexicon/compute/multi-word.js","../../node_modules/compromise/src/1-one/lexicon/compute/single-word.js","../../node_modules/compromise/src/1-one/lexicon/compute/index.js","../../node_modules/compromise/src/1-one/lexicon/methods/index.js","../../node_modules/compromise/src/1-one/lexicon/methods/expand.js","../../node_modules/compromise/src/1-one/lexicon/lib.js","../../node_modules/compromise/src/1-one/lexicon/plugin.js","../../node_modules/compromise/src/1-one/lookup/api/buildTrie/index.js","../../node_modules/compromise/src/1-one/lookup/api/scan.js","../../node_modules/compromise/src/1-one/lookup/api/buildTrie/compress.js","../../node_modules/compromise/src/1-one/lookup/plugin.js","../../node_modules/compromise/src/1-one/lookup/api/index.js","../../node_modules/compromise/src/1-one/match/api/_lib.js","../../node_modules/compromise/src/1-one/match/api/match.js","../../node_modules/compromise/src/1-one/match/api/lookaround.js","../../node_modules/compromise/src/1-one/match/api/split.js","../../node_modules/compromise/src/1-one/match/api/index.js","../../node_modules/compromise/src/1-one/match/methods/parseMatch/01-parseBlocks.js","../../node_modules/compromise/src/1-one/match/methods/parseMatch/02-parseToken.js","../../node_modules/compromise/src/1-one/match/methods/parseMatch/03-splitHyphens.js","../../node_modules/compromise/src/1-one/match/methods/parseMatch/04-inflect-root.js","../../node_modules/compromise/src/1-one/match/methods/parseMatch/05-postProcess.js","../../node_modules/compromise/src/1-one/match/methods/match/01-failFast.js","../../node_modules/compromise/src/1-one/match/methods/match/term/_fuzzy.js","../../node_modules/compromise/src/1-one/match/methods/termMethods.js","../../node_modules/compromise/src/1-one/match/methods/match/term/doesMatch.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/logic/greedy.js","../../node_modules/compromise/src/1-one/match/methods/match/_lib.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/astrix.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/logic/and-or.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/or-block.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/and-block.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/negative.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/logic/negative-greedy.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/greedy-match.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/simple-match.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/optional-match.js","../../node_modules/compromise/src/1-one/match/methods/match/steps/contraction-skip.js","../../node_modules/compromise/src/1-one/match/methods/match/02-from-here.js","../../node_modules/compromise/src/1-one/match/methods/match/index.js","../../node_modules/compromise/src/1-one/match/methods/index.js","../../node_modules/compromise/src/1-one/match/methods/parseMatch/index.js","../../node_modules/compromise/src/1-one/match/methods/match/03-notIf.js","../../node_modules/compromise/src/1-one/match/methods/match/03-getGroup.js","../../node_modules/compromise/src/1-one/match/lib.js","../../node_modules/compromise/src/1-one/match/plugin.js","../../node_modules/compromise/src/1-one/output/api/html.js","../../node_modules/compromise/src/1-one/output/api/lib/_text.js","../../node_modules/compromise/src/1-one/output/api/_fmts.js","../../node_modules/compromise/src/1-one/output/api/lib/hash.js","../../node_modules/compromise/src/1-one/output/api/json.js","../../node_modules/compromise/src/1-one/output/api/debug/client-side.js","../../node_modules/compromise/src/1-one/output/api/debug/_color.js","../../node_modules/compromise/src/1-one/output/api/debug/tags.js","../../node_modules/compromise/src/1-one/output/api/debug/highlight.js","../../node_modules/compromise/src/1-one/output/api/debug/index.js","../../node_modules/compromise/src/1-one/output/api/wrap.js","../../node_modules/compromise/src/1-one/output/api/out.js","../../node_modules/compromise/src/1-one/output/api/debug/chunks.js","../../node_modules/compromise/src/1-one/output/api/text.js","../../node_modules/compromise/src/1-one/output/api/index.js","../../node_modules/compromise/src/1-one/output/plugin.js","../../node_modules/compromise/src/1-one/pointers/api/lib/_lib.js","../../node_modules/compromise/src/1-one/pointers/api/lib/split.js","../../node_modules/compromise/src/1-one/pointers/methods/index.js","../../node_modules/compromise/src/1-one/pointers/methods/getDoc.js","../../node_modules/compromise/src/1-one/pointers/api/lib/union.js","../../node_modules/compromise/src/1-one/pointers/api/lib/difference.js","../../node_modules/compromise/src/1-one/pointers/api/index.js","../../node_modules/compromise/src/1-one/pointers/api/lib/intersection.js","../../node_modules/compromise/src/1-one/pointers/plugin.js","../../node_modules/compromise/src/1-one/sweep/api.js","../../node_modules/compromise/src/1-one/sweep/methods/buildNet/01-parse.js","../../node_modules/compromise/src/1-one/sweep/methods/index.js","../../node_modules/compromise/src/1-one/sweep/methods/buildNet/index.js","../../node_modules/compromise/src/1-one/sweep/methods/sweep/index.js","../../node_modules/compromise/src/1-one/sweep/methods/sweep/01-getHooks.js","../../node_modules/compromise/src/1-one/sweep/methods/sweep/02-trim-down.js","../../node_modules/compromise/src/1-one/sweep/methods/sweep/04-runMatch.js","../../node_modules/compromise/src/1-one/sweep/methods/tagger/index.js","../../node_modules/compromise/src/1-one/sweep/methods/tagger/canBe.js","../../node_modules/compromise/src/1-one/sweep/plugin.js","../../node_modules/compromise/src/1-one/sweep/lib.js","../../node_modules/compromise/src/1-one/tag/methods/setTag.js","../../node_modules/grad-school/src/input/_validate.js","../../node_modules/grad-school/src/input/from-text.js","../../node_modules/grad-school/src/crawl/crawl.js","../../node_modules/grad-school/src/lib/_lib.js","../../node_modules/grad-school/src/input/index.js","../../node_modules/grad-school/src/input/from-array.js","../../node_modules/grad-school/src/lib/color.js","../../node_modules/grad-school/src/out/toText.js","../../node_modules/grad-school/src/out/toArray.js","../../node_modules/grad-school/src/out/index.js","../../node_modules/grad-school/src/crawl/cache.js","../../node_modules/grad-school/src/crawl/fillDown.js","../../node_modules/grad-school/src/View.js","../../node_modules/grad-school/src/index.js","../../node_modules/compromise/src/1-one/tag/methods/addTags/_colors.js","../../node_modules/compromise/src/1-one/tag/methods/addTags/02-fmt.js","../../node_modules/compromise/src/1-one/tag/methods/addTags/01-validate.js","../../node_modules/compromise/src/1-one/tag/methods/index.js","../../node_modules/compromise/src/1-one/tag/methods/unTag.js","../../node_modules/compromise/src/1-one/tag/methods/addTags/index.js","../../node_modules/compromise/src/1-one/tag/api/tag.js","../../node_modules/compromise/src/1-one/tag/lib.js","../../node_modules/compromise/src/1-one/tag/compute/tagRank.js","../../node_modules/compromise/src/1-one/tag/plugin.js","../../node_modules/compromise/src/1-one/tag/api/index.js","../../node_modules/compromise/src/1-one/tokenize/methods/01-sentences/01-simple-split.js","../../node_modules/compromise/src/1-one/tokenize/methods/01-sentences/02-simple-merge.js","../../node_modules/compromise/src/1-one/tokenize/methods/01-sentences/04-quote-merge.js","../../node_modules/compromise/src/1-one/tokenize/methods/01-sentences/05-parens-merge.js","../../node_modules/compromise/src/1-one/tokenize/methods/01-sentences/index.js","../../node_modules/compromise/src/1-one/tokenize/methods/02-terms/01-hyphens.js","../../node_modules/compromise/src/1-one/tokenize/methods/02-terms/02-slashes.js","../../node_modules/compromise/src/1-one/tokenize/methods/02-terms/index.js","../../node_modules/compromise/src/1-one/tokenize/methods/03-whitespace/tokenize.js","../../node_modules/compromise/src/1-one/tokenize/compute/normal/02-acronyms.js","../../node_modules/compromise/src/1-one/tokenize/compute/normal/index.js","../../node_modules/compromise/src/1-one/tokenize/compute/normal/01-cleanup.js","../../node_modules/compromise/src/1-one/tokenize/methods/01-sentences/is-sentence.js","../../node_modules/compromise/src/1-one/tokenize/methods/index.js","../../node_modules/compromise/src/1-one/tokenize/methods/unicode.js","../../node_modules/compromise/src/1-one/tokenize/methods/01-sentences/03-smart-merge.js","../../node_modules/compromise/src/1-one/tokenize/methods/02-terms/03-ranges.js","../../node_modules/compromise/src/1-one/tokenize/methods/03-whitespace/index.js","../../node_modules/compromise/src/1-one/tokenize/methods/parse.js","../../node_modules/compromise/src/1-one/tokenize/model/lexicon.js","../../node_modules/compromise/src/1-one/tokenize/model/abbreviations/misc.js","../../node_modules/compromise/src/1-one/tokenize/model/abbreviations/units.js","../../node_modules/compromise/src/1-one/tokenize/model/abbreviations/nouns.js","../../node_modules/compromise/src/1-one/tokenize/model/abbreviations/honorifics.js","../../node_modules/compromise/src/1-one/tokenize/model/abbreviations/months.js","../../node_modules/compromise/src/1-one/tokenize/model/abbreviations/organizations.js","../../node_modules/compromise/src/1-one/tokenize/model/abbreviations/places.js","../../node_modules/compromise/src/1-one/tokenize/model/prefixes.js","../../node_modules/compromise/src/1-one/tokenize/model/unicode.js","../../node_modules/compromise/src/1-one/tokenize/compute/alias.js","../../node_modules/compromise/src/1-one/tokenize/compute/machine.js","../../node_modules/compromise/src/1-one/tokenize/compute/index.js","../../node_modules/compromise/src/1-one/tokenize/compute/freq.js","../../node_modules/compromise/src/1-one/tokenize/compute/offset.js","../../node_modules/compromise/src/1-one/tokenize/compute/reindex.js","../../node_modules/compromise/src/1-one/tokenize/compute/wordCount.js","../../node_modules/compromise/src/1-one/tokenize/plugin.js","../../node_modules/compromise/src/1-one/tokenize/model/index.js","../../node_modules/compromise/src/1-one/tokenize/model/aliases.js","../../node_modules/compromise/src/1-one/tokenize/model/suffixes.js","../../node_modules/compromise/src/1-one/tokenize/model/punctuation.js","../../node_modules/compromise/src/1-one/typeahead/compute.js","../../node_modules/compromise/src/1-one/typeahead/api.js","../../node_modules/compromise/src/1-one/typeahead/lib/index.js","../../node_modules/compromise/src/1-one/typeahead/lib/allPrefixes.js","../../node_modules/compromise/src/1-one/typeahead/plugin.js","../../node_modules/compromise/src/one.js","../../node_modules/compromise/src/2-two/preTagger/model/irregulars/plurals.js","../../node_modules/compromise/src/2-two/preTagger/model/lexicon/_data.js","../../node_modules/efrt/src/pack/fns.js","../../node_modules/efrt/src/pack/histogram.js","../../node_modules/efrt/src/encoding.js","../../node_modules/efrt/src/pack/pack.js","../../node_modules/efrt/src/pack/methods.js","../../node_modules/efrt/src/pack/trie.js","../../node_modules/efrt/src/unpack/symbols.js","../../node_modules/efrt/src/unpack/traverse.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/nouns/toPlural/_rules.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/nouns/toPlural/index.js","../../node_modules/compromise/src/2-two/preTagger/model/lexicon/index.js","../../node_modules/compromise/src/2-two/preTagger/model/lexicon/misc.js","../../node_modules/efrt/src/unpack/index.js","../../node_modules/compromise/src/2-two/preTagger/model/lexicon/emoticons.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/_adj.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/_gerund.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/adj-gerund.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/_noun.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/adj-noun.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/adj-past.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/_verb.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/adj-present.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/noun-gerund.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/noun-verb.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/_person.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/person-date.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/person-noun.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/person-place.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/unit-noun.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/honorific-noun.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/index.js","../../node_modules/compromise/src/2-two/preTagger/model/clues/person-verb.js","../../node_modules/compromise/src/2-two/preTagger/model/patterns/suffixes.js","../../node_modules/compromise/src/2-two/preTagger/model/patterns/prefixes.js","../../node_modules/compromise/src/2-two/preTagger/model/patterns/endsWith.js","../../node_modules/compromise/src/2-two/preTagger/model/patterns/neighbours.js","../../node_modules/compromise/src/2-two/preTagger/model/models/_data.js","../../node_modules/suffix-thumb/src/convert/index.js","../../node_modules/suffix-thumb/src/_lib.js","../../node_modules/suffix-thumb/src/compress/uncompress.js","../../node_modules/suffix-thumb/src/reverse/index.js","../../node_modules/compromise/src/2-two/preTagger/model/models/index.js","../../node_modules/compromise/src/2-two/preTagger/model/orgWords.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/nouns/toSingular/_rules.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/nouns/toSingular/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/nouns/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/verbs/getTense/_guess.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/verbs/getTense/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/verbs/toInfinitive/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/verbs/conjugate/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/verbs/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/adjectives/inflect.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/adjectives/adverbs/lib.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/adjectives/adverbs/toAdjective.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/adjectives/adverbs/toAdverb.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/adjectives/adverbs/toNoun.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/adjectives/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/transform/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/expand/byTag.js","../../node_modules/compromise/src/2-two/preTagger/methods/expand/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/looksPlural.js","../../node_modules/compromise/src/2-two/preTagger/methods/index.js","../../node_modules/compromise/src/2-two/preTagger/methods/quickSplit.js","../../node_modules/compromise/src/2-two/preTagger/model/_expand/irregulars.js","../../node_modules/compromise/src/2-two/preTagger/model/_expand/models.js","../../node_modules/compromise/src/2-two/preTagger/model/_expand/index.js","../../node_modules/compromise/src/2-two/preTagger/model/index.js","../../node_modules/compromise/src/2-two/preTagger/model/regex/regex-normal.js","../../node_modules/compromise/src/2-two/preTagger/model/regex/regex-text.js","../../node_modules/compromise/src/2-two/preTagger/model/regex/regex-numbers.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/00-tagSwitch.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/_fastTag.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/_fillTags.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/01-case.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/02-suffix.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/03-regex.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/05-year.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/01-acronym.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/02-neighbours.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/03-orgWords.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/_adhoc.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/06-switches.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/index.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/2nd-pass/04-prefix.js","../../node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/04-fallback.js","../../node_modules/compromise/src/2-two/preTagger/compute/root.js","../../node_modules/compromise/src/2-two/preTagger/compute/penn.js","../../node_modules/compromise/src/2-two/preTagger/compute/index.js","../../node_modules/compromise/src/2-two/preTagger/tagSet/nouns.js","../../node_modules/compromise/src/2-two/preTagger/tagSet/misc.js","../../node_modules/compromise/src/2-two/preTagger/tagSet/index.js","../../node_modules/compromise/src/2-two/preTagger/tagSet/verbs.js","../../node_modules/compromise/src/2-two/preTagger/tagSet/values.js","../../node_modules/compromise/src/2-two/preTagger/tagSet/dates.js","../../node_modules/compromise/src/2-two/preTagger/plugin.js","../../node_modules/compromise/src/2-two/contraction-two/api/contract.js","../../node_modules/compromise/src/2-two/contraction-two/api/index.js","../../node_modules/compromise/src/2-two/contraction-two/compute/_splice.js","../../node_modules/compromise/src/2-two/contraction-two/compute/apostrophe-s.js","../../node_modules/compromise/src/2-two/contraction-two/compute/apostrophe-d.js","../../node_modules/compromise/src/2-two/contraction-two/compute/isPossessive.js","../../node_modules/compromise/src/2-two/contraction-two/compute/index.js","../../node_modules/compromise/src/2-two/contraction-two/compute/apostrophe-t.js","../../node_modules/compromise/src/2-two/contraction-two/plugin.js","../../node_modules/compromise/src/2-two/postTagger/model/person/ambig-name.js","../../node_modules/compromise/src/2-two/postTagger/model/verbs/imperative.js","../../node_modules/compromise/src/2-two/postTagger/model/index.js","../../node_modules/compromise/src/2-two/postTagger/model/verbs/passive.js","../../node_modules/compromise/src/2-two/postTagger/model/adjective/adjective.js","../../node_modules/compromise/src/2-two/postTagger/model/adjective/adj-adverb.js","../../node_modules/compromise/src/2-two/postTagger/model/adjective/adj-gerund.js","../../node_modules/compromise/src/2-two/postTagger/model/adjective/adj-noun.js","../../node_modules/compromise/src/2-two/postTagger/model/adverb.js","../../node_modules/compromise/src/2-two/postTagger/model/dates/date.js","../../node_modules/compromise/src/2-two/postTagger/model/dates/date-phrase.js","../../node_modules/compromise/src/2-two/postTagger/model/nouns/nouns.js","../../node_modules/compromise/src/2-two/postTagger/model/verbs/noun-gerund.js","../../node_modules/compromise/src/2-two/postTagger/model/verbs/verb-noun.js","../../node_modules/compromise/src/2-two/postTagger/model/numbers/money.js","../../node_modules/compromise/src/2-two/postTagger/model/numbers/fractions.js","../../node_modules/compromise/src/2-two/postTagger/model/numbers/numbers.js","../../node_modules/compromise/src/2-two/postTagger/model/person/person-phrase.js","../../node_modules/compromise/src/2-two/postTagger/model/verbs/verbs.js","../../node_modules/compromise/src/2-two/postTagger/model/adjective/adj-verb.js","../../node_modules/compromise/src/2-two/postTagger/model/verbs/auxiliary.js","../../node_modules/compromise/src/2-two/postTagger/model/verbs/phrasal.js","../../node_modules/compromise/src/2-two/postTagger/model/verbs/adj-gerund.js","../../node_modules/compromise/src/2-two/postTagger/model/_misc.js","../../node_modules/compromise/src/2-two/postTagger/model/orgs/organizations.js","../../node_modules/compromise/src/2-two/postTagger/model/nouns/places.js","../../node_modules/compromise/src/2-two/postTagger/model/conjunctions.js","../../node_modules/compromise/src/2-two/postTagger/compute/index.js","../../node_modules/compromise/src/2-two/postTagger/plugin.js","../../node_modules/compromise/src/2-two/postTagger/api.js","../../node_modules/compromise/src/2-two/lazy/maybeMatch.js","../../node_modules/compromise/src/2-two/lazy/plugin.js","../../node_modules/compromise/src/2-two/lazy/lazyParse.js","../../node_modules/compromise/src/2-two/swap/api/swap-verb.js","../../node_modules/compromise/src/2-two/swap/api/swap.js","../../node_modules/compromise/src/2-two/swap/plugin.js","../../node_modules/compromise/src/two.js","../../node_modules/compromise/src/3-three/chunker/api/clauses.js","../../node_modules/compromise/src/3-three/chunker/compute/01-easy.js","../../node_modules/compromise/src/3-three/chunker/compute/03-matcher.js","../../node_modules/compromise/src/3-three/chunker/compute/04-fallback.js","../../node_modules/compromise/src/3-three/chunker/compute/index.js","../../node_modules/compromise/src/3-three/chunker/compute/02-neighbours.js","../../node_modules/compromise/src/3-three/chunker/compute/05-fixUp.js","../../node_modules/compromise/src/3-three/chunker/plugin.js","../../node_modules/compromise/src/3-three/chunker/api/api.js","../../node_modules/compromise/src/3-three/chunker/api/chunks.js","../../node_modules/compromise/src/3-three/misc/possessives/index.js","../../node_modules/compromise/src/3-three/misc/parentheses/fns.js","../../node_modules/compromise/src/3-three/misc/parentheses/index.js","../../node_modules/compromise/src/3-three/misc/quotations/fns.js","../../node_modules/compromise/src/3-three/misc/quotations/index.js","../../node_modules/compromise/src/3-three/misc/acronyms/index.js","../../node_modules/compromise/src/3-three/misc/adjectives/index.js","../../node_modules/compromise/src/3-three/misc/selections/index.js","../../node_modules/compromise/src/3-three/misc/plugin.js","../../node_modules/compromise/src/3-three/misc/adverbs/index.js","../../node_modules/compromise/src/3-three/normalize/methods.js","../../node_modules/compromise/src/3-three/normalize/api.js","../../node_modules/compromise/src/3-three/normalize/plugin.js","../../node_modules/compromise/src/3-three/nouns/find.js","../../node_modules/compromise/src/3-three/nouns/api/isSubordinate.js","../../node_modules/compromise/src/3-three/nouns/api/isPlural.js","../../node_modules/compromise/src/3-three/nouns/api/parse.js","../../node_modules/compromise/src/3-three/nouns/api/toJSON.js","../../node_modules/compromise/src/3-three/nouns/api/toPlural.js","../../node_modules/compromise/src/3-three/nouns/api/toSingular.js","../../node_modules/compromise/src/3-three/nouns/api/api.js","../../node_modules/compromise/src/3-three/nouns/plugin.js","../../node_modules/compromise/src/3-three/numbers/numbers/parse/toNumber/data.js","../../node_modules/compromise/src/3-three/numbers/numbers/parse/toNumber/validate.js","../../node_modules/compromise/src/3-three/numbers/numbers/parse/toNumber/parseDecimals.js","../../node_modules/compromise/src/3-three/numbers/numbers/parse/toNumber/parseNumeric.js","../../node_modules/compromise/src/3-three/numbers/numbers/parse/toNumber/index.js","../../node_modules/compromise/src/3-three/numbers/numbers/parse/toNumber/findModifiers.js","../../node_modules/compromise/src/3-three/numbers/fractions/parse.js","../../node_modules/compromise/src/3-three/numbers/numbers/_toString.js","../../node_modules/compromise/src/3-three/numbers/numbers/format/toText/data.js","../../node_modules/compromise/src/3-three/numbers/numbers/format/toText/index.js","../../node_modules/compromise/src/3-three/numbers/numbers/format/toOrdinal/textOrdinal.js","../../node_modules/compromise/src/3-three/numbers/fractions/api.js","../../node_modules/compromise/src/3-three/numbers/fractions/convert/toOrdinal.js","../../node_modules/compromise/src/3-three/numbers/fractions/convert/toCardinal.js","../../node_modules/compromise/src/3-three/numbers/fractions/find.js","../../node_modules/compromise/src/3-three/numbers/numbers/find.js","../../node_modules/compromise/src/3-three/numbers/numbers/parse/index.js","../../node_modules/compromise/src/3-three/numbers/numbers/format/suffix.js","../../node_modules/compromise/src/3-three/numbers/numbers/format/index.js","../../node_modules/compromise/src/3-three/numbers/numbers/format/toOrdinal/numOrdinal.js","../../node_modules/compromise/src/3-three/numbers/numbers/api.js","../../node_modules/compromise/src/3-three/numbers/plugin.js","../../node_modules/compromise/src/3-three/redact/plugin.js","../../node_modules/compromise/src/3-three/sentences/parse/index.js","../../node_modules/compromise/src/3-three/sentences/parse/mainClause.js","../../node_modules/compromise/src/3-three/sentences/api.js","../../node_modules/compromise/src/3-three/sentences/plugin.js","../../node_modules/compromise/src/3-three/sentences/conjugate/toPast.js","../../node_modules/compromise/src/3-three/sentences/conjugate/toPresent.js","../../node_modules/compromise/src/3-three/sentences/conjugate/toFuture.js","../../node_modules/compromise/src/3-three/sentences/conjugate/toInfinitive.js","../../node_modules/compromise/src/3-three/sentences/conjugate/toNegative.js","../../node_modules/compromise/src/3-three/sentences/questions.js","../../node_modules/compromise/src/3-three/topics/people/find.js","../../node_modules/compromise/src/3-three/topics/people/parse.js","../../node_modules/compromise/src/3-three/topics/people/gender.js","../../node_modules/compromise/src/3-three/topics/people/api.js","../../node_modules/compromise/src/3-three/topics/topics.js","../../node_modules/compromise/src/3-three/topics/plugin.js","../../node_modules/compromise/src/3-three/topics/places/api.js","../../node_modules/compromise/src/3-three/topics/places/find.js","../../node_modules/compromise/src/3-three/topics/orgs/api.js","../../node_modules/compromise/src/3-three/verbs/find.js","../../node_modules/compromise/src/3-three/verbs/api/parse/adverbs.js","../../node_modules/compromise/src/3-three/verbs/api/parse/index.js","../../node_modules/compromise/src/3-three/verbs/api/parse/root.js","../../node_modules/compromise/src/3-three/verbs/api/parse/grammar/forms.js","../../node_modules/compromise/src/3-three/verbs/api/parse/grammar/index.js","../../node_modules/compromise/src/3-three/verbs/api/parse/getSubject.js","../../node_modules/compromise/src/3-three/verbs/api/lib.js","../../node_modules/compromise/src/3-three/verbs/api/toJSON.js","../../node_modules/compromise/src/3-three/verbs/api/conjugate/toInfinitive.js","../../node_modules/compromise/src/3-three/verbs/api/conjugate/toPast.js","../../node_modules/compromise/src/3-three/verbs/api/conjugate/toPresent.js","../../node_modules/compromise/src/3-three/verbs/api/conjugate/toFuture.js","../../node_modules/compromise/src/3-three/verbs/api/conjugate/toGerund.js","../../node_modules/compromise/src/3-three/verbs/api/conjugate/toNegative.js","../../node_modules/compromise/src/3-three/verbs/api/api.js","../../node_modules/compromise/src/3-three/verbs/plugin.js","../../node_modules/compromise/src/three.js","../../src/sanitise.ts","../../src/extract.ts","../../src/IngredientsForm.svelte","../../src/IngredientsTable.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'itemscope',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.53.1' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","<nav>\n  <ul>\n    <li><a href=\"https://danpalmer.club\">🛫 Take me to Dan's Site</a></li>\n  </ul>\n</nav>\n\n<style>\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n</style>","<section>\n  <h2>Introduction</h2>\n  <p>Over the last two years (2020 - 2021), I have become more interested with baking and cooking, but more on the baking side. However I've noticed that I've become mildly infuriated with having to constantly convert ingredient measurements to something sensible (CUPS IS NOT SENSIBLE!).</p>\n  <p>I would like to create a single page application that allows me to paste in my list of ingredients and then very easily convert it to other measurements, merge items and cross them off as I shop. If I can at least get 80% accuracy, I will be happy.</p>\n  <p>Step one of this problem is the ability to extract out a value, unit and ingredient. <strong>This is step one.</strong></p>\n  <hr />\n  <h2>Method</h2>\n  <p>Recipe ingredients in English typically follow these patterns:</p>\n  <ul>\n    <li>Ingredient</li>\n    <li>Value ingredient</li>\n    <li>Value unit ingredient</li>\n  </ul>\n  <p>However there are a lot of variations based on each of these values. The ingredient could include adjectives (fresh basil). The value might be a decimal or contain fraction symbols. And units might be written as an abbreviations (tsp for teaspoons, c. for cups).</p>\n  <p>The first problem we attempt to solve is sanitisation of the input content. This replaces fraction entities with written slashes, and tidies up units and whitespace.</p>\n  <pre><code>\n2½ c. sugar -> 2 1/2 cup sugar\n  </code></pre>\n  <p>The second problem attempts to use <a href=\"https://en.wikipedia.org/wiki/Natural_language_processing\">natural language processing</a> to identify the type of words in an ingredient line.</p>\n  <p>To help us, we can use <a href=\"https://compromise.cool\">compromise</a>. This attaches <a href=\"https://observablehq.com/@spencermountain/compromise-tags\">different tags</a> to each word, that we can then use to identify what part is a value, unit and ingredient.</p>\n  <pre><code>\n{`\n[\n  {\n    text: \"2\",\n    terms: [\n      {\n        text: \"2\",\n        tags: [\"Cardinal\", \"Value\", \"NumericValue\"],\n        pre: \"\",\n        post: \" \",\n      },\n    ],\n  },\n  {\n    text: \"1/2\",\n    terms: [\n      {\n        text: \"1/2\",\n        tags: [\"Fraction\", \"Value\", \"NumericValue\"],\n        pre: \"\",\n        post: \" \",\n      },\n    ],\n  },\n  {\n    text: \"cup\",\n    terms: [\n      {\n        text: \"cup\",\n        tags: [\"Abbreviation\", \"Unit\", \"Noun\", \"Singular\"],\n        pre: \"\",\n        post: \"  \",\n      },\n    ],\n  },\n  {\n    text: \"sugar\",\n    terms: [\n      {\n        text: \"sugar\",\n        tags: [\"Uncountable\", \"Noun\"],\n        pre: \"\",\n        post: \"\"\n      },\n    ],\n  },\n]\n`}\n  </code></pre>\n</section>","let methods = {\n  one: {},\n  two: {},\n  three: {},\n  four: {},\n}\n\nlet model = {\n  one: {},\n  two: {},\n  three: {},\n}\nlet compute = {}\nlet hooks = []\n\nexport default { methods, model, compute, hooks }\n","const isArray = input => Object.prototype.toString.call(input) === '[object Array]'\n\nconst fns = {\n  /** add metadata to term objects */\n  compute: function (input) {\n    const { world } = this\n    const compute = world.compute\n    // do one method\n    if (typeof input === 'string' && compute.hasOwnProperty(input)) {\n      compute[input](this)\n    }\n    // allow a list of methods\n    else if (isArray(input)) {\n      input.forEach(name => {\n        if (world.compute.hasOwnProperty(name)) {\n          compute[name](this)\n        } else {\n          console.warn('no compute:', input) // eslint-disable-line\n        }\n      })\n    }\n    // allow a custom compute function\n    else if (typeof input === 'function') {\n      input(this)\n    } else {\n      console.warn('no compute:', input) // eslint-disable-line\n    }\n    return this\n  },\n}\nexport default fns\n","// wrappers for loops in javascript arrays\n\nconst forEach = function (cb) {\n  let ptrs = this.fullPointer\n  ptrs.forEach((ptr, i) => {\n    let view = this.update([ptr])\n    cb(view, i)\n  })\n  return this\n}\n\nconst map = function (cb, empty) {\n  let ptrs = this.fullPointer\n  let res = ptrs.map((ptr, i) => {\n    let view = this.update([ptr])\n    let out = cb(view, i)\n    // if we returned nothing, return a view\n    if (out === undefined) {\n      return this.none()\n    }\n    return out\n  })\n  if (res.length === 0) {\n    return empty || this.update([])\n  }\n  // return an array of values, or View objects?\n  // user can return either from their callback\n  if (res[0] !== undefined) {\n    // array of strings\n    if (typeof res[0] === 'string') {\n      return res\n    }\n    // array of objects\n    if (typeof res[0] === 'object' && (res[0] === null || !res[0].isView)) {\n      return res\n    }\n  }\n  // return a View object\n  let all = []\n  res.forEach(ptr => {\n    all = all.concat(ptr.fullPointer)\n  })\n  return this.toView(all)\n}\n\nconst filter = function (cb) {\n  let ptrs = this.fullPointer\n  ptrs = ptrs.filter((ptr, i) => {\n    let view = this.update([ptr])\n    return cb(view, i)\n  })\n  let res = this.update(ptrs)\n  return res\n}\n\nconst find = function (cb) {\n  let ptrs = this.fullPointer\n  let found = ptrs.find((ptr, i) => {\n    let view = this.update([ptr])\n    return cb(view, i)\n  })\n  return this.update([found])\n}\n\nconst some = function (cb) {\n  let ptrs = this.fullPointer\n  return ptrs.some((ptr, i) => {\n    let view = this.update([ptr])\n    return cb(view, i)\n  })\n}\n\nconst random = function (n = 1) {\n  let ptrs = this.fullPointer\n  let r = Math.floor(Math.random() * ptrs.length)\n  //prevent it from going over the end\n  if (r + n > this.length) {\n    r = this.length - n\n    r = r < 0 ? 0 : r\n  }\n  ptrs = ptrs.slice(r, r + n)\n  return this.update(ptrs)\n}\nexport default { forEach, map, filter, find, some, random }\n","const utils = {\n  /** */\n  termList: function () {\n    return this.methods.one.termList(this.docs)\n  },\n  /** return individual terms*/\n  terms: function (n) {\n    let m = this.match('.')\n    // this is a bit faster than .match('.') \n    // let ptrs = []\n    // this.docs.forEach((terms) => {\n    //   terms.forEach((term) => {\n    //     let [y, x] = term.index || []\n    //     ptrs.push([y, x, x + 1])\n    //   })\n    // })\n    // let m = this.update(ptrs)\n    return typeof n === 'number' ? m.eq(n) : m\n  },\n\n  /** */\n  groups: function (group) {\n    if (group || group === 0) {\n      return this.update(this._groups[group] || [])\n    }\n    // return an object of Views\n    let res = {}\n    Object.keys(this._groups).forEach(k => {\n      res[k] = this.update(this._groups[k])\n    })\n    // this._groups = null\n    return res\n  },\n  /** */\n  eq: function (n) {\n    let ptr = this.pointer\n    if (!ptr) {\n      ptr = this.docs.map((_doc, i) => [i])\n    }\n    if (ptr[n]) {\n      return this.update([ptr[n]])\n    }\n    return this.none()\n  },\n  /** */\n  first: function () {\n    return this.eq(0)\n  },\n  /** */\n  last: function () {\n    let n = this.fullPointer.length - 1\n    return this.eq(n)\n  },\n\n  /** grab term[0] for every match */\n  firstTerms: function () {\n    return this.match('^.')\n  },\n\n  /** grab the last term for every match  */\n  lastTerms: function () {\n    return this.match('.$')\n  },\n\n  /** */\n  slice: function (min, max) {\n    let pntrs = this.pointer || this.docs.map((_o, n) => [n])\n    pntrs = pntrs.slice(min, max)\n    return this.update(pntrs)\n  },\n\n  /** return a view of the entire document */\n  all: function () {\n    return this.update().toView()\n  },\n  /**  */\n  fullSentences: function () {\n    let ptrs = this.fullPointer.map(a => [a[0]]) //lazy!\n    return this.update(ptrs).toView()\n  },\n  /** return a view of no parts of the document */\n  none: function () {\n    return this.update([])\n  },\n\n  /** are these two views looking at the same words? */\n  isDoc: function (b) {\n    if (!b || !b.isView) {\n      return false\n    }\n    let aPtr = this.fullPointer\n    let bPtr = b.fullPointer\n    if (!aPtr.length === bPtr.length) {\n      return false\n    }\n    // ensure pointers are the same\n    return aPtr.every((ptr, i) => {\n      if (!bPtr[i]) {\n        return false\n      }\n      // ensure [n, start, end] are all the same\n      return ptr[0] === bPtr[i][0] && ptr[1] === bPtr[i][1] && ptr[2] === bPtr[i][2]\n    })\n  },\n\n  /** how many seperate terms does the document have? */\n  wordCount: function () {\n    return this.docs.reduce((count, terms) => {\n      count += terms.filter(t => t.text !== '').length\n      return count\n    }, 0)\n  },\n\n  // is the pointer the full sentence?\n  isFull: function () {\n    let ptrs = this.pointer\n    if (!ptrs) {\n      return true\n    }\n    let document = this.document\n    for (let i = 0; i < ptrs.length; i += 1) {\n      let [n, start, end] = ptrs[i]\n      // it's not the start\n      if (n !== i || start !== 0) {\n        return false\n      }\n      // it's too short\n      if (document[n].length > end) {\n        return false\n      }\n    }\n    return true\n  }\n\n}\nutils.group = utils.groups\nutils.fullSentence = utils.fullSentences\nutils.sentence = utils.fullSentences\nutils.lastTerm = utils.lastTerms\nutils.firstTerm = utils.firstTerms\nexport default utils\n","import compute from './compute.js'\nimport loops from './loops.js'\nimport util from './utils.js'\n\nconst methods = Object.assign({}, util, compute, loops)\n\n// aliases\nmethods.get = methods.eq\nexport default methods\n","import world from './world.js'\nimport api from './methods/index.js'\n\nclass View {\n  constructor(document, pointer, groups = {}) {\n    // invisible props\n    [\n      ['document', document],\n      ['world', world],\n      ['_groups', groups],\n      ['_cache', null],\n      ['viewType', 'View']\n    ].forEach(a => {\n      Object.defineProperty(this, a[0], {\n        value: a[1],\n        writable: true,\n      })\n    })\n    this.ptrs = pointer\n  }\n  /* getters:  */\n  get docs() {\n    let docs = this.document\n    if (this.ptrs) {\n      docs = world.methods.one.getDoc(this.ptrs, this.document)\n    }\n    return docs\n  }\n  get pointer() {\n    return this.ptrs\n  }\n  get methods() {\n    return this.world.methods\n  }\n  get model() {\n    return this.world.model\n  }\n  get hooks() {\n    return this.world.hooks\n  }\n  get isView() {\n    return true //this comes in handy sometimes\n  }\n  // is the view not-empty?\n  get found() {\n    return this.docs.length > 0\n  }\n  // how many matches we have\n  get length() {\n    return this.docs.length\n  }\n  // return a more-hackable pointer\n  get fullPointer() {\n    let { docs, ptrs, document } = this\n    // compute a proper pointer, from docs\n    let pointers = ptrs || docs.map((_d, n) => [n])\n    // do we need to repair it, first?\n    return pointers.map(a => {\n      let [n, start, end, id, endId] = a\n      start = start || 0\n      end = end || (document[n] || []).length\n      //add frozen id, for good-measure\n      if (document[n] && document[n][start]) {\n        id = id || document[n][start].id\n        if (document[n][end - 1]) {\n          endId = endId || document[n][end - 1].id\n        }\n      }\n      return [n, start, end, id, endId]\n    })\n  }\n  // create a new View, from this one\n  update(pointer) {\n    let m = new View(this.document, pointer)\n    // send the cache down, too?\n    if (this._cache && pointer && pointer.length > 0) {\n      // only keep cache if it's a full-sentence\n      let cache = []\n      pointer.forEach((ptr, i) => {\n        let [n, start, end] = ptr\n        if (ptr.length === 1) {\n          cache[i] = this._cache[n]\n        } else if (start === 0 && this.document[n].length === end) {\n          cache[i] = this._cache[n]\n        }\n      })\n      if (cache.length > 0) {\n        m._cache = cache\n      }\n    }\n    m.world = this.world\n    return m\n  }\n  // create a new View, from this one\n  toView(pointer) {\n    return new View(this.document, pointer || this.pointer)\n  }\n  fromText(input) {\n    const { methods } = this\n    //assume ./01-tokenize is installed\n    let document = methods.one.tokenize.fromString(input, this.world)\n    let doc = new View(document)\n    doc.world = this.world\n    doc.compute(['normal', 'lexicon'])\n    if (this.world.compute.preTagger) {\n      doc.compute('preTagger')\n    }\n    return doc\n  }\n  clone() {\n    // clone the whole document\n    let document = this.document.slice(0)\n    document = document.map(terms => {\n      return terms.map(term => {\n        term = Object.assign({}, term)\n        term.tags = new Set(term.tags)\n        return term\n      })\n    })\n    // clone only sub-document ?\n    let m = this.update(this.pointer)\n    m.document = document\n    m._cache = this._cache //clone this too?\n    return m\n  }\n}\nObject.assign(View.prototype, api)\nexport default View\n","const isObject = function (item) {\n  return item && typeof item === 'object' && !Array.isArray(item)\n}\n\n// recursive merge of objects\nfunction mergeDeep(model, plugin) {\n  if (isObject(plugin)) {\n    for (const key in plugin) {\n      if (isObject(plugin[key])) {\n        if (!model[key]) Object.assign(model, { [key]: {} })\n        mergeDeep(model[key], plugin[key]) //recursion\n        // } else if (isArray(plugin[key])) {\n        // console.log(key)\n        // console.log(model)\n      } else {\n        Object.assign(model, { [key]: plugin[key] })\n      }\n    }\n  }\n  return model\n}\n// const merged = mergeDeep({ a: 1 }, { b: { c: { d: { e: 12345 } } } })\n// console.dir(merged, { depth: 5 })\n\n// vroom\nfunction mergeQuick(model, plugin) {\n  for (const key in plugin) {\n    model[key] = model[key] || {}\n    Object.assign(model[key], plugin[key])\n  }\n  return model\n}\n\nconst addIrregulars = function (model, conj) {\n  let m = model.two.models || {}\n  Object.keys(conj).forEach(k => {\n    // verb forms\n    if (conj[k].pastTense) {\n      if (m.toPast) {\n        m.toPast.exceptions[k] = conj[k].pastTense\n      }\n      if (m.fromPast) {\n        m.fromPast.exceptions[conj[k].pastTense] = k\n      }\n    }\n    if (conj[k].presentTense) {\n      if (m.toPresent) {\n        m.toPresent.exceptions[k] = conj[k].presentTense\n      }\n      if (m.fromPresent) {\n        m.fromPresent.exceptions[conj[k].presentTense] = k\n      }\n    }\n    if (conj[k].gerund) {\n      if (m.toGerund) {\n        m.toGerund.exceptions[k] = conj[k].gerund\n      }\n      if (m.fromGerund) {\n        m.fromGerund.exceptions[conj[k].gerund] = k\n      }\n    }\n    // adjective forms\n    if (conj[k].comparative) {\n      if (m.toComparative) {\n        m.toComparative.exceptions[k] = conj[k].comparative\n      }\n      if (m.fromComparative) {\n        m.fromComparative.exceptions[conj[k].comparative] = k\n      }\n    }\n    if (conj[k].superlative) {\n      if (m.toSuperlative) {\n        m.toSuperlative.exceptions[k] = conj[k].superlative\n      }\n      if (m.fromSuperlative) {\n        m.fromSuperlative.exceptions[conj[k].superlative] = k\n      }\n    }\n  })\n}\n\nconst extend = function (plugin, world, View, nlp) {\n  const { methods, model, compute, hooks } = world\n  if (plugin.methods) {\n    mergeQuick(methods, plugin.methods)\n  }\n  if (plugin.model) {\n    mergeDeep(model, plugin.model)\n  }\n  if (plugin.irregulars) {\n    addIrregulars(model, plugin.irregulars)\n  }\n  // shallow-merge compute\n  if (plugin.compute) {\n    Object.assign(compute, plugin.compute)\n  }\n  // append new hooks\n  if (hooks) {\n    world.hooks = hooks.concat(plugin.hooks || [])\n  }\n  // assign new class methods\n  if (plugin.api) {\n    plugin.api(View)\n  }\n  if (plugin.lib) {\n    Object.keys(plugin.lib).forEach(k => nlp[k] = plugin.lib[k])\n  }\n  if (plugin.tags) {\n    nlp.addTags(plugin.tags)\n  }\n  if (plugin.words) {\n    nlp.addWords(plugin.words)\n  }\n  if (plugin.mutate) {\n    plugin.mutate(world)\n  }\n}\nexport default extend\n","const isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\n// internal Term objects are slightly different\nconst fromJson = function (json) {\n  return json.map(o => {\n    return o.terms.map(term => {\n      if (isArray(term.tags)) {\n        term.tags = new Set(term.tags)\n      }\n      return term\n    })\n  })\n}\n\n// interpret an array-of-arrays\nconst preTokenized = function (arr) {\n  return arr.map((a) => {\n    return a.map(str => {\n      return {\n        text: str,\n        normal: str,//cleanup\n        pre: '',\n        post: ' ',\n        tags: new Set()\n      }\n    })\n  })\n}\n\nconst inputs = function (input, View, world) {\n  const { methods } = world\n  let doc = new View([])\n  doc.world = world\n  // support a number\n  if (typeof input === 'number') {\n    input = String(input)\n  }\n  // return empty doc\n  if (!input) {\n    return doc\n  }\n  // parse a string\n  if (typeof input === 'string') {\n    let document = methods.one.tokenize.fromString(input, world)\n    return new View(document)\n  }\n  // handle compromise View\n  if (isObject(input) && input.isView) {\n    return new View(input.document, input.ptrs)\n  }\n  // handle json input\n  if (isArray(input)) {\n    // pre-tokenized array-of-arrays \n    if (isArray(input[0])) {\n      let document = preTokenized(input)\n      return new View(document)\n    }\n    // handle json output\n    let document = fromJson(input)\n    return new View(document)\n  }\n  return doc\n}\nexport default inputs","import View from './API/View.js'\nimport tmpWrld from './API/world.js'\nimport version from './_version.js'\nimport extend from './API/extend.js'\nimport { verbose } from './API/_lib.js'\nimport handleInputs from './API/inputs.js'\n\nlet world = Object.assign({}, tmpWrld)\n\nconst nlp = function (input, lex) {\n  if (lex) {\n    nlp.addWords(lex)\n  }\n  let doc = handleInputs(input, View, world)\n  if (input) {\n    doc.compute(world.hooks)\n  }\n  return doc\n}\nObject.defineProperty(nlp, '_world', {\n  value: world,\n  writable: true,\n})\n\n/** don't run the POS-tagger */\nnlp.tokenize = function (input, lex) {\n  const { compute } = this._world\n  // add user-given words to lexicon\n  if (lex) {\n    nlp.addWords(lex)\n  }\n  // run the tokenizer\n  let doc = handleInputs(input, View, world)\n  // give contractions a shot, at least\n  if (compute.contractions) {\n    doc.compute(['alias', 'normal', 'machine', 'contractions']) //run it if we've got it\n  }\n  return doc\n}\n\n/** extend compromise functionality */\nnlp.plugin = function (plugin) {\n  extend(plugin, this._world, View, this)\n  return this\n}\nnlp.extend = nlp.plugin\n\n\n/** reach-into compromise internals */\nnlp.world = function () {\n  return this._world\n}\nnlp.model = function () {\n  return this._world.model\n}\nnlp.methods = function () {\n  return this._world.methods\n}\nnlp.hooks = function () {\n  return this._world.hooks\n}\n\n/** log the decision-making to console */\nnlp.verbose = verbose\n/** current library release version */\nnlp.version = version\n\nexport default nlp\n","\n/** log the decision-making to console */\nconst verbose = function (set) {\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env //use window, in browser\n  env.DEBUG_TAGS = set === 'tagger' || set === true ? true : ''\n  env.DEBUG_MATCH = set === 'match' || set === true ? true : ''\n  env.DEBUG_CHUNKS = set === 'chunker' || set === true ? true : ''\n  return this\n}\n\nexport { verbose }","export default '14.7.1'","const methods = {\n  /** */\n  cache: function () {\n    this._cache = this.methods.one.cacheDoc(this.document)\n    return this\n  },\n  /** */\n  uncache: function () {\n    this._cache = null\n    return this\n  },\n}\nconst addAPI = function (View) {\n  Object.assign(View.prototype, methods)\n}\nexport default addAPI\n","\nexport default {\n  cache: function (view) {\n    view._cache = view.methods.one.cacheDoc(view.document)\n  }\n}","import methods from './methods/index.js'\nimport api from './api.js'\nimport compute from './compute.js'\n\nexport default {\n  api,\n  compute,\n  methods,\n}\n","import cacheDoc from './cacheDoc.js'\n\nexport default {\n  one: {\n    cacheDoc,\n  },\n}\n","const createCache = function (document) {\n  let cache = document.map(terms => {\n    let stuff = new Set()\n    terms.forEach(term => {\n      // add words\n      if (term.normal !== '') {\n        stuff.add(term.normal)\n      }\n      // cache switch-status - '%Noun|Verb%'\n      if (term.switch) {\n        stuff.add(`%${term.switch}%`)\n      }\n      // cache implicit words, too\n      if (term.implicit) {\n        stuff.add(term.implicit)\n      }\n      if (term.machine) {\n        stuff.add(term.machine)\n      }\n      if (term.root) {\n        stuff.add(term.root)\n      }\n      // cache slashes words, etc\n      if (term.alias) {\n        term.alias.forEach(str => stuff.add(str))\n      }\n      let tags = Array.from(term.tags)\n      for (let t = 0; t < tags.length; t += 1) {\n        stuff.add('#' + tags[t])\n      }\n    })\n    return stuff\n  })\n  return cache\n}\nexport default createCache\n","// case logic\nconst isTitleCase = (str) => /^\\p{Lu}[\\p{Ll}'’]/u.test(str) || /^\\p{Lu}$/u.test(str)\nconst toTitleCase = (str) => str.replace(/^\\p{Ll}/u, x => x.toUpperCase())\nconst toLowerCase = (str) => str.replace(/^\\p{Lu}/u, x => x.toLowerCase())\n\n// splice an array into an array\nconst spliceArr = (parent, index, child) => {\n  // tag them as dirty\n  child.forEach(term => term.dirty = true)\n  if (parent) {\n    let args = [index, 0].concat(child)\n    Array.prototype.splice.apply(parent, args)\n  }\n  return parent\n}\n\n// add a space at end, if required\nconst endSpace = function (terms) {\n  const hasSpace = / $/\n  const hasDash = /[-–—]/\n  let lastTerm = terms[terms.length - 1]\n  if (lastTerm && !hasSpace.test(lastTerm.post) && !hasDash.test(lastTerm.post)) {\n    lastTerm.post += ' '\n  }\n}\n\n// sentence-ending punctuation should move in append\nconst movePunct = (source, end, needle) => {\n  const juicy = /[-.?!,;:)–—'\"]/g\n  let wasLast = source[end - 1]\n  if (!wasLast) {\n    return\n  }\n  let post = wasLast.post\n  if (juicy.test(post)) {\n    let punct = post.match(juicy).join('') //not perfect\n    let last = needle[needle.length - 1]\n    last.post = punct + last.post\n    // remove it, from source\n    wasLast.post = wasLast.post.replace(juicy, '')\n  }\n}\n\n\nconst moveTitleCase = function (home, start, needle) {\n  let from = home[start]\n  // should we bother?\n  if (start !== 0 || !isTitleCase(from.text)) {\n    return\n  }\n  // titlecase new first term\n  needle[0].text = toTitleCase(needle[0].text)\n  // should we un-titlecase the old word?\n  let old = home[start]\n  if (old.tags.has('ProperNoun') || old.tags.has('Acronym')) {\n    return\n  }\n  if (isTitleCase(old.text) && old.text.length > 1) {\n    old.text = toLowerCase(old.text)\n  }\n}\n\n// put these words before the others\nconst cleanPrepend = function (home, ptr, needle, document) {\n  let [n, start, end] = ptr\n  // introduce spaces appropriately\n  if (start === 0) {\n    // at start - need space in insert\n    endSpace(needle)\n  } else if (end === document[n].length) {\n    // at end - need space in home\n    endSpace(needle)\n  } else {\n    // in middle - need space in home and insert\n    endSpace(needle)\n    endSpace([home[ptr[1]]])\n  }\n  moveTitleCase(home, start, needle)\n  // movePunct(home, end, needle)\n  spliceArr(home, start, needle)\n}\n\nconst cleanAppend = function (home, ptr, needle, document) {\n  let [n, , end] = ptr\n  let total = (document[n] || []).length\n  if (end < total) {\n    // are we in the middle?\n    // add trailing space on self\n    movePunct(home, end, needle)\n    endSpace(needle)\n  } else if (total === end) {\n    // are we at the end?\n    // add a space to predecessor\n    endSpace(home)\n    // very end, move period\n    movePunct(home, end, needle)\n    // is there another sentence after?\n    if (document[n + 1]) {\n      needle[needle.length - 1].post += ' '\n    }\n  }\n  spliceArr(home, ptr[2], needle)\n  // set new endId\n  ptr[4] = needle[needle.length - 1].id\n}\n\nexport { cleanPrepend, cleanAppend, spliceArr }\n","/*\nunique & ordered term ids, based on time & term index\n\nBase 36 (numbers+ascii)\n  3 digit 4,600\n  2 digit 1,200\n  1 digit 36\n\n  TTT|NNN|II|R\n\nTTT -> 46 terms since load\nNNN -> 46 thousand sentences (>1 inf-jest)\nII  -> 1,200 words in a sentence (nuts)\nR   -> 1-36 random number \n\nnovels: \n  avg 80,000 words\n    15 words per sentence\n  5,000 sentences\n\nInfinite Jest:\n  36,247 sentences\n  https://en.wikipedia.org/wiki/List_of_longest_novels\n\ncollisions are more-likely after\n    46 seconds have passed,\n  and \n    after 46-thousand sentences\n\n*/\nlet index = 0\n\nconst pad3 = (str) => {\n  str = str.length < 3 ? '0' + str : str\n  return str.length < 3 ? '0' + str : str\n}\n\nconst toId = function (term) {\n  let [n, i] = term.index || [0, 0]\n  index += 1\n\n  //don't overflow index\n  index = index > 46655 ? 0 : index\n  //don't overflow sentences\n  n = n > 46655 ? 0 : n\n  // //don't overflow terms\n  i = i > 1294 ? 0 : i\n\n  // 3 digits for time\n  let id = pad3(index.toString(36))\n  // 3 digit  for sentence index (46k)\n  id += pad3(n.toString(36))\n\n  // 1 digit for term index (36)\n  let tx = i.toString(36)\n  tx = tx.length < 2 ? '0' + tx : tx //pad2\n  id += tx\n\n  // 1 digit random number\n  let r = parseInt(Math.random() * 36, 10)\n  id += (r).toString(36)\n\n  return term.normal + '|' + id.toUpperCase()\n}\n\nexport default toId\n\n// setInterval(() => console.log(toId(4, 12)), 100)\n","import { cleanAppend, cleanPrepend } from './lib/insert.js'\nimport uuid from '../compute/uuid.js'\n// are we inserting inside a contraction?\n// expand it first\nconst expand = function (m) {\n  if (m.has('@hasContraction') && typeof m.contractions === 'function') {//&& m.after('^.').has('@hasContraction')\n    let more = m.grow('@hasContraction')\n    more.contractions().expand()\n  }\n}\n\nconst isArray = (arr) => Object.prototype.toString.call(arr) === '[object Array]'\n\n// set new ids for each terms\nconst addIds = function (terms) {\n  terms = terms.map((term) => {\n    term.id = uuid(term)\n    return term\n  })\n  return terms\n}\n\nconst getTerms = function (input, world) {\n  const { methods } = world\n  // create our terms from a string\n  if (typeof input === 'string') {\n    return methods.one.tokenize.fromString(input, world)[0] //assume one sentence\n  }\n  //allow a view object\n  if (typeof input === 'object' && input.isView) {\n    return input.clone().docs[0] || [] //assume one sentence\n  }\n  //allow an array of terms, too\n  if (isArray(input)) {\n    return isArray(input[0]) ? input[0] : input\n  }\n  return []\n}\n\nconst insert = function (input, view, prepend) {\n  const { document, world } = view\n  view.uncache()\n  // insert words at end of each doc\n  let ptrs = view.fullPointer\n  let selfPtrs = view.fullPointer\n  view.forEach((m, i) => {\n    let ptr = m.fullPointer[0]\n    let [n] = ptr\n    // add-in the words\n    let home = document[n]\n    let terms = getTerms(input, world)\n    // are we inserting nothing?\n    if (terms.length === 0) {\n      return\n    }\n    terms = addIds(terms)\n    if (prepend) {\n      expand(view.update([ptr]).firstTerm())\n      cleanPrepend(home, ptr, terms, document)\n    } else {\n      expand(view.update([ptr]).lastTerm())\n      cleanAppend(home, ptr, terms, document)\n    }\n    // harden the pointer\n    if (document[n] && document[n][ptr[1]]) {\n      ptr[3] = document[n][ptr[1]].id\n    }\n    // change self backwards by len\n    selfPtrs[i] = ptr\n    // extend the pointer\n    ptr[2] += terms.length\n    ptrs[i] = ptr\n  })\n  let doc = view.toView(ptrs)\n  // shift our self pointer, if necessary\n  view.ptrs = selfPtrs\n  // try to tag them, too\n  doc.compute(['id', 'index', 'lexicon'])\n  if (doc.world.compute.preTagger) {\n    doc.compute('preTagger')\n  }\n  return doc\n}\n\nconst fns = {\n  insertAfter: function (input) {\n    return insert(input, this, false)\n  },\n  insertBefore: function (input) {\n    return insert(input, this, true)\n  },\n\n}\nfns.append = fns.insertAfter\nfns.prepend = fns.insertBefore\nfns.insert = fns.insertAfter\n\nexport default fns\n","const dollarStub = /\\$[0-9a-z]+/g\nconst fns = {}\n\nconst titleCase = function (str) {\n  return str.replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substring(1).toLowerCase())\n}\n\n// doc.replace('foo', (m)=>{})\nconst replaceByFn = function (main, fn) {\n  main.forEach(m => {\n    let out = fn(m)\n    m.replaceWith(out)\n  })\n  return main\n}\n\n// support 'foo $0' replacements\nconst subDollarSign = function (input, main) {\n  if (typeof input !== 'string') {\n    return input\n  }\n  let groups = main.groups()\n  input = input.replace(dollarStub, (a) => {\n    let num = a.replace(/\\$/, '')\n    if (groups.hasOwnProperty(num)) {\n      return groups[num].text()\n    }\n    return a\n  })\n  return input\n}\n\nfns.replaceWith = function (input, keep = {}) {\n  let ptrs = this.fullPointer\n  let main = this\n  this.uncache()\n  if (typeof input === 'function') {\n    return replaceByFn(main, input)\n  }\n  // support 'foo $0' replacements\n  input = subDollarSign(input, main)\n\n  let original = this.update(ptrs)\n  // soften-up pointer\n  ptrs = ptrs.map(ptr => ptr.slice(0, 3))\n  // original.freeze()\n  let oldTags = (original.docs[0] || []).map(term => Array.from(term.tags))\n  // slide this in\n  if (typeof input === 'string') {\n    input = this.fromText(input).compute('id')\n  }\n  main.insertAfter(input)\n  // are we replacing part of a contraction?\n  if (original.has('@hasContraction') && main.contractions) {\n    let more = main.grow('@hasContraction+')\n    more.contractions().expand()\n  }\n  // delete the original terms\n  main.delete(original) //science.\n  // what should we return?\n  let m = main.toView(ptrs).compute(['index', 'lexicon'])\n  if (m.world.compute.preTagger) {\n    m.compute('preTagger')\n  }\n  // replace any old tags\n  if (keep.tags) {\n    m.terms().forEach((term, i) => {\n      term.tagSafe(oldTags[i])\n    })\n  }\n  // try to co-erce case, too\n  if (keep.case && m.docs[0] && m.docs[0][0] && m.docs[0][0].index[1] === 0) {\n    m.docs[0][0].text = titleCase(m.docs[0][0].text)\n  }\n  // console.log(input.docs[0])\n  // let regs = input.docs[0].map(t => {\n  //   return { id: t.id, optional: true }\n  // })\n  // m.after('(a|hoy)').debug()\n  // m.growRight('(a|hoy)').debug()\n  // console.log(m)\n  return m\n}\n\nfns.replace = function (match, input, keep) {\n  if (match && !input) {\n    return this.replaceWith(match, keep)\n  }\n  let m = this.match(match)\n  if (!m.found) {\n    return this\n  }\n  this.soften()\n  return m.replaceWith(input, keep)\n}\nexport default fns\n","\n// transfer sentence-ending punctuation\nconst repairPunct = function (terms, len) {\n  let last = terms.length - 1\n  let from = terms[last]\n  let to = terms[last - len]\n  if (to && from) {\n    to.post += from.post //this isn't perfect.\n    to.post = to.post.replace(/ +([.?!,;:])/, '$1')\n    // don't allow any silly punctuation outcomes like ',!'\n    to.post = to.post.replace(/[,;:]+([.?!])/, '$1')\n  }\n}\n\n// remove terms from document json\nconst pluckOut = function (document, nots) {\n  nots.forEach(ptr => {\n    let [n, start, end] = ptr\n    let len = end - start\n    if (!document[n]) {\n      return // weird!\n    }\n    if (end === document[n].length && end > 1) {\n      repairPunct(document[n], len)\n    }\n    document[n].splice(start, len) // replaces len terms at index start\n  })\n  // remove any now-empty sentences\n  // (foreach + splice = 'mutable filter')\n  for (let i = document.length - 1; i >= 0; i -= 1) {\n    if (document[i].length === 0) {\n      document.splice(i, 1)\n      // remove any trailing whitespace before our removed sentence\n      if (i === document.length && document[i - 1]) {\n        let terms = document[i - 1]\n        let lastTerm = terms[terms.length - 1]\n        if (lastTerm) {\n          lastTerm.post = lastTerm.post.trimEnd()\n        }\n      }\n      // repair any downstream indexes\n      // for (let k = i; k < document.length; k += 1) {\n      //   document[k].forEach(term => term.index[0] -= 1)\n      // }\n    }\n  }\n  return document\n}\n\nexport default pluckOut","import pluckOutTerm from './lib/remove.js'\n\nconst fixPointers = function (ptrs, gonePtrs) {\n  ptrs = ptrs.map(ptr => {\n    let [n] = ptr\n    if (!gonePtrs[n]) {\n      return ptr\n    }\n    gonePtrs[n].forEach(no => {\n      let len = no[2] - no[1]\n      // does it effect our pointer?\n      if (ptr[1] <= no[1] && ptr[2] >= no[2]) {\n        ptr[2] -= len\n      }\n    })\n    return ptr\n  })\n\n  // decrement any pointers after a now-empty pointer\n  ptrs.forEach((ptr, i) => {\n    // is the pointer now empty?\n    if (ptr[1] === 0 && ptr[2] == 0) {\n      // go down subsequent pointers\n      for (let n = i + 1; n < ptrs.length; n += 1) {\n        ptrs[n][0] -= 1\n        if (ptrs[n][0] < 0) {\n          ptrs[n][0] = 0\n        }\n      }\n    }\n  })\n  // remove any now-empty pointers\n  ptrs = ptrs.filter(ptr => ptr[2] - ptr[1] > 0)\n\n  // remove old hard-pointers\n  ptrs = ptrs.map((ptr) => {\n    ptr[3] = null\n    ptr[4] = null\n    return ptr\n  })\n  return ptrs\n}\n\nconst methods = {\n  /** */\n  remove: function (reg) {\n    const { indexN } = this.methods.one.pointer\n    this.uncache()\n    // two modes:\n    //  - a. remove self, from full parent\n    let self = this.all()\n    let not = this\n    //  - b. remove a match, from self\n    if (reg) {\n      self = this\n      not = this.match(reg)\n    }\n    let isFull = !self.ptrs\n    // is it part of a contraction?\n    if (not.has('@hasContraction') && not.contractions) {\n      let more = not.grow('@hasContraction')\n      more.contractions().expand()\n    }\n\n    let ptrs = self.fullPointer\n    let nots = not.fullPointer.reverse()\n    // remove them from the actual document)\n    let document = pluckOutTerm(this.document, nots)\n    // repair our pointers\n    let gonePtrs = indexN(nots)\n    ptrs = fixPointers(ptrs, gonePtrs)\n    // clean up our original inputs\n    self.ptrs = ptrs\n    self.document = document\n    self.compute('index')\n    // if we started zoomed-out, try to end zoomed-out\n    if (isFull) {\n      self.ptrs = undefined\n    }\n    if (!reg) {\n      this.ptrs = []\n      return self.none()\n    }\n    let res = self.toView(ptrs) //return new document\n    return res\n  },\n}\n\n// aliases\nmethods.delete = methods.remove\nexport default methods\n","const methods = {\n  /** add this punctuation or whitespace before each match: */\n  pre: function (str, concat) {\n    if (str === undefined && this.found) {\n      return this.docs[0][0].pre\n    }\n    this.docs.forEach(terms => {\n      let term = terms[0]\n      if (concat === true) {\n        term.pre += str\n      } else {\n        term.pre = str\n      }\n    })\n    return this\n  },\n\n  /** add this punctuation or whitespace after each match: */\n  post: function (str, concat) {\n    if (str === undefined) {\n      let last = this.docs[this.docs.length - 1]\n      return last[last.length - 1].post\n    }\n    this.docs.forEach(terms => {\n      let term = terms[terms.length - 1]\n      if (concat === true) {\n        term.post += str\n      } else {\n        term.post = str\n      }\n    })\n    return this\n  },\n\n  /** remove whitespace from start/end */\n  trim: function () {\n    if (!this.found) {\n      return this\n    }\n    let docs = this.docs\n    let start = docs[0][0]\n    start.pre = start.pre.trimStart()\n    let last = docs[docs.length - 1]\n    let end = last[last.length - 1]\n    end.post = end.post.trimEnd()\n    return this\n  },\n\n  /** connect words with hyphen, and remove whitespace */\n  hyphenate: function () {\n    this.docs.forEach(terms => {\n      //remove whitespace\n      terms.forEach((t, i) => {\n        if (i !== 0) {\n          t.pre = ''\n        }\n        if (terms[i + 1]) {\n          t.post = '-'\n        }\n      })\n    })\n    return this\n  },\n\n  /** remove hyphens between words, and set whitespace */\n  dehyphenate: function () {\n    const hasHyphen = /[-–—]/\n    this.docs.forEach(terms => {\n      //remove whitespace\n      terms.forEach(t => {\n        if (hasHyphen.test(t.post)) {\n          t.post = ' '\n        }\n      })\n    })\n    return this\n  },\n\n  /** add quotations around these matches */\n  toQuotations: function (start, end) {\n    start = start || `\"`\n    end = end || `\"`\n    this.docs.forEach(terms => {\n      terms[0].pre = start + terms[0].pre\n      let last = terms[terms.length - 1]\n      last.post = end + last.post\n    })\n    return this\n  },\n\n  /** add brackets around these matches */\n  toParentheses: function (start, end) {\n    start = start || `(`\n    end = end || `)`\n    this.docs.forEach(terms => {\n      terms[0].pre = start + terms[0].pre\n      let last = terms[terms.length - 1]\n      last.post = end + last.post\n    })\n    return this\n  },\n}\nmethods.deHyphenate = methods.dehyphenate\nmethods.toQuotation = methods.toQuotations\n\nexport default methods\n","/** alphabetical order */\nconst alpha = (a, b) => {\n  if (a.normal < b.normal) {\n    return -1\n  }\n  if (a.normal > b.normal) {\n    return 1\n  }\n  return 0\n}\n\n/** count the # of characters of each match */\nconst length = (a, b) => {\n  let left = a.normal.trim().length\n  let right = b.normal.trim().length\n  if (left < right) {\n    return 1\n  }\n  if (left > right) {\n    return -1\n  }\n  return 0\n}\n\n/** count the # of terms in each match */\nconst wordCount = (a, b) => {\n  if (a.words < b.words) {\n    return 1\n  }\n  if (a.words > b.words) {\n    return -1\n  }\n  return 0\n}\n\n/** count the # of terms in each match */\nconst sequential = (a, b) => {\n  if (a[0] < b[0]) {\n    return 1\n  }\n  if (a[0] > b[0]) {\n    return -1\n  }\n  return a[1] > b[1] ? 1 : -1\n}\n\n/** sort by # of duplicates in the document*/\nconst byFreq = function (arr) {\n  let counts = {}\n  arr.forEach(o => {\n    counts[o.normal] = counts[o.normal] || 0\n    counts[o.normal] += 1\n  })\n  // sort by freq\n  arr.sort((a, b) => {\n    let left = counts[a.normal]\n    let right = counts[b.normal]\n    if (left < right) {\n      return 1\n    }\n    if (left > right) {\n      return -1\n    }\n    return 0\n  })\n  return arr\n}\n\nexport default { alpha, length, wordCount, sequential, byFreq }\n","import methods from './lib/_sort.js'\n// aliases\nconst seqNames = new Set(['index', 'sequence', 'seq', 'sequential', 'chron', 'chronological'])\nconst freqNames = new Set(['freq', 'frequency', 'topk', 'repeats'])\nconst alphaNames = new Set(['alpha', 'alphabetical'])\n\n// support function as parameter\nconst customSort = function (view, fn) {\n  let ptrs = view.fullPointer\n  ptrs = ptrs.sort((a, b) => {\n    a = view.update([a])\n    b = view.update([b])\n    return fn(a, b)\n  })\n  view.ptrs = ptrs //mutate original\n  return view\n}\n\n/** re-arrange the order of the matches (in place) */\nconst sort = function (input) {\n  let { docs, pointer } = this\n  this.uncache()\n  if (typeof input === 'function') {\n    return customSort(this, input)\n  }\n  input = input || 'alpha'\n  let ptrs = pointer || docs.map((_d, n) => [n])\n  let arr = docs.map((terms, n) => {\n    return {\n      index: n,\n      words: terms.length,\n      normal: terms.map(t => t.machine || t.normal || '').join(' '),\n      pointer: ptrs[n],\n    }\n  })\n  // 'chronological' sorting\n  if (seqNames.has(input)) {\n    input = 'sequential'\n  }\n  // alphabetical sorting\n  if (alphaNames.has(input)) {\n    input = 'alpha'\n  }\n  // sort by frequency\n  if (freqNames.has(input)) {\n    arr = methods.byFreq(arr)\n    return this.update(arr.map(o => o.pointer))\n  }\n  // apply sort method on each phrase\n  if (typeof methods[input] === 'function') {\n    arr = arr.sort(methods[input])\n    return this.update(arr.map(o => o.pointer))\n  }\n  return this\n}\n\n/** reverse the order of the matches, but not the words or index */\nconst reverse = function () {\n  let ptrs = this.pointer || this.docs.map((_d, n) => [n])\n  ptrs = [].concat(ptrs)\n  ptrs = ptrs.reverse()\n  if (this._cache) {\n    this._cache = this._cache.reverse()\n  }\n  return this.update(ptrs)\n}\n\n/** remove any duplicate matches */\nconst unique = function () {\n  let already = new Set()\n  let res = this.filter(m => {\n    let txt = m.text('machine')\n    if (already.has(txt)) {\n      return false\n    }\n    already.add(txt)\n    return true\n  })\n  // this.ptrs = res.ptrs //mutate original?\n  return res//.compute('index')\n}\n\nexport default { unique, reverse, sort }\n","const isArray = (arr) => Object.prototype.toString.call(arr) === '[object Array]'\n\n// append a new document, somehow\nconst combineDocs = function (homeDocs, inputDocs) {\n  if (homeDocs.length > 0) {\n    // add a space\n    let end = homeDocs[homeDocs.length - 1]\n    let last = end[end.length - 1]\n    if (/ /.test(last.post) === false) {\n      last.post += ' '\n    }\n  }\n  homeDocs = homeDocs.concat(inputDocs)\n  return homeDocs\n}\n\nconst combineViews = function (home, input) {\n  // is it a view from the same document?\n  if (home.document === input.document) {\n    let ptrs = home.fullPointer.concat(input.fullPointer)\n    return home.toView(ptrs).compute('index')\n  }\n  // update n of new pointer, to end of our pointer\n  let ptrs = input.fullPointer\n  ptrs.forEach(a => {\n    a[0] += home.document.length\n  })\n  home.document = combineDocs(home.document, input.docs)\n  return home.all()\n}\n\nexport default {\n  // add string as new match/sentence\n  concat: function (input) {\n    // parse and splice-in new terms\n    if (typeof input === 'string') {\n      let more = this.fromText(input)\n      // easy concat\n      if (!this.found || !this.ptrs) {\n        this.document = this.document.concat(more.document)\n      } else {\n        // if we are in the middle, this is actually a splice operation\n        let ptrs = this.fullPointer\n        let at = ptrs[ptrs.length - 1][0]\n        this.document.splice(at, 0, ...more.document)\n      }\n      // put the docs\n      return this.all().compute('index')\n    }\n    // plop some view objects together\n    if (typeof input === 'object' && input.isView) {\n      return combineViews(this, input)\n    }\n    // assume it's an array of terms\n    if (isArray(input)) {\n      let docs = combineDocs(this.document, input)\n      this.document = docs\n      return this.all()\n    }\n    return this\n  },\n}","// add indexes to pointers\nconst harden = function () {\n  this.ptrs = this.fullPointer\n  return this\n}\n// remove indexes from pointers\nconst soften = function () {\n  let ptr = this.ptrs\n  if (!ptr || ptr.length < 1) {\n    return this\n  }\n  ptr = ptr.map(a => a.slice(0, 3))\n  this.ptrs = ptr\n  return this\n}\nexport default { harden, soften }","import caseFns from './case.js'\nimport insert from './insert.js'\nimport replace from './replace.js'\nimport remove from './remove.js'\nimport whitespace from './whitespace.js'\nimport sort from './sort.js'\nimport concat from './concat.js'\nimport harden from './harden.js'\n\nconst methods = Object.assign({}, caseFns, insert, replace, remove, whitespace, sort, concat, harden)\n\nconst addAPI = function (View) {\n  Object.assign(View.prototype, methods)\n}\nexport default addAPI\n","export default {\n  /** */\n  toLowerCase: function () {\n    this.termList().forEach(t => {\n      t.text = t.text.toLowerCase()\n    })\n    return this\n  },\n  /** */\n  toUpperCase: function () {\n    this.termList().forEach(t => {\n      t.text = t.text.toUpperCase()\n    })\n    return this\n  },\n  /** */\n  toTitleCase: function () {\n    this.termList().forEach(t => {\n      t.text = t.text.replace(/^ *[a-z\\u00C0-\\u00FF]/, x => x.toUpperCase()) //support unicode?\n    })\n    return this\n  },\n  /** */\n  toCamelCase: function () {\n    this.docs.forEach(terms => {\n      terms.forEach((t, i) => {\n        if (i !== 0) {\n          t.text = t.text.replace(/^ *[a-z\\u00C0-\\u00FF]/, x => x.toUpperCase()) //support unicode?\n        }\n        if (i !== terms.length - 1) {\n          t.post = ''\n        }\n      })\n    })\n    return this\n  },\n}\n","import uuid from './uuid.js'\n\nconst compute = {\n  id: function (view) {\n    let docs = view.docs\n    for (let n = 0; n < docs.length; n += 1) {\n      for (let i = 0; i < docs[n].length; i += 1) {\n        let term = docs[n][i]\n        term.id = term.id || uuid(term)\n      }\n    }\n  }\n}\n\nexport default compute","import api from './api/index.js'\nimport compute from './compute/index.js'\n\nexport default {\n  api,\n  compute,\n}\n","import contractions from './contractions.js'\n\nexport default { one: { contractions } }\n","export default [\n  // simple mappings\n  { word: '@', out: ['at'] },\n  { word: 'alot', out: ['a', 'lot'] },\n  { word: 'brb', out: ['be', 'right', 'back'] },\n  { word: 'cannot', out: ['can', 'not'] },\n  { word: 'cant', out: ['can', 'not'] },\n  { word: 'dont', out: ['do', 'not'] },\n  { word: 'dun', out: ['do', 'not'] },\n  { word: 'wont', out: ['will', 'not'] },\n  { word: \"can't\", out: ['can', 'not'] },\n  { word: \"shan't\", out: ['should', 'not'] },\n  { word: \"won't\", out: ['will', 'not'] },\n  { word: \"that's\", out: ['that', 'is'] },\n  { word: \"what's\", out: ['what', 'is'] },\n  { word: \"let's\", out: ['let', 'us'] },\n  { word: \"there's\", out: ['there', 'is'] },\n  { word: 'dunno', out: ['do', 'not', 'know'] },\n  { word: 'gonna', out: ['going', 'to'] },\n  { word: 'gotta', out: ['have', 'got', 'to'] }, //hmm\n  { word: 'gimme', out: ['give', 'me'] },\n  { word: 'tryna', out: ['trying', 'to'] },\n  { word: 'gtg', out: ['got', 'to', 'go'] },\n  { word: 'im', out: ['i', 'am'] },\n  { word: 'imma', out: ['I', 'will'] },\n  { word: 'imo', out: ['in', 'my', 'opinion'] },\n  { word: 'irl', out: ['in', 'real', 'life'] },\n  { word: 'ive', out: ['i', 'have'] },\n  { word: 'rn', out: ['right', 'now'] },\n  { word: 'tbh', out: ['to', 'be', 'honest'] },\n  { word: 'wanna', out: ['want', 'to'] },\n  { word: `c'mere`, out: ['come', 'here'] },\n  { word: `c'mon`, out: ['come', 'on'] },\n  // apostrophe d\n  { word: 'howd', out: ['how', 'did'] },\n  { word: 'whatd', out: ['what', 'did'] },\n  { word: 'whend', out: ['when', 'did'] },\n  { word: 'whered', out: ['where', 'did'] },\n\n  // { after: `cause`, out: ['because'] },\n  { word: \"tis\", out: ['it', 'is'] },\n  { word: \"twas\", out: ['it', 'was'] },\n  { word: `y'know`, out: ['you', 'know'] },\n  { word: \"ne'er\", out: ['never'] },\n  { word: \"o'er\", out: ['over'] },\n  // contraction-part mappings\n  { after: 'll', out: ['will'] },\n  { after: 've', out: ['have'] },\n  { after: 're', out: ['are'] },\n  { after: 'm', out: ['am'] },\n  // french contractions\n  { before: 'c', out: ['ce'] },\n  { before: 'm', out: ['me'] },\n  { before: 'n', out: ['ne'] },\n  { before: 'qu', out: ['que'] },\n  { before: 's', out: ['se'] },\n  { before: 't', out: ['tu'] }, // t'aime\n]\n","// put n new words where 1 word was\nconst insertContraction = function (document, point, words) {\n  let [n, w] = point\n  if (!words || words.length === 0) {\n    return\n  }\n  words = words.map((word, i) => {\n    word.implicit = word.text\n    word.machine = word.text\n    word.pre = ''\n    word.post = ''\n    word.text = ''\n    word.normal = ''\n    word.index = [n, w + i]\n    return word\n  })\n  if (words[0]) {\n    // move whitespace over\n    words[0].pre = document[n][w].pre\n    words[words.length - 1].post = document[n][w].post\n    // add the text/normal to the first term\n    words[0].text = document[n][w].text\n    words[0].normal = document[n][w].normal // move tags too?\n  }\n  // do the splice\n  document[n].splice(w, 1, ...words)\n}\nexport default insertContraction\n","const hasContraction = /'/\n//look for a past-tense verb\n// const hasPastTense = (terms, i) => {\n//   let after = terms.slice(i + 1, i + 3)\n//   return after.some(t => t.tags.has('PastTense'))\n// }\n// he'd walked -> had\n// how'd -> did\n// he'd go -> would\n\nconst alwaysDid = new Set([\n  'what',\n  'how',\n  'when',\n  'where',\n  'why',\n])\n\n// after-words\nconst useWould = new Set([\n  'be',\n  'go',\n  'start',\n  'think',\n  'need',\n])\n\nconst useHad = new Set([\n  'been',\n  'gone'\n])\n// they'd gone\n// they'd go\n\n\n// he'd been\n//    he had been\n//    he would been\n\nconst _apostropheD = function (terms, i) {\n  let before = terms[i].normal.split(hasContraction)[0]\n\n  // what'd, how'd\n  if (alwaysDid.has(before)) {\n    return [before, 'did']\n  }\n  if (terms[i + 1]) {\n    // they'd gone\n    if (useHad.has(terms[i + 1].normal)) {\n      return [before, 'had']\n    }\n    // they'd go\n    if (useWould.has(terms[i + 1].normal)) {\n      return [before, 'would']\n    }\n  }\n  return null\n  //   if (hasPastTense(terms, i) === true) {\n  //     return [before, 'had']\n  //   }\n  //   // had/would/did\n  //   return [before, 'would']\n}\nexport default _apostropheD\n","const hasContraction = /'/\n\n// l'amour\nconst preL = (terms, i) => {\n  // le/la\n  let after = terms[i].normal.split(hasContraction)[1]\n  // quick french gender disambig (rough)\n  if (after && after.endsWith('e')) {\n    return ['la', after]\n  }\n  return ['le', after]\n}\n\n// d'amerique\nconst preD = (terms, i) => {\n  let after = terms[i].normal.split(hasContraction)[1]\n  // quick guess for noun-agreement (rough)\n  if (after && after.endsWith('e')) {\n    return ['du', after]\n  } else if (after && after.endsWith('s')) {\n    return ['des', after]\n  }\n  return ['de', after]\n}\n\n// j'aime\nconst preJ = (terms, i) => {\n  let after = terms[i].normal.split(hasContraction)[1]\n  return ['je', after]\n}\n\nexport default {\n  preJ,\n  preL,\n  preD,\n}\n","const isRange = /^([0-9.]{1,4}[a-z]{0,2}) ?[-–—] ?([0-9]{1,4}[a-z]{0,2})$/i\nconst timeRange = /^([0-9]{1,2}(:[0-9][0-9])?(am|pm)?) ?[-–—] ?([0-9]{1,2}(:[0-9][0-9])?(am|pm)?)$/i\nconst phoneNum = /^[0-9]{3}-[0-9]{4}$/\n\nconst numberRange = function (terms, i) {\n  let term = terms[i]\n  let parts = term.text.match(isRange)\n  if (parts !== null) {\n    // 123-1234 is a phone number, not a number-range\n    if (term.tags.has('PhoneNumber') === true || phoneNum.test(term.text)) {\n      return null\n    }\n    return [parts[1], 'to', parts[2]]\n  } else {\n    parts = term.text.match(timeRange)\n    if (parts !== null) {\n      return [parts[1], 'to', parts[4]]\n    }\n  }\n  return null\n}\nexport default numberRange\n","const numUnit = /^([+-]?[0-9][.,0-9]*)([a-z°²³µ/]+)$/ //(must be lowercase)\n\nconst notUnit = new Set([\n  'st',\n  'nd',\n  'rd',\n  'th',\n  'am',\n  'pm',\n  'max',\n  '°',\n  's', // 1990s\n  'e' // 18e - french/spanish ordinal\n])\n\nconst numberUnit = function (terms, i) {\n  let term = terms[i]\n  let parts = term.text.match(numUnit)\n  if (parts !== null) {\n    // is it a recognized unit, like 'km'?\n    let unit = parts[2].toLowerCase().trim()\n    // don't split '3rd'\n    if (notUnit.has(unit)) {\n      return null\n    }\n    return [parts[1], unit] //split it\n  }\n  return null\n}\nexport default numberUnit\n","import splice from './_splice.js'\nimport apostropheD from './apostrophe-d.js'\nimport apostropheT from './apostrophe-t.js'\nimport french from './french.js'\nimport numberRange from './number-range.js'\nimport numberUnit from './number-unit.js'\n\nconst byApostrophe = /'/\nconst numDash = /^[0-9][^-–—]*[-–—].*?[0-9]/\n\n// run tagger on our new implicit terms\nconst reTag = function (terms, view, start, len) {\n  let tmp = view.update()\n  tmp.document = [terms]\n  // offer to re-tag neighbours, too\n  let end = start + len\n  if (start > 0) {\n    start -= 1\n  }\n  if (terms[end]) {\n    end += 1\n  }\n  tmp.ptrs = [[0, start, end]]\n}\n\nconst byEnd = {\n  // ain't\n  t: (terms, i) => apostropheT(terms, i),\n  // how'd\n  d: (terms, i) => apostropheD(terms, i),\n}\n\nconst byStart = {\n  // j'aime\n  j: (terms, i) => french.preJ(terms, i),\n  // l'amour\n  l: (terms, i) => french.preL(terms, i),\n  // d'amerique\n  d: (terms, i) => french.preD(terms, i),\n}\n\n// pull-apart known contractions from model\nconst knownOnes = function (list, term, before, after) {\n  for (let i = 0; i < list.length; i += 1) {\n    let o = list[i]\n    // look for word-word match (cannot-> [can, not])\n    if (o.word === term.normal) {\n      return o.out\n    }\n    // look for after-match ('re -> [_, are])\n    else if (after !== null && after === o.after) {\n      return [before].concat(o.out)\n    }\n    // look for before-match (l' -> [le, _])\n    else if (before !== null && before === o.before) {\n      return o.out.concat(after)\n      // return [o.out, after] //typeof o.out === 'string' ? [o.out, after] : o.out(terms, i)\n    }\n  }\n  return null\n}\n\nconst toDocs = function (words, view) {\n  let doc = view.fromText(words.join(' '))\n  doc.compute(['id', 'alias'])\n  return doc.docs[0]\n}\n\n//really easy ones\nconst contractions = (view) => {\n  let { world, document } = view\n  const { model, methods } = world\n  let list = model.one.contractions || []\n  let units = new Set(model.one.units || [])\n  // each sentence\n  document.forEach((terms, n) => {\n    // loop through terms backwards\n    for (let i = terms.length - 1; i >= 0; i -= 1) {\n      let before = null\n      let after = null\n      if (byApostrophe.test(terms[i].normal) === true) {\n        [before, after] = terms[i].normal.split(byApostrophe)\n      }\n      // any known-ones, like 'dunno'?\n      let words = knownOnes(list, terms[i], before, after)\n      // ['foo', 's']\n      if (!words && byEnd.hasOwnProperty(after)) {\n        words = byEnd[after](terms, i, world)\n      }\n      // ['j', 'aime']\n      if (!words && byStart.hasOwnProperty(before)) {\n        words = byStart[before](terms, i)\n      }\n      // actually insert the new terms\n      if (words) {\n        words = toDocs(words, view)\n        splice(document, [n, i], words)\n        reTag(document[n], view, i, words.length)\n        continue\n      }\n      // '44-2' has special care\n      if (numDash.test(terms[i].normal)) {\n        words = numberRange(terms, i)\n        if (words) {\n          words = toDocs(words, view)\n          splice(document, [n, i], words)\n          methods.one.setTag(words, 'NumberRange', world)//add custom tag\n          // is it a time-range, like '5-9pm'\n          if (words[2] && words[2].tags.has('Time')) {\n            methods.one.setTag([words[0]], 'Time', world, null, 'time-range')\n          }\n          reTag(document[n], view, i, words.length)\n        }\n        continue\n      }\n      // split-apart '4km'\n      words = numberUnit(terms, i, units)\n      if (words) {\n        words = toDocs(words, view)\n        splice(document, [n, i], words)\n        methods.one.setTag([words[1]], 'Unit', world, null, 'contraction-unit')\n      }\n    }\n  })\n}\nexport default contractions\n","\n//ain't -> are/is not\nconst apostropheT = function (terms, i) {\n  if (terms[i].normal === \"ain't\" || terms[i].normal === 'aint') {\n    return null //do this in ./two/\n  }\n  let before = terms[i].normal.replace(/n't/, '')\n  return [before, 'not']\n}\n\nexport default apostropheT\n","import contractions from './contractions/index.js'\n\nexport default { contractions }\n","import model from './model/index.js'\nimport compute from './compute/index.js'\n\nconst plugin = {\n  model: model,\n  compute: compute,\n  hooks: ['contractions'],\n}\nexport default plugin\n","\n// scan-ahead to match multiple-word terms - 'jack rabbit'\nconst checkMulti = function (terms, i, lexicon, setTag, world) {\n  let max = i + 4 > terms.length ? terms.length - i : 4\n  let str = terms[i].machine || terms[i].normal\n  for (let skip = 1; skip < max; skip += 1) {\n    let t = terms[i + skip]\n    let word = t.machine || t.normal\n    str += ' ' + word\n    if (lexicon.hasOwnProperty(str) === true) {\n      let tag = lexicon[str]\n      let ts = terms.slice(i, i + skip + 1)\n      setTag(ts, tag, world, false, '1-multi-lexicon')\n      return true\n    }\n  }\n  return false\n}\n\nconst multiWord = function (terms, i, world) {\n  const { model, methods } = world\n  // const { fastTag } = methods.one\n  const setTag = methods.one.setTag\n  const multi = model.one._multiCache || {}\n  const lexicon = model.one.lexicon || {}\n  // basic lexicon lookup\n  let t = terms[i]\n  let word = t.machine || t.normal\n  // multi-word lookup\n  if (terms[i + 1] !== undefined && multi[word] === true) {\n    return checkMulti(terms, i, lexicon, setTag, world)\n  }\n  return null\n}\nexport default multiWord\n","const prefix = /^(under|over|mis|re|un|dis|semi|pre|post)-?/\n// anti|non|extra|inter|intra|over\nconst allowPrefix = new Set(['Verb', 'Infinitive', 'PastTense', 'Gerund', 'PresentTense', 'Adjective', 'Participle'])\n\n// tag any words in our lexicon\nconst checkLexicon = function (terms, i, world) {\n  const { model, methods } = world\n  // const fastTag = methods.one.fastTag\n  const setTag = methods.one.setTag\n  const lexicon = model.one.lexicon\n\n  // basic lexicon lookup\n  let t = terms[i]\n  let word = t.machine || t.normal\n  // normal lexicon lookup\n  if (lexicon[word] !== undefined && lexicon.hasOwnProperty(word)) {\n    let tag = lexicon[word]\n    setTag([t], tag, world, false, '1-lexicon')\n    // fastTag(t, tag, '1-lexicon')\n    return true\n  }\n  // lookup aliases in the lexicon\n  if (t.alias) {\n    let found = t.alias.find(str => lexicon.hasOwnProperty(str))\n    if (found) {\n      let tag = lexicon[found]\n      setTag([t], tag, world, false, '1-lexicon-alias')\n      // fastTag(t, tag, '1-lexicon-alias')\n      return true\n    }\n  }\n  // prefixing for verbs/adjectives\n  if (prefix.test(word) === true) {\n    let stem = word.replace(prefix, '')\n    if (lexicon.hasOwnProperty(stem) && stem.length > 3) {\n      // only allow prefixes for verbs/adjectives\n      if (allowPrefix.has(lexicon[stem])) {\n        // console.log('->', word, stem, lexicon[stem])\n        setTag([t], lexicon[stem], world, false, '1-lexicon-prefix')\n        // fastTag(t, lexicon[stem], '1-lexicon-prefix')\n        return true\n      }\n    }\n  }\n  return null\n}\nexport default checkLexicon\n","import multiWord from './multi-word.js'\nimport singleWord from './single-word.js'\n\n// tag any words in our lexicon - even if it hasn't been filled-up yet\n// rest of pre-tagger is in ./two/preTagger\nconst lexicon = function (view) {\n  const world = view.world\n  view.docs.forEach(terms => {\n    for (let i = 0; i < terms.length; i += 1) {\n      if (terms[i].tags.size === 0) {\n        let found = null\n        found = found || multiWord(terms, i, world)\n        // lookup known words\n        found = found || singleWord(terms, i, world)\n      }\n    }\n  })\n}\n\nexport default {\n  lexicon\n}","import expandLexicon from './expand.js'\n\nexport default {\n  one: {\n    expandLexicon,\n  }\n}","// derive clever things from our lexicon key-value pairs\nconst expand = function (words) {\n  // const { methods, model } = world\n  let lex = {}\n  // console.log('start:', Object.keys(lex).length)\n  let _multi = {}\n  // go through each word in this key-value obj:\n  Object.keys(words).forEach(word => {\n    let tag = words[word]\n    // normalize lexicon a little bit\n    word = word.toLowerCase().trim()\n    word = word.replace(/'s\\b/, '')\n    // cache multi-word terms\n    let split = word.split(/ /)\n    if (split.length > 1) {\n      _multi[split[0]] = true\n    }\n    lex[word] = lex[word] || tag\n  })\n  // cleanup\n  delete lex['']\n  delete lex[null]\n  delete lex[' ']\n  return { lex, _multi }\n}\nexport default expand\n","/** insert new words/phrases into the lexicon */\nconst addWords = function (words) {\n  const world = this.world()\n  const { methods, model } = world\n  if (!words) {\n    return\n  }\n  // normalize tag vals\n  Object.keys(words).forEach(k => {\n    if (typeof words[k] === 'string' && words[k].startsWith('#')) {\n      words[k] = words[k].replace(/^#/, '')\n    }\n  })\n  // add some words to our lexicon\n  if (methods.two.expandLexicon) {\n    // do fancy ./two version\n    let { lex, _multi } = methods.two.expandLexicon(words, world)\n    Object.assign(model.one.lexicon, lex)\n    Object.assign(model.one._multiCache, _multi)\n  } else if (methods.one.expandLexicon) {\n    // do basic ./one version\n    let { lex, _multi } = methods.one.expandLexicon(words, world)\n    Object.assign(model.one.lexicon, lex)\n    Object.assign(model.one._multiCache, _multi)\n  } else {\n    //no fancy-business\n    Object.assign(model.one.lexicon, words)\n  }\n}\n\nexport default { addWords }","import compute from './compute/index.js'\nimport methods from './methods/index.js'\nimport lib from './lib.js'\n\nconst model = {\n  one: {\n    lexicon: {}, //setup blank lexicon\n    _multiCache: {},\n  }\n}\n\nexport default {\n  model,\n  methods,\n  compute,\n  lib,\n  hooks: ['lexicon']\n}","// edited by Spencer Kelly\n// credit to https://github.com/BrunoRB/ahocorasick by Bruno Roberto Búrigo.\n\nconst tokenize = function (phrase, world) {\n  const { methods, model } = world\n  let terms = methods.one.tokenize.splitTerms(phrase, model).map(t => methods.one.tokenize.splitWhitespace(t, model))\n  return terms.map(term => term.text.toLowerCase())\n}\n\n// turn an array or object into a compressed aho-corasick structure\nconst buildTrie = function (phrases, world) {\n\n  // const tokenize=methods.one.\n  let goNext = [{}]\n  let endAs = [null]\n  let failTo = [0]\n\n  let xs = []\n  let n = 0\n  phrases.forEach(function (phrase) {\n    let curr = 0\n    // let wordsB = phrase.split(/ /g).filter(w => w)\n    let words = tokenize(phrase, world)\n    for (let i = 0; i < words.length; i++) {\n      let word = words[i]\n      if (goNext[curr] && goNext[curr].hasOwnProperty(word)) {\n        curr = goNext[curr][word]\n      } else {\n        n++\n        goNext[curr][word] = n\n        goNext[n] = {}\n        curr = n\n        endAs[n] = null\n      }\n    }\n    endAs[curr] = [words.length]\n  })\n  // f(s) = 0 for all states of depth 1 (the ones from which the 0 state can transition to)\n  for (let word in goNext[0]) {\n    n = goNext[0][word]\n    failTo[n] = 0\n    xs.push(n)\n  }\n\n  while (xs.length) {\n    let r = xs.shift()\n    // for each symbol a such that g(r, a) = s\n    let keys = Object.keys(goNext[r])\n    for (let i = 0; i < keys.length; i += 1) {\n      let word = keys[i]\n      let s = goNext[r][word]\n      xs.push(s)\n      // set state = f(r)\n      n = failTo[r]\n      while (n > 0 && !goNext[n].hasOwnProperty(word)) {\n        n = failTo[n]\n      }\n      if (goNext.hasOwnProperty(n)) {\n        let fs = goNext[n][word]\n        failTo[s] = fs\n        if (endAs[fs]) {\n          endAs[s] = endAs[s] || []\n          endAs[s] = endAs[s].concat(endAs[fs])\n        }\n      } else {\n        failTo[s] = 0\n      }\n    }\n  }\n  return { goNext, endAs, failTo }\n}\nexport default buildTrie\n\n// console.log(buildTrie(['smart and cool', 'smart and nice']))\n","// follow our trie structure\nconst scanWords = function (terms, trie, opts) {\n  let n = 0\n  let results = []\n  for (let i = 0; i < terms.length; i++) {\n    let word = terms[i][opts.form] || terms[i].normal\n    // main match-logic loop:\n    while (n > 0 && (trie.goNext[n] === undefined || !trie.goNext[n].hasOwnProperty(word))) {\n      n = trie.failTo[n] || 0 // (usually back to 0)\n    }\n    // did we fail?\n    if (!trie.goNext[n].hasOwnProperty(word)) {\n      continue\n    }\n    n = trie.goNext[n][word]\n    if (trie.endAs[n]) {\n      let arr = trie.endAs[n]\n      for (let o = 0; o < arr.length; o++) {\n        let len = arr[o]\n        let term = terms[i - len + 1]\n        let [no, start] = term.index\n        results.push([no, start, start + len, term.id])\n      }\n    }\n  }\n  return results\n}\n\nconst cacheMiss = function (words, cache) {\n  for (let i = 0; i < words.length; i += 1) {\n    if (cache.has(words[i]) === true) {\n      return false\n    }\n  }\n  return true\n}\n\nconst scan = function (view, trie, opts) {\n  let results = []\n  opts.form = opts.form || 'normal'\n  let docs = view.docs\n  if (!trie.goNext || !trie.goNext[0]) {\n    console.error('Compromise invalid lookup trie')//eslint-disable-line\n    return view.none()\n  }\n  let firstWords = Object.keys(trie.goNext[0])\n  // do each phrase\n  for (let i = 0; i < docs.length; i++) {\n    // can we skip the phrase, all together?\n    if (view._cache && view._cache[i] && cacheMiss(firstWords, view._cache[i]) === true) {\n      continue\n    }\n    let terms = docs[i]\n    let found = scanWords(terms, trie, opts)\n    if (found.length > 0) {\n      results = results.concat(found)\n    }\n  }\n  return view.update(results)\n}\nexport default scan\n","// chop-off tail of redundant vals at end of array\nconst truncate = (list, val) => {\n  for (let i = list.length - 1; i >= 0; i -= 1) {\n    if (list[i] !== val) {\n      list = list.slice(0, i + 1)\n      return list\n    }\n  }\n  return list\n}\n\n// prune trie a bit\nconst compress = function (trie) {\n  trie.goNext = trie.goNext.map(o => {\n    if (Object.keys(o).length === 0) {\n      return undefined\n    }\n    return o\n  })\n  // chop-off tail of undefined vals in goNext array\n  trie.goNext = truncate(trie.goNext, undefined)\n  // chop-off tail of zeros in failTo array\n  trie.failTo = truncate(trie.failTo, 0)\n  // chop-off tail of nulls in endAs array\n  trie.endAs = truncate(trie.endAs, null)\n  return trie\n}\nexport default compress","import api from './api/index.js'\nimport compress from './api/buildTrie/compress.js'\nimport build from './api/buildTrie/index.js'\n\n/** pre-compile a list of matches to lookup */\nconst lib = {\n  /** turn an array or object into a compressed trie*/\n  buildTrie: function (input) {\n    const trie = build(input, this.world())\n    return compress(trie)\n  }\n}\n// add alias\nlib.compile = lib.buildTrie\n\nexport default {\n  api,\n  lib\n}\n","import build from './buildTrie/index.js'\nimport scan from './scan.js'\n\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\nexport default function (View) {\n\n  /** find all matches in this document */\n  View.prototype.lookup = function (input, opts = {}) {\n    if (!input) {\n      return this.none()\n    }\n    if (typeof input === 'string') {\n      input = [input]\n    }\n    let trie = isObject(input) ? input : build(input, this.world)\n    let res = scan(this, trie, opts)\n    res = res.settle()\n    return res\n  }\n}","export const relPointer = function (ptrs, parent) {\n  if (!parent) {\n    return ptrs\n  }\n  ptrs.forEach(ptr => {\n    let n = ptr[0]\n    if (parent[n]) {\n      ptr[0] = parent[n][0] //n\n      ptr[1] += parent[n][1] //start\n      ptr[2] += parent[n][1] //end\n    }\n  })\n  return ptrs\n}\n\n// make match-result relative to whole document\nexport const fixPointers = function (res, parent) {\n  let { ptrs, byGroup } = res\n  ptrs = relPointer(ptrs, parent)\n  Object.keys(byGroup).forEach(k => {\n    byGroup[k] = relPointer(byGroup[k], parent)\n  })\n  return { ptrs, byGroup }\n}\n\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\n// did they pass-in a compromise object?\nexport const isView = val => val && isObject(val) && val.isView === true\n\nexport const isNet = val => val && isObject(val) && val.isNet === true\n\n\n// is the pointer the full sentence?\n// export const isFull = function (ptr, document) {\n//   let [n, start, end] = ptr\n//   if (start !== 0) {\n//     return false\n//   }\n//   if (document[n] && document[n][end - 1] && !document[n][end]) {\n//     return true\n//   }\n//   return false\n// }","import { fixPointers, isView, isNet } from './_lib.js'\n\nconst parseRegs = function (regs, opts, world) {\n  const one = world.methods.one\n  if (typeof regs === 'number') {\n    regs = String(regs)\n  }\n  // support param as string\n  if (typeof regs === 'string') {\n    regs = one.killUnicode(regs, world)\n    regs = one.parseMatch(regs, opts, world)\n  }\n  return regs\n}\n\nconst match = function (regs, group, opts) {\n  const one = this.methods.one\n  // support param as view object\n  if (isView(regs)) {\n    return this.intersection(regs)\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, { tagger: false }).view.settle()\n  }\n  regs = parseRegs(regs, opts, this.world)\n  let todo = { regs, group }\n  let res = one.match(this.docs, todo, this._cache)\n  let { ptrs, byGroup } = fixPointers(res, this.fullPointer)\n  let view = this.toView(ptrs)\n  view._groups = byGroup\n  return view\n}\n\nconst matchOne = function (regs, group, opts) {\n  const one = this.methods.one\n  // support at view as a param\n  if (isView(regs)) {\n    return this.intersection(regs).eq(0)\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, { tagger: false, matchOne: true }).view\n  }\n  regs = parseRegs(regs, opts, this.world)\n  let todo = { regs, group, justOne: true }\n  let res = one.match(this.docs, todo, this._cache)\n  let { ptrs, byGroup } = fixPointers(res, this.fullPointer)\n  let view = this.toView(ptrs)\n  view._groups = byGroup\n  return view\n}\n\nconst has = function (regs, group, opts) {\n  const one = this.methods.one\n  // support view as input\n  if (isView(regs)) {\n    let ptrs = regs.fullPointer // support a view object as input\n    return ptrs.length > 0\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    return this.sweep(regs, { tagger: false }).view.found\n  }\n  regs = parseRegs(regs, opts, this.world)\n  let todo = { regs, group, justOne: true }\n  let ptrs = one.match(this.docs, todo, this._cache).ptrs\n  return ptrs.length > 0\n}\n\n// 'if'\nconst ifFn = function (regs, group, opts) {\n  const one = this.methods.one\n  // support view as input\n  if (isView(regs)) {\n    return this.filter(m => m.intersection(regs).found)\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    let m = this.sweep(regs, { tagger: false }).view.settle()\n    return this.if(m)//recurse with result\n  }\n  regs = parseRegs(regs, opts, this.world)\n  let todo = { regs, group, justOne: true }\n  let ptrs = this.fullPointer\n  let cache = this._cache || []\n  ptrs = ptrs.filter((ptr, i) => {\n    let m = this.update([ptr])\n    let res = one.match(m.docs, todo, cache[i]).ptrs\n    return res.length > 0\n  })\n  let view = this.update(ptrs)\n  // try and reconstruct the cache\n  if (this._cache) {\n    view._cache = ptrs.map(ptr => cache[ptr[0]])\n  }\n  return view\n}\n\nconst ifNo = function (regs, group, opts) {\n  const { methods } = this\n  const one = methods.one\n  // support a view object as input\n  if (isView(regs)) {\n    return this.filter(m => !m.intersection(regs).found)\n  }\n  // support a compiled set of matches\n  if (isNet(regs)) {\n    let m = this.sweep(regs, { tagger: false }).view.settle()\n    return this.ifNo(m)\n  }\n  // otherwise parse the match string\n  regs = parseRegs(regs, opts, this.world)\n  let cache = this._cache || []\n  let view = this.filter((m, i) => {\n    let todo = { regs, group, justOne: true }\n    let ptrs = one.match(m.docs, todo, cache[i]).ptrs\n    return ptrs.length === 0\n  })\n  // try to reconstruct the cache\n  if (this._cache) {\n    view._cache = view.ptrs.map(ptr => cache[ptr[0]])\n  }\n  return view\n}\n\nexport default { matchOne, match, has, if: ifFn, ifNo }\n","\nconst before = function (regs, group, opts) {\n  const { indexN } = this.methods.one.pointer\n  let pre = []\n  let byN = indexN(this.fullPointer)\n  Object.keys(byN).forEach(k => {\n    // check only the earliest match in the sentence\n    let first = byN[k].sort((a, b) => (a[1] > b[1] ? 1 : -1))[0]\n    if (first[1] > 0) {\n      pre.push([first[0], 0, first[1]])\n    }\n  })\n  let preWords = this.toView(pre)\n  if (!regs) {\n    return preWords\n  }\n  return preWords.match(regs, group, opts)\n}\n\nconst after = function (regs, group, opts) {\n  const { indexN } = this.methods.one.pointer\n  let post = []\n  let byN = indexN(this.fullPointer)\n  let document = this.document\n  Object.keys(byN).forEach(k => {\n    // check only the latest match in the sentence\n    let last = byN[k].sort((a, b) => (a[1] > b[1] ? -1 : 1))[0]\n    let [n, , end] = last\n    if (end < document[n].length) {\n      post.push([n, end, document[n].length])\n    }\n  })\n  let postWords = this.toView(post)\n  if (!regs) {\n    return postWords\n  }\n  return postWords.match(regs, group, opts)\n}\n\nconst growLeft = function (regs, group, opts) {\n  if (typeof regs === 'string') {\n    regs = this.world.methods.one.parseMatch(regs, opts, this.world)\n  }\n  regs[regs.length - 1].end = true// ensure matches are beside us ←\n  let ptrs = this.fullPointer\n  this.forEach((m, n) => {\n    let more = m.before(regs, group)\n    if (more.found) {\n      let terms = more.terms()\n      ptrs[n][1] -= terms.length\n      ptrs[n][3] = terms.docs[0][0].id\n    }\n  })\n  return this.update(ptrs)\n}\n\nconst growRight = function (regs, group, opts) {\n  if (typeof regs === 'string') {\n    regs = this.world.methods.one.parseMatch(regs, opts, this.world)\n  }\n  regs[0].start = true// ensure matches are beside us →\n  let ptrs = this.fullPointer\n  this.forEach((m, n) => {\n    let more = m.after(regs, group)\n    if (more.found) {\n      let terms = more.terms()\n      ptrs[n][2] += terms.length\n      ptrs[n][4] = null //remove end-id\n    }\n  })\n  return this.update(ptrs)\n}\n\nconst grow = function (regs, group, opts) {\n  return this.growRight(regs, group, opts).growLeft(regs, group, opts)\n}\n\nexport default { before, after, growLeft, growRight, grow }\n","const combine = function (left, right) {\n  return [left[0], left[1], right[2]]\n}\n\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nconst getDoc = (reg, view, group) => {\n  if (typeof reg === 'string' || isArray(reg)) {\n    return view.match(reg, group)\n  }\n  if (!reg) {\n    return view.none()\n  }\n  return reg\n}\n\nconst addIds = function (ptr, view) {\n  let [n, start, end] = ptr\n  if (view.document[n] && view.document[n][start]) {\n    ptr[3] = ptr[3] || view.document[n][start].id\n    if (view.document[n][end - 1]) {\n      ptr[4] = ptr[4] || view.document[n][end - 1].id\n    }\n  }\n  return ptr\n}\n\nconst methods = {}\n// [before], [match], [after]\nmethods.splitOn = function (m, group) {\n  const { splitAll } = this.methods.one.pointer\n  let splits = getDoc(m, this, group).fullPointer\n  let all = splitAll(this.fullPointer, splits)\n  let res = []\n  all.forEach(o => {\n    res.push(o.passthrough)\n    res.push(o.before)\n    res.push(o.match)\n    res.push(o.after)\n  })\n  res = res.filter(p => p)\n  res = res.map(p => addIds(p, this))\n  return this.update(res)\n}\n\n// [before], [match after]\nmethods.splitBefore = function (m, group) {\n  const { splitAll } = this.methods.one.pointer\n  let splits = getDoc(m, this, group).fullPointer\n  let all = splitAll(this.fullPointer, splits)\n  let res = []\n  all.forEach(o => {\n    res.push(o.passthrough)\n    res.push(o.before)\n    if (o.match && o.after) {\n      // console.log(combine(o.match, o.after))\n      res.push(combine(o.match, o.after))\n    } else {\n      res.push(o.match)\n      res.push(o.after)\n    }\n  })\n  res = res.filter(p => p)\n  res = res.map(p => addIds(p, this))\n  return this.update(res)\n}\n\n// [before match], [after]\nmethods.splitAfter = function (m, group) {\n  const { splitAll } = this.methods.one.pointer\n  let splits = getDoc(m, this, group).fullPointer\n  let all = splitAll(this.fullPointer, splits)\n  let res = []\n  all.forEach(o => {\n    res.push(o.passthrough)\n    if (o.before && o.match) {\n      res.push(combine(o.before, o.match))\n    } else {\n      res.push(o.before)\n      res.push(o.match)\n    }\n    res.push(o.after)\n  })\n  res = res.filter(p => p)\n  res = res.map(p => addIds(p, this))\n  return this.update(res)\n}\nmethods.split = methods.splitAfter\n\nexport default methods\n","import match from './match.js'\nimport lookaround from './lookaround.js'\nimport split from './split.js'\n\nconst methods = Object.assign({}, match, lookaround, split)\n// aliases\nmethods.lookBehind = methods.before\nmethods.lookBefore = methods.before\n\nmethods.lookAhead = methods.after\nmethods.lookAfter = methods.after\n\nmethods.notIf = methods.ifNo\nconst matchAPI = function (View) {\n  Object.assign(View.prototype, methods)\n}\nexport default matchAPI\n","// match  'foo /yes/' and not 'foo/no/bar'\nconst bySlashes = /(?:^|\\s)([![^]*(?:<[^<]*>)?\\/.*?[^\\\\/]\\/[?\\]+*$~]*)(?:\\s|$)/\n// match '(yes) but not foo(no)bar'\nconst byParentheses = /([!~[^]*(?:<[^<]*>)?\\([^)]+[^\\\\)]\\)[?\\]+*$~]*)(?:\\s|$)/\n// okay\nconst byWord = / /g\n\nconst isBlock = str => {\n  return /^[![^]*(<[^<]*>)?\\(/.test(str) && /\\)[?\\]+*$~]*$/.test(str)\n}\nconst isReg = str => {\n  return /^[![^]*(<[^<]*>)?\\//.test(str) && /\\/[?\\]+*$~]*$/.test(str)\n}\n\nconst cleanUp = function (arr) {\n  arr = arr.map(str => str.trim())\n  arr = arr.filter(str => str)\n  return arr\n}\n\nconst parseBlocks = function (txt) {\n  // parse by /regex/ first\n  let arr = txt.split(bySlashes)\n  let res = []\n  // parse by (blocks), next\n  arr.forEach(str => {\n    if (isReg(str)) {\n      res.push(str)\n      return\n    }\n    res = res.concat(str.split(byParentheses))\n  })\n  res = cleanUp(res)\n  // split by spaces, now\n  let final = []\n  res.forEach(str => {\n    if (isBlock(str)) {\n      final.push(str)\n    } else if (isReg(str)) {\n      final.push(str)\n    } else {\n      final = final.concat(str.split(byWord))\n    }\n  })\n  final = cleanUp(final)\n  return final\n}\nexport default parseBlocks\n","const hasMinMax = /\\{([0-9]+)?(, *[0-9]*)?\\}/\nconst andSign = /&&/\n// const hasDash = /\\p{Letter}[-–—]\\p{Letter}/u\nconst captureName = new RegExp(/^<\\s*(\\S+)\\s*>/)\n/* break-down a match expression into this:\n{\n  word:'',\n  tag:'',\n  regex:'',\n\n  start:false,\n  end:false,\n  negative:false,\n  anything:false,\n  greedy:false,\n  optional:false,\n\n  named:'',\n  choices:[],\n}\n*/\nconst titleCase = str => str.charAt(0).toUpperCase() + str.substring(1)\nconst end = (str) => str.charAt(str.length - 1)\nconst start = (str) => str.charAt(0)\nconst stripStart = (str) => str.substring(1)\nconst stripEnd = (str) => str.substring(0, str.length - 1)\n\nconst stripBoth = function (str) {\n  str = stripStart(str)\n  str = stripEnd(str)\n  return str\n}\n//\nconst parseToken = function (w, opts) {\n  let obj = {}\n  //collect any flags (do it twice)\n  for (let i = 0; i < 2; i += 1) {\n    //end-flag\n    if (end(w) === '$') {\n      obj.end = true\n      w = stripEnd(w)\n    }\n    //front-flag\n    if (start(w) === '^') {\n      obj.start = true\n      w = stripStart(w)\n    }\n    //capture group (this one can span multiple-terms)\n    if (start(w) === '[' || end(w) === ']') {\n      obj.group = null\n      if (start(w) === '[') {\n        obj.groupStart = true\n      }\n      if (end(w) === ']') {\n        obj.groupEnd = true\n      }\n      w = w.replace(/^\\[/, '')\n      w = w.replace(/\\]$/, '')\n      // Use capture group name\n      if (start(w) === '<') {\n        const res = captureName.exec(w)\n        if (res.length >= 2) {\n          obj.group = res[1]\n          w = w.replace(res[0], '')\n        }\n      }\n    }\n    //back-flags\n    if (end(w) === '+') {\n      obj.greedy = true\n      w = stripEnd(w)\n    }\n    if (w !== '*' && end(w) === '*' && w !== '\\\\*') {\n      obj.greedy = true\n      w = stripEnd(w)\n    }\n    if (end(w) === '?') {\n      obj.optional = true\n      w = stripEnd(w)\n    }\n    if (start(w) === '!') {\n      obj.negative = true\n      // obj.optional = true\n      w = stripStart(w)\n    }\n    //soft-match\n    if (start(w) === '~' && end(w) === '~' && w.length > 2) {\n      w = stripBoth(w)\n      obj.fuzzy = true\n      obj.min = opts.fuzzy || 0.85\n      if (/\\(/.test(w) === false) {\n        obj.word = w\n        return obj\n      }\n    }\n\n    //wrapped-flags\n    if (start(w) === '(' && end(w) === ')') {\n      // support (one && two)\n      if (andSign.test(w)) {\n        obj.choices = w.split(andSign)\n        obj.operator = 'and'\n      } else {\n        obj.choices = w.split('|')\n        obj.operator = 'or'\n      }\n      //remove '(' and ')'\n      obj.choices[0] = stripStart(obj.choices[0])\n      let last = obj.choices.length - 1\n      obj.choices[last] = stripEnd(obj.choices[last])\n      // clean up the results\n      obj.choices = obj.choices.map(s => s.trim())\n      obj.choices = obj.choices.filter(s => s)\n      //recursion alert!\n      obj.choices = obj.choices.map(str => {\n        return str.split(/ /g).map(s => parseToken(s, opts))\n      })\n      w = ''\n    }\n    //regex\n    if (start(w) === '/' && end(w) === '/') {\n      w = stripBoth(w)\n      if (opts.caseSensitive) {\n        obj.use = 'text'\n      }\n      obj.regex = new RegExp(w) //potential vuln - security/detect-non-literal-regexp\n      return obj\n    }\n\n    //root/sense overloaded\n    if (start(w) === '{' && end(w) === '}') {\n      w = stripBoth(w)\n      // obj.sense = w\n      obj.root = w\n      if (/\\//.test(w)) {\n        let split = obj.root.split(/\\//)\n        obj.root = split[0]\n        obj.pos = split[1]\n        if (obj.pos === 'adj') {\n          obj.pos = 'Adjective'\n        }\n        // titlecase\n        obj.pos = obj.pos.charAt(0).toUpperCase() + obj.pos.substr(1).toLowerCase()\n        // add sense-number too\n        if (split[2] !== undefined) {\n          obj.sense = split[2]\n        }\n      }\n      return obj\n    }\n    //chunks\n    if (start(w) === '<' && end(w) === '>') {\n      w = stripBoth(w)\n      obj.chunk = titleCase(w)\n      obj.greedy = true\n      return obj\n    }\n    if (start(w) === '%' && end(w) === '%') {\n      w = stripBoth(w)\n      obj.switch = w\n      return obj\n    }\n  }\n  // support foo{1,9}\n  if (hasMinMax.test(w) === true) {\n    w = w.replace(hasMinMax, (_a, b, c) => {\n      if (c === undefined) {\n        // '{3}'\tExactly three times\n        obj.min = Number(b)\n        obj.max = Number(b)\n      } else {\n        c = c.replace(/, */, '')\n        if (b === undefined) {\n          // '{,9}' implied zero min\n          obj.min = 0\n          obj.max = Number(c)\n        } else {\n          // '{2,4}' Two to four times\n          obj.min = Number(b)\n          // '{3,}' Three or more times\n          obj.max = Number(c || 999)\n        }\n      }\n      // use same method as '+'\n      obj.greedy = true\n      // 0 as min means the same as '?'\n      if (!obj.min) {\n        obj.optional = true\n      }\n      return ''\n    })\n  }\n  //do the actual token content\n  if (start(w) === '#') {\n    obj.tag = stripStart(w)\n    obj.tag = titleCase(obj.tag)\n    return obj\n  }\n  //dynamic function on a term object\n  if (start(w) === '@') {\n    obj.method = stripStart(w)\n    return obj\n  }\n  if (w === '.') {\n    obj.anything = true\n    return obj\n  }\n  //support alone-astrix\n  if (w === '*') {\n    obj.anything = true\n    obj.greedy = true\n    obj.optional = true\n    return obj\n  }\n  if (w) {\n    //somehow handle encoded-chars?\n    w = w.replace('\\\\*', '*')\n    w = w.replace('\\\\.', '.')\n    if (opts.caseSensitive) {\n      obj.use = 'text'\n    } else {\n      w = w.toLowerCase()\n    }\n    obj.word = w\n  }\n  return obj\n}\nexport default parseToken\n","const hasDash = /[a-z0-9][-–—][a-z]/i\n\n// match 're-do' -> ['re','do']\nconst splitHyphens = function (regs, world) {\n  let prefixes = world.model.one.prefixes\n  for (let i = regs.length - 1; i >= 0; i -= 1) {\n    let reg = regs[i]\n    if (reg.word && hasDash.test(reg.word)) {\n      let words = reg.word.split(/[-–—]/g)\n      // don't split 're-cycle', etc\n      if (prefixes.hasOwnProperty(words[0])) {\n        continue\n      }\n      words = words.filter(w => w).reverse()\n      regs.splice(i, 1)\n      words.forEach(w => {\n        let obj = Object.assign({}, reg)\n        obj.word = w\n        regs.splice(i, 0, obj)\n      })\n    }\n  }\n  return regs\n}\nexport default splitHyphens","\n// add all conjugations of this verb\nconst addVerbs = function (token, world) {\n  let { all } = world.methods.two.transform.verb || {}\n  let str = token.root\n  // if (toInfinitive) {\n  //   str = toInfinitive(str, world.model)\n  // }\n  if (!all) {\n    return []\n  }\n  return all(str, world.model)\n}\n\n// add all inflections of this noun\nconst addNoun = function (token, world) {\n  let { all } = world.methods.two.transform.noun || {}\n  if (!all) {\n    return [token.root]\n  }\n  return all(token.root, world.model)\n}\n\n// add all inflections of this adjective\nconst addAdjective = function (token, world) {\n  let { all } = world.methods.two.transform.adjective || {}\n  if (!all) {\n    return [token.root]\n  }\n  return all(token.root, world.model)\n}\n\n// turn '{walk}' into 'walking', 'walked', etc\nconst inflectRoot = function (regs, world) {\n  // do we have compromise/two?\n  regs = regs.map(token => {\n    // a reg to convert '{foo}'\n    if (token.root) {\n      // check if compromise/two is loaded\n      if (world.methods.two && world.methods.two.transform) {\n        let choices = []\n        // have explicitly set from POS - '{sweet/adjective}'\n        if (token.pos) {\n          if (token.pos === 'Verb') {\n            choices = choices.concat(addVerbs(token, world))\n          } else if (token.pos === 'Noun') {\n            choices = choices.concat(addNoun(token, world))\n          } else if (token.pos === 'Adjective') {\n            choices = choices.concat(addAdjective(token, world))\n          }\n        } else {\n          // do verb/noun/adj by default\n          choices = choices.concat(addVerbs(token, world))\n          choices = choices.concat(addNoun(token, world))\n          choices = choices.concat(addAdjective(token, world))\n        }\n        choices = choices.filter(str => str)\n        if (choices.length > 0) {\n          token.operator = 'or'\n          token.fastOr = new Set(choices)\n        }\n      } else {\n        // if no compromise/two, drop down into 'machine' lookup\n        token.machine = token.root\n        delete token.id\n        delete token.root\n      }\n    }\n    return token\n  })\n\n  return regs\n}\nexport default inflectRoot","// name any [unnamed] capture-groups with a number\nconst nameGroups = function (regs) {\n  let index = 0\n  let inGroup = null\n  //'fill in' capture groups between start-end\n  for (let i = 0; i < regs.length; i++) {\n    const token = regs[i]\n    if (token.groupStart === true) {\n      inGroup = token.group\n      if (inGroup === null) {\n        inGroup = String(index)\n        index += 1\n      }\n    }\n    if (inGroup !== null) {\n      token.group = inGroup\n    }\n    if (token.groupEnd === true) {\n      inGroup = null\n    }\n  }\n  return regs\n}\n\n// optimize an 'or' lookup, when the (a|b|c) list is simple or multi-word\nconst doFastOrMode = function (tokens) {\n  return tokens.map(token => {\n    if (token.choices !== undefined) {\n      // make sure it's an OR\n      if (token.operator !== 'or') {\n        return token\n      }\n      if (token.fuzzy === true) {\n        return token\n      }\n      // are they all straight-up words? then optimize them.\n      let shouldPack = token.choices.every(block => {\n        if (block.length !== 1) {\n          return false\n        }\n        let reg = block[0]\n        // ~fuzzy~ words need more care\n        if (reg.fuzzy === true) {\n          return false\n        }\n        // ^ and $ get lost in fastOr\n        if (reg.start || reg.end) {\n          return false\n        }\n        if (reg.word !== undefined && reg.negative !== true && reg.optional !== true && reg.method !== true) {\n          return true //reg is simple-enough\n        }\n        return false\n      })\n      if (shouldPack === true) {\n        token.fastOr = new Set()\n        token.choices.forEach(block => {\n          token.fastOr.add(block[0].word)\n        })\n        delete token.choices\n      }\n    }\n    return token\n  })\n}\n\n// support ~(a|b|c)~\nconst fuzzyOr = function (regs) {\n  return regs.map(reg => {\n    if (reg.fuzzy && reg.choices) {\n      // pass fuzzy-data to each OR choice\n      reg.choices.forEach(r => {\n        if (r.length === 1 && r[0].word) {\n          r[0].fuzzy = true\n          r[0].min = reg.min\n        }\n      })\n    }\n    return reg\n  })\n}\n\nconst postProcess = function (regs) {\n  // ensure all capture groups names are filled between start and end\n  regs = nameGroups(regs)\n  // convert 'choices' format to 'fastOr' format\n  regs = doFastOrMode(regs)\n  // support ~(foo|bar)~\n  regs = fuzzyOr(regs)\n  return regs\n}\nexport default postProcess\n","const anyIntersection = function (setA, setB) {\n  for (let elem of setB) {\n    if (setA.has(elem)) {\n      return true\n    }\n  }\n  return false\n}\n// check words/tags against our cache\nconst failFast = function (regs, cache) {\n  for (let i = 0; i < regs.length; i += 1) {\n    let reg = regs[i]\n    if (reg.optional === true || reg.negative === true || reg.fuzzy === true) {\n      continue\n    }\n    // is the word missing from the cache?\n    if (reg.word !== undefined && cache.has(reg.word) === false) {\n      return true\n    }\n    // is the tag missing?\n    if (reg.tag !== undefined && cache.has('#' + reg.tag) === false) {\n      return true\n    }\n    // perform a speedup for fast-or\n    if (reg.fastOr && anyIntersection(reg.fastOr, cache) === false) {\n      return false\n    }\n  }\n  return false\n}\nexport default failFast\n","// fuzzy-match (damerau-levenshtein)\n// Based on  tad-lispy /node-damerau-levenshtein\n// https://github.com/tad-lispy/node-damerau-levenshtein/blob/master/index.js\n// count steps (insertions, deletions, substitutions, or transpositions)\nconst editDistance = function (strA, strB) {\n  let aLength = strA.length,\n    bLength = strB.length\n  // fail-fast\n  if (aLength === 0) {\n    return bLength\n  }\n  if (bLength === 0) {\n    return aLength\n  }\n  // If the limit is not defined it will be calculate from this and that args.\n  let limit = (bLength > aLength ? bLength : aLength) + 1\n  if (Math.abs(aLength - bLength) > (limit || 100)) {\n    return limit || 100\n  }\n  // init the array\n  let matrix = []\n  for (let i = 0; i < limit; i++) {\n    matrix[i] = [i]\n    matrix[i].length = limit\n  }\n  for (let i = 0; i < limit; i++) {\n    matrix[0][i] = i\n  }\n  // Calculate matrix.\n  let j, a_index, b_index, cost, min, t\n  for (let i = 1; i <= aLength; ++i) {\n    a_index = strA[i - 1]\n    for (j = 1; j <= bLength; ++j) {\n      // Check the jagged distance total so far\n      if (i === j && matrix[i][j] > 4) {\n        return aLength\n      }\n      b_index = strB[j - 1]\n      cost = a_index === b_index ? 0 : 1 // Step 5\n      // Calculate the minimum (much faster than Math.min(...)).\n      min = matrix[i - 1][j] + 1 // Deletion.\n      if ((t = matrix[i][j - 1] + 1) < min) min = t // Insertion.\n      if ((t = matrix[i - 1][j - 1] + cost) < min) min = t // Substitution.\n      // Update matrix.\n      let shouldUpdate =\n        i > 1 && j > 1 && a_index === strB[j - 2] && strA[i - 2] === b_index && (t = matrix[i - 2][j - 2] + cost) < min\n      if (shouldUpdate) {\n        matrix[i][j] = t\n      } else {\n        matrix[i][j] = min\n      }\n    }\n  }\n  // return number of steps\n  return matrix[aLength][bLength]\n}\n// score similarity by from 0-1 (steps/length)\nconst fuzzyMatch = function (strA, strB, minLength = 3) {\n  if (strA === strB) {\n    return 1\n  }\n  //don't even bother on tiny strings\n  if (strA.length < minLength || strB.length < minLength) {\n    return 0\n  }\n  const steps = editDistance(strA, strB)\n  let length = Math.max(strA.length, strB.length)\n  let relative = length === 0 ? 0 : steps / length\n  let similarity = 1 - relative\n  return similarity\n}\nexport default fuzzyMatch\n","// these methods are called with '@hasComma' in the match syntax\n// various unicode quotation-mark formats\nconst startQuote =\n  /([\\u0022\\uFF02\\u0027\\u201C\\u2018\\u201F\\u201B\\u201E\\u2E42\\u201A\\u00AB\\u2039\\u2035\\u2036\\u2037\\u301D\\u0060\\u301F])/\n\nconst endQuote = /([\\u0022\\uFF02\\u0027\\u201D\\u2019\\u00BB\\u203A\\u2032\\u2033\\u2034\\u301E\\u00B4])/\n\nconst hasHyphen = /^[-–—]$/\nconst hasDash = / [-–—]{1,3} /\n\n/** search the term's 'post' punctuation  */\nconst hasPost = (term, punct) => term.post.indexOf(punct) !== -1\n/** search the term's 'pre' punctuation  */\nconst hasPre = (term, punct) => term.pre.indexOf(punct) !== -1\n\nconst methods = {\n  /** does it have a quotation symbol?  */\n  hasQuote: term => startQuote.test(term.pre) || endQuote.test(term.post),\n  /** does it have a comma?  */\n  hasComma: term => hasPost(term, ','),\n  /** does it end in a period? */\n  hasPeriod: term => hasPost(term, '.') === true && hasPost(term, '...') === false,\n  /** does it end in an exclamation */\n  hasExclamation: term => hasPost(term, '!'),\n  /** does it end with a question mark? */\n  hasQuestionMark: term => hasPost(term, '?') || hasPost(term, '¿'),\n  /** is there a ... at the end? */\n  hasEllipses: term => hasPost(term, '..') || hasPost(term, '…') || hasPre(term, '..') || hasPre(term, '…'),\n  /** is there a semicolon after term word? */\n  hasSemicolon: term => hasPost(term, ';'),\n  /** is there a colon after term word? */\n  hasColon: term => hasPost(term, ':'),\n  /** is there a slash '/' in term word? */\n  hasSlash: term => /\\//.test(term.text),\n  /** a hyphen connects two words like-term */\n  hasHyphen: term => hasHyphen.test(term.post) || hasHyphen.test(term.pre),\n  /** a dash separates words - like that */\n  hasDash: term => hasDash.test(term.post) || hasDash.test(term.pre),\n  /** is it multiple words combinded */\n  hasContraction: term => Boolean(term.implicit),\n  /** is it an acronym */\n  isAcronym: term => term.tags.has('Acronym'),\n  /** does it have any tags */\n  isKnown: term => term.tags.size > 0,\n  /** uppercase first letter, then a lowercase */\n  isTitleCase: term => /^\\p{Lu}[a-z'\\u00C0-\\u00FF]/u.test(term.text),\n  /** uppercase all letters */\n  isUpperCase: term => /^\\p{Lu}+$/u.test(term.text),\n}\n// aliases\nmethods.hasQuotation = methods.hasQuote\n\nexport default methods\n","import fuzzy from './_fuzzy.js'\nimport methods from '../../termMethods.js' //this should load off of 'methods.one.termMethods'\n\n//declare it up here\nlet wrapMatch = function () { }\n/** ignore optional/greedy logic, straight-up term match*/\nconst doesMatch = function (term, reg, index, length) {\n  // support '.'\n  if (reg.anything === true) {\n    return true\n  }\n  // support '^' (in parentheses)\n  if (reg.start === true && index !== 0) {\n    return false\n  }\n  // support '$' (in parentheses)\n  if (reg.end === true && index !== length - 1) {\n    return false\n  }\n  // match an id\n  if (reg.id !== undefined && reg.id === term.id) {\n    return true\n  }\n  //support a text match\n  if (reg.word !== undefined) {\n    // check case-sensitivity, etc\n    if (reg.use) {\n      return reg.word === term[reg.use]\n    }\n    //match contractions, machine-form\n    if (term.machine !== null && term.machine === reg.word) {\n      return true\n    }\n    // term aliases for slashes and things\n    if (term.alias !== undefined && term.alias.hasOwnProperty(reg.word)) {\n      return true\n    }\n    // support ~ fuzzy match\n    if (reg.fuzzy === true) {\n      if (reg.word === term.root) {\n        return true\n      }\n      let score = fuzzy(reg.word, term.normal)\n      if (score >= reg.min) {\n        return true\n      }\n    }\n    // match slashes and things\n    if (term.alias && term.alias.some(str => str === reg.word)) {\n      return true\n    }\n    //match either .normal or .text\n    return reg.word === term.text || reg.word === term.normal\n  }\n  //support #Tag\n  if (reg.tag !== undefined) {\n    return term.tags.has(reg.tag) === true\n  }\n  //support @method\n  if (reg.method !== undefined) {\n    if (typeof methods[reg.method] === 'function' && methods[reg.method](term) === true) {\n      return true\n    }\n    return false\n  }\n  //support whitespace/punctuation\n  if (reg.pre !== undefined) {\n    return term.pre && term.pre.includes(reg.pre)\n  }\n  if (reg.post !== undefined) {\n    return term.post && term.post.includes(reg.post)\n  }\n  //support /reg/\n  if (reg.regex !== undefined) {\n    let str = term.normal\n    if (reg.use) {\n      str = term[reg.use]\n    }\n    return reg.regex.test(str)\n  }\n  //support <chunk>\n  if (reg.chunk !== undefined) {\n    return term.chunk === reg.chunk\n  }\n  //support %Noun|Verb%\n  if (reg.switch !== undefined) {\n    return term.switch === reg.switch\n  }\n  //support {machine}\n  if (reg.machine !== undefined) {\n    return term.normal === reg.machine || term.machine === reg.machine || term.root === reg.machine\n  }\n  //support {word/sense}\n  if (reg.sense !== undefined) {\n    return term.sense === reg.sense\n  }\n  // support optimized (one|two)\n  if (reg.fastOr !== undefined) {\n    // {work/verb} must be a verb\n    if (reg.pos && !term.tags.has(reg.pos)) {\n      return null\n    }\n    return reg.fastOr.has(term.implicit) || reg.fastOr.has(term.normal) || reg.fastOr.has(term.text) || reg.fastOr.has(term.machine)\n  }\n  //support slower (one|two)\n  if (reg.choices !== undefined) {\n    // try to support && operator\n    if (reg.operator === 'and') {\n      // must match them all\n      return reg.choices.every(r => wrapMatch(term, r, index, length))\n    }\n    // or must match one\n    return reg.choices.some(r => wrapMatch(term, r, index, length))\n  }\n  return false\n}\n// wrap result for !negative match logic\nwrapMatch = function (t, reg, index, length) {\n  let result = doesMatch(t, reg, index, length)\n  if (reg.negative === true) {\n    return !result\n  }\n  return result\n}\nexport default wrapMatch\n","import doesMatch from '../../term/doesMatch.js'\n\n// for greedy checking, we no longer care about the reg.start\n// value, and leaving it can cause failures for anchored greedy\n// matches.  ditto for end-greedy matches: we need an earlier non-\n// ending match to succceed until we get to the actual end.\nconst getGreedy = function (state, endReg) {\n  let reg = Object.assign({}, state.regs[state.r], { start: false, end: false })\n  let start = state.t\n  for (; state.t < state.terms.length; state.t += 1) {\n    //stop for next-reg match\n    if (endReg && doesMatch(state.terms[state.t], endReg, state.start_i + state.t, state.phrase_length)) {\n      return state.t\n    }\n    let count = state.t - start + 1\n    // is it max-length now?\n    if (reg.max !== undefined && count === reg.max) {\n      return state.t\n    }\n    //stop here\n    if (doesMatch(state.terms[state.t], reg, state.start_i + state.t, state.phrase_length) === false) {\n      // is it too short?\n      if (reg.min !== undefined && count < reg.min) {\n        return null\n      }\n      return state.t\n    }\n  }\n  return state.t\n}\n\nconst greedyTo = function (state, nextReg) {\n  let t = state.t\n  //if there's no next one, just go off the end!\n  if (!nextReg) {\n    return state.terms.length\n  }\n  //otherwise, we're looking for the next one\n  for (; t < state.terms.length; t += 1) {\n    if (doesMatch(state.terms[t], nextReg, state.start_i + t, state.phrase_length) === true) {\n      // console.log(`greedyTo ${state.terms[t].normal}`)\n      return t\n    }\n  }\n  //guess it doesn't exist, then.\n  return null\n}\n\nconst isEndGreedy = function (reg, state) {\n  if (reg.end === true && reg.greedy === true) {\n    if (state.start_i + state.t < state.phrase_length - 1) {\n      let tmpReg = Object.assign({}, reg, { end: false })\n      if (doesMatch(state.terms[state.t], tmpReg, state.start_i + state.t, state.phrase_length) === true) {\n        // console.log(`endGreedy ${state.terms[state.t].normal}`)\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport { isEndGreedy, greedyTo, getGreedy }","\n\nexport const getGroup = function (state, term_index) {\n  if (state.groups[state.inGroup]) {\n    return state.groups[state.inGroup]\n  }\n  state.groups[state.inGroup] = {\n    start: term_index,\n    length: 0,\n  }\n  return state.groups[state.inGroup]\n}\n","import { greedyTo } from './logic/greedy.js'\nimport { getGroup } from '../_lib.js'\n\n//support 'unspecific greedy' .* properly\n// its logic is 'greedy until', where it's looking for the next token\n// '.+ foo' means we check for 'foo', indefinetly\nconst doAstrix = function (state) {\n  let { regs } = state\n  let reg = regs[state.r]\n\n  let skipto = greedyTo(state, regs[state.r + 1])\n  //maybe we couldn't find it\n  if (skipto === null || skipto === 0) {\n    return null\n  }\n  // ensure it's long enough\n  if (reg.min !== undefined && skipto - state.t < reg.min) {\n    return null\n  }\n  // reduce it back, if it's too long\n  if (reg.max !== undefined && skipto - state.t > reg.max) {\n    state.t = state.t + reg.max\n    return true\n  }\n  // set the group result\n  if (state.hasGroup === true) {\n    const g = getGroup(state, state.t)\n    g.length = skipto - state.t\n  }\n  state.t = skipto\n  // log(`✓ |greedy|`)\n  return true\n}\nexport default doAstrix","import doesMatch from '../../term/doesMatch.js'\n\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nexport const doOrBlock = function (state, skipN = 0) {\n  let block = state.regs[state.r]\n  let wasFound = false\n  // do each multiword sequence\n  for (let c = 0; c < block.choices.length; c += 1) {\n    // try to match this list of tokens\n    let regs = block.choices[c]\n    if (!isArray(regs)) {\n      return false\n    }\n    wasFound = regs.every((cr, w_index) => {\n      let extra = 0\n      let t = state.t + w_index + skipN + extra\n      if (state.terms[t] === undefined) {\n        return false\n      }\n      let foundBlock = doesMatch(state.terms[t], cr, t + state.start_i, state.phrase_length)\n      // this can be greedy - '(foo+ bar)'\n      if (foundBlock === true && cr.greedy === true) {\n        for (let i = 1; i < state.terms.length; i += 1) {\n          let term = state.terms[t + i]\n          if (term) {\n            let keepGoing = doesMatch(term, cr, state.start_i + i, state.phrase_length)\n            if (keepGoing === true) {\n              extra += 1\n            } else {\n              break\n            }\n          }\n        }\n      }\n      skipN += extra\n      return foundBlock\n    })\n    if (wasFound) {\n      skipN += regs.length\n      break\n    }\n  }\n  // we found a match -  is it greedy though?\n  if (wasFound && block.greedy === true) {\n    return doOrBlock(state, skipN) // try it again!\n  }\n  return skipN\n}\n\nconst doAndBlock = function (state) {\n  let longest = 0\n  // all blocks must match, and we return the greediest match\n  let reg = state.regs[state.r]\n  let allDidMatch = reg.choices.every(block => {\n    //  for multi-word blocks, all must match\n    let allWords = block.every((cr, w_index) => {\n      let tryTerm = state.t + w_index\n      if (state.terms[tryTerm] === undefined) {\n        return false\n      }\n      return doesMatch(state.terms[tryTerm], cr, tryTerm, state.phrase_length)\n    })\n    if (allWords === true && block.length > longest) {\n      longest = block.length\n    }\n    return allWords\n  })\n  if (allDidMatch === true) {\n    // console.log(`doAndBlock ${state.terms[state.t].normal}`)\n    return longest\n  }\n  return false\n}\nexport { doAndBlock }","import { doOrBlock } from './logic/and-or.js'\nimport { getGroup } from '../_lib.js'\n\nconst orBlock = function (state) {\n  const { regs } = state\n  let reg = regs[state.r]\n  let skipNum = doOrBlock(state)\n  // did we find a match?\n  if (skipNum) {\n    // handle 'not' logic\n    if (reg.negative === true) {\n      return null // die\n    }\n    // tuck in as named-group\n    if (state.hasGroup === true) {\n      const g = getGroup(state, state.t)\n      g.length += skipNum\n    }\n    // ensure we're at the end\n    if (reg.end === true) {\n      let end = state.phrase_length\n      if (state.t + state.start_i + skipNum !== end) {\n        return null\n      }\n    }\n    state.t += skipNum\n    // log(`✓ |found-or|`)\n    return true\n  } else if (!reg.optional) {\n    return null //die\n  }\n  return true\n}\nexport default orBlock","import { doAndBlock } from './logic/and-or.js'\nimport { getGroup } from '../_lib.js'\n\n// '(foo && #Noun)' - require all matches on the term\nconst andBlock = function (state) {\n  const { regs } = state\n  let reg = regs[state.r]\n\n  let skipNum = doAndBlock(state)\n  if (skipNum) {\n    // handle 'not' logic\n    if (reg.negative === true) {\n      return null // die\n    }\n    if (state.hasGroup === true) {\n      const g = getGroup(state, state.t)\n      g.length += skipNum\n    }\n    // ensure we're at the end\n    if (reg.end === true) {\n      let end = state.phrase_length - 1\n      if (state.t + state.start_i !== end) {\n        return null\n      }\n    }\n    state.t += skipNum\n    // log(`✓ |found-and|`)\n    return true\n  } else if (!reg.optional) {\n    return null //die\n  }\n  return true\n}\nexport default andBlock","import matchTerm from '../term/doesMatch.js'\nimport negGreedy from './logic/negative-greedy.js'\n\n// '!foo' should match anything that isn't 'foo'\n// if it matches, return false\nconst doNegative = function (state) {\n  const { regs } = state\n  let reg = regs[state.r]\n\n  // match *anything* but this term\n  let tmpReg = Object.assign({}, reg)\n  tmpReg.negative = false // try removing it\n\n  // found it? if so, we die here\n  let found = matchTerm(state.terms[state.t], tmpReg, state.start_i + state.t, state.phrase_length)\n  if (found) {\n    return false//bye\n  }\n  // should we skip the term too?\n  if (reg.optional) {\n    // \"before after\" - \"before !foo? after\"\n    // does the next reg match the this term?\n    let nextReg = regs[state.r + 1]\n    if (nextReg) {\n      let fNext = matchTerm(state.terms[state.t], nextReg, state.start_i + state.t, state.phrase_length)\n      if (fNext) {\n        state.r += 1\n      } else if (nextReg.optional && regs[state.r + 2]) {\n        // ugh. ok,\n        // support \"!foo? extra? need\"\n        // but don't scan ahead more than that.\n        let fNext2 = matchTerm(state.terms[state.t], regs[state.r + 2], state.start_i + state.t, state.phrase_length)\n        if (fNext2) {\n          state.r += 2\n        }\n      }\n    }\n  }\n  // negative greedy - !foo+  - super hard!\n  if (reg.greedy) {\n    return negGreedy(state, tmpReg, regs[state.r + 1])\n  }\n  state.t += 1\n  return true\n}\nexport default doNegative","import doesMatch from '../../term/doesMatch.js'\n\nconst negGreedy = function (state, reg, nextReg) {\n  let skip = 0\n  for (let t = state.t; t < state.terms.length; t += 1) {\n    let found = doesMatch(state.terms[t], reg, state.start_i + state.t, state.phrase_length)\n    // we don't want a match, here\n    if (found) {\n      break//stop going\n    }\n    // are we doing 'greedy-to'?\n    // - \"!foo+ after\"  should stop at 'after'\n    if (nextReg) {\n      found = doesMatch(state.terms[t], nextReg, state.start_i + state.t, state.phrase_length)\n      if (found) {\n        break\n      }\n    }\n    skip += 1\n    // is it max-length now?\n    if (reg.max !== undefined && skip === reg.max) {\n      break\n    }\n  }\n  if (skip === 0) {\n    return false //dead\n  }\n  // did we satisfy min for !foo{min,max}\n  if (reg.min && reg.min > skip) {\n    return false//dead\n  }\n  state.t += skip\n  // state.r += 1\n  return true\n}\n\nexport default negGreedy","import { getGreedy } from './logic/greedy.js'\n\n// keep 'foo+' or 'foo*' going..\nconst greedyMatch = function (state) {\n  const { regs, phrase_length } = state\n  let reg = regs[state.r]\n  state.t = getGreedy(state, regs[state.r + 1])\n  if (state.t === null) {\n    return null //greedy was too short\n  }\n  // foo{2,4} - has a greed-minimum\n  if (reg.min && reg.min > state.t) {\n    return null //greedy was too short\n  }\n  // 'foo+$' - if also an end-anchor, ensure we really reached the end\n  if (reg.end === true && state.start_i + state.t !== phrase_length) {\n    return null //greedy didn't reach the end\n  }\n  return true\n}\nexport default greedyMatch","import { getGroup } from '../_lib.js'\nimport foundOptional from './optional-match.js'\nimport greedyMatch from './greedy-match.js'\nimport contractionSkip from './contraction-skip.js'\n\n\n// '[foo]' should also be logged as a group\nconst setGroup = function (state, startAt) {\n  let reg = state.regs[state.r]\n  // Get or create capture group\n  const g = getGroup(state, startAt)\n  // Update group - add greedy or increment length\n  if (state.t > 1 && reg.greedy) {\n    g.length += state.t - startAt\n  } else {\n    g.length++\n  }\n}\n\n// when a reg matches a term\nconst simpleMatch = function (state) {\n  const { regs } = state\n  let reg = regs[state.r]\n  let term = state.terms[state.t]\n  let startAt = state.t\n  // if it's a negative optional match... :0\n  if (reg.optional && regs[state.r + 1] && reg.negative) {\n    return true\n  }\n  // okay, it was a match, but if it's optional too,\n  // we should check the next reg too, to skip it?\n  if (reg.optional && regs[state.r + 1]) {\n    foundOptional(state)\n  }\n  // Contraction skip:\n  // did we match the first part of a contraction?\n  if (term.implicit && state.terms[state.t + 1]) {\n    contractionSkip(state)\n  }\n  //advance to the next term!\n  state.t += 1\n  //check any ending '$' flags\n  //if this isn't the last term, refuse the match\n  if (reg.end === true && state.t !== state.terms.length && reg.greedy !== true) {\n    return null //die\n  }\n  // keep 'foo+' going...\n  if (reg.greedy === true) {\n    let alive = greedyMatch(state)\n    if (!alive) {\n      return null\n    }\n  }\n  // log '[foo]' as a group\n  if (state.hasGroup === true) {\n    setGroup(state, startAt)\n  }\n  return true\n}\nexport default simpleMatch","import matchTerm from '../term/doesMatch.js'\n\n// 'foo? foo' matches are tricky.\nconst foundOptional = function (state) {\n  const { regs } = state\n  let reg = regs[state.r]\n  let term = state.terms[state.t]\n  // does the next reg match it too?\n  let nextRegMatched = matchTerm(term, regs[state.r + 1], state.start_i + state.t, state.phrase_length)\n  if (reg.negative || nextRegMatched) {\n    // but does the next reg match the next term??\n    // only skip if it doesn't\n    let nextTerm = state.terms[state.t + 1]\n    if (!nextTerm || !matchTerm(nextTerm, regs[state.r + 1], state.start_i + state.t, state.phrase_length)) {\n      state.r += 1\n    }\n  }\n}\n\nexport default foundOptional","// for: ['we', 'have']\n// a match for \"we have\" should work as normal\n// but matching \"we've\" should skip over implict terms\nconst contractionSkip = function (state) {\n  let term = state.terms[state.t]\n  let reg = state.regs[state.r]\n  // did we match the first part of a contraction?\n  if (term.implicit && state.terms[state.t + 1]) {\n    let nextTerm = state.terms[state.t + 1]\n    // ensure next word is implicit\n    if (!nextTerm.implicit) {\n      return\n    }\n    // we matched \"we've\" - skip-over [we, have]\n    if (reg.word === term.normal) {\n      state.t += 1\n    }\n    // also skip for @hasContraction\n    if (reg.method === 'hasContraction') {\n      state.t += 1\n    }\n  }\n}\nexport default contractionSkip","import doAstrix from './steps/astrix.js'\nimport doOrBlock from './steps/or-block.js'\nimport doAndBlock from './steps/and-block.js'\nimport doNegative from './steps/negative.js'\nimport simpleMatch from './steps/simple-match.js'\nimport { isEndGreedy } from './steps/logic/greedy.js'\nimport matchTerm from './term/doesMatch.js'\n// i formally apologize for how complicated this is.\n\n/** \n * try a sequence of match tokens ('regs') \n * on a sequence of terms, \n * starting at this certain term.\n */\nconst tryHere = function (terms, regs, start_i, phrase_length) {\n  // console.log(`\\n\\n:start: '${terms[0].text}':`)\n  if (terms.length === 0 || regs.length === 0) {\n    return null\n  }\n  // all the variables that matter\n  let state = {\n    t: 0,\n    terms: terms,\n    r: 0,\n    regs: regs,\n    groups: {},\n    start_i: start_i,\n    phrase_length: phrase_length,\n    inGroup: null,\n  }\n\n  // we must satisfy every token in 'regs'\n  // if we get to the end, we have a match.\n  for (; state.r < regs.length; state.r += 1) {\n    let reg = regs[state.r]\n    // Check if this reg has a named capture group\n    state.hasGroup = Boolean(reg.group)\n    // Reuse previous capture group if same\n    if (state.hasGroup === true) {\n      state.inGroup = reg.group\n    } else {\n      state.inGroup = null\n    }\n    //have we run-out of terms?\n    if (!state.terms[state.t]) {\n      //are all remaining regs optional or negative?\n      const alive = regs.slice(state.r).some(remain => !remain.optional)\n      if (alive === false) {\n        break //done!\n      }\n      return null // die\n    }\n    // support 'unspecific greedy' .* properly\n    if (reg.anything === true && reg.greedy === true) {\n      let alive = doAstrix(state)\n      if (!alive) {\n        return null\n      }\n      continue\n    }\n    // slow-OR - multi-word OR (a|b|foo bar)\n    if (reg.choices !== undefined && reg.operator === 'or') {\n      let alive = doOrBlock(state)\n      if (!alive) {\n        return null\n      }\n      continue\n    }\n    // slow-AND - multi-word AND (#Noun && foo) blocks\n    if (reg.choices !== undefined && reg.operator === 'and') {\n      let alive = doAndBlock(state)\n      if (!alive) {\n        return null\n      }\n      continue\n    }\n    // support '.' as any-single\n    if (reg.anything === true) {\n      // '!.' negative anything should insta-fail\n      if (reg.negative && reg.anything) {\n        return null\n      }\n      let alive = simpleMatch(state)\n      if (!alive) {\n        return null\n      }\n      continue\n    }\n    // support 'foo*$' until the end\n    if (isEndGreedy(reg, state) === true) {\n      let alive = simpleMatch(state)\n      if (!alive) {\n        return null\n      }\n      continue\n    }\n    // ok, it doesn't match - but maybe it wasn't *supposed* to?\n    if (reg.negative) {\n      // we want *anything* but this term\n      let alive = doNegative(state)\n      if (!alive) {\n        return null\n      }\n      continue\n    }\n    // ok, finally test the term-reg\n    // console.log('   - ' + state.terms[state.t].text)\n    let hasMatch = matchTerm(state.terms[state.t], reg, state.start_i + state.t, state.phrase_length)\n    if (hasMatch === true) {\n      let alive = simpleMatch(state)\n      if (!alive) {\n        return null\n      }\n      continue\n    }\n    // console.log('=-=-=-= here -=-=-=-')\n\n    //ok who cares, keep going\n    if (reg.optional === true) {\n      continue\n    }\n\n    // finally, we die\n    return null\n  }\n  //return our results, as pointers\n  let pntr = [null, start_i, state.t + start_i]\n  if (pntr[1] === pntr[2]) {\n    return null //found 0 terms\n  }\n  let groups = {}\n  Object.keys(state.groups).forEach(k => {\n    let o = state.groups[k]\n    let start = start_i + o.start\n    groups[k] = [null, start, start + o.length]\n  })\n  return { pointer: pntr, groups: groups }\n}\nexport default tryHere\n","import failFast from './01-failFast.js'\nimport fromHere from './02-from-here.js'\nimport getGroup from './03-getGroup.js'\nimport notIf from './03-notIf.js'\n\n\n// make proper pointers\nconst addSentence = function (res, n) {\n  res.pointer[0] = n\n  Object.keys(res.groups).forEach(k => {\n    res.groups[k][0] = n\n  })\n  return res\n}\n\nconst handleStart = function (terms, regs, n) {\n  let res = fromHere(terms, regs, 0, terms.length)\n  if (res) {\n    res = addSentence(res, n)\n    return res //getGroup([res], group)\n  }\n  return null\n}\n\n// ok, here we go.\nconst runMatch = function (docs, todo, cache) {\n  cache = cache || []\n  let { regs, group, justOne } = todo\n  let results = []\n  if (!regs || regs.length === 0) {\n    return { ptrs: [], byGroup: {} }\n  }\n\n  const minLength = regs.filter(r => r.optional !== true && r.negative !== true).length\n  docs: for (let n = 0; n < docs.length; n += 1) {\n    let terms = docs[n]\n    // let index = terms[0].index || []\n    // can we skip this sentence?\n    if (cache[n] && failFast(regs, cache[n])) {\n      continue\n    }\n    // ^start regs only run once, per phrase\n    if (regs[0].start === true) {\n      let foundStart = handleStart(terms, regs, n, group)\n      if (foundStart) {\n        results.push(foundStart)\n      }\n      continue\n    }\n    //ok, try starting the match now from every term\n    for (let i = 0; i < terms.length; i += 1) {\n      let slice = terms.slice(i)\n      // ensure it's long-enough\n      if (slice.length < minLength) {\n        break\n      }\n      let res = fromHere(slice, regs, i, terms.length)\n      // did we find a result?\n      if (res) {\n        // res = addSentence(res, index[0])\n        res = addSentence(res, n)\n        results.push(res)\n        // should we stop here?\n        if (justOne === true) {\n          break docs\n        }\n        // skip ahead, over these results\n        let end = res.pointer[2]\n        if (Math.abs(end - 1) > i) {\n          i = Math.abs(end - 1)\n        }\n      }\n    }\n  }\n  // ensure any end-results ($) match until the last term\n  if (regs[regs.length - 1].end === true) {\n    results = results.filter(res => {\n      let n = res.pointer[0]\n      return docs[n].length === res.pointer[2]\n    })\n  }\n  if (todo.notIf) {\n    results = notIf(results, todo.notIf, docs)\n  }\n  // grab the requested group\n  results = getGroup(results, group)\n  // add ids to pointers\n  results.ptrs.forEach(ptr => {\n    let [n, start, end] = ptr\n    ptr[3] = docs[n][start].id//start-id\n    ptr[4] = docs[n][end - 1].id//end-id\n  })\n  return results\n}\n\nexport default runMatch\n","import parseMatch from './parseMatch/index.js'\nimport match from './match/index.js'\nimport termMethods from './termMethods.js'\n\nconst methods = {\n  one: {\n    termMethods,\n    parseMatch,\n    match,\n  },\n}\n\nexport default methods\n","import parseBlocks from './01-parseBlocks.js'\nimport parseToken from './02-parseToken.js'\nimport splitHyphens from './03-splitHyphens.js'\nimport inflectRoot from './04-inflect-root.js'\nimport postProcess from './05-postProcess.js'\n\n/** parse a match-syntax string into json */\nconst syntax = function (input, opts, world) {\n  // fail-fast\n  if (input === null || input === undefined || input === '') {\n    return []\n  }\n  opts = opts || {}\n  if (typeof input === 'number') {\n    input = String(input) //go for it?\n  }\n  let tokens = parseBlocks(input)\n  //turn them into objects\n  tokens = tokens.map(str => parseToken(str, opts))\n  // '~re-do~'\n  tokens = splitHyphens(tokens, world)\n  // '{walk}'\n  tokens = inflectRoot(tokens, world)\n  //clean up anything weird\n  tokens = postProcess(tokens, opts)\n  // console.log(tokens)\n  return tokens\n}\nexport default syntax\n","import fromHere from './02-from-here.js'\n\nconst notIf = function (results, not, docs) {\n  results = results.filter(res => {\n    let [n, start, end] = res.pointer\n    let terms = docs[n].slice(start, end)\n    for (let i = 0; i < terms.length; i += 1) {\n      let slice = terms.slice(i)\n      let found = fromHere(slice, not, i, terms.length)\n      if (found !== null) {\n        return false\n      }\n    }\n    return true\n  })\n  return results\n}\n\nexport default notIf","// support returning a subset of a match\n// like 'foo [bar] baz' -> bar\nconst getGroup = function (res, group) {\n  let ptrs = []\n  let byGroup = {}\n  if (res.length === 0) {\n    return { ptrs, byGroup }\n  }\n  if (typeof group === 'number') {\n    group = String(group)\n  }\n  if (group) {\n    res.forEach(r => {\n      if (r.groups[group]) {\n        ptrs.push(r.groups[group])\n      }\n    })\n  } else {\n    res.forEach(r => {\n      ptrs.push(r.pointer)\n      Object.keys(r.groups).forEach(k => {\n        byGroup[k] = byGroup[k] || []\n        byGroup[k].push(r.groups[k])\n      })\n    })\n  }\n  return { ptrs, byGroup }\n}\nexport default getGroup\n","\nexport default {\n  /** pre-parse any match statements */\n  parseMatch: function (str, opts) {\n    const world = this.world()\n    let killUnicode = world.methods.one.killUnicode\n    if (killUnicode) {\n      str = killUnicode(str, world)\n    }\n    return world.methods.one.parseMatch(str, opts, world)\n  }\n}","import api from './api/index.js'\nimport methods from './methods/index.js'\nimport lib from './lib.js'\n\nexport default {\n  api,\n  methods,\n  lib,\n}\n","const isClass = /^\\../\nconst isId = /^#./\n\nconst escapeXml = (str) => {\n  str = str.replace(/&/g, '&amp;')\n  str = str.replace(/</g, '&lt;')\n  str = str.replace(/>/g, '&gt;')\n  str = str.replace(/\"/g, '&quot;')\n  str = str.replace(/'/g, '&apos;');\n  return str\n}\n\n// interpret .class, #id, tagName\nconst toTag = function (k) {\n  let start = ''\n  let end = '</span>'\n  k = escapeXml(k)\n  if (isClass.test(k)) {\n    start = `<span class=\"${k.replace(/^\\./, '')}\"`\n  } else if (isId.test(k)) {\n    start = `<span id=\"${k.replace(/^#/, '')}\"`\n  } else {\n    start = `<${k}`\n    end = `</${k}>`\n  }\n  start += '>'\n  return { start, end }\n}\n\nconst getIndex = function (doc, obj) {\n  let starts = {}\n  let ends = {}\n  Object.keys(obj).forEach(k => {\n    let res = obj[k]\n    let tag = toTag(k)\n    if (typeof res === 'string') {\n      res = doc.match(res)\n    }\n    res.docs.forEach(terms => {\n      // don't highlight implicit terms\n      if (terms.every(t => t.implicit)) {\n        return\n      }\n      let a = terms[0].id\n      starts[a] = starts[a] || []\n      starts[a].push(tag.start)\n      let b = terms[terms.length - 1].id\n      ends[b] = ends[b] || []\n      ends[b].push(tag.end)\n    })\n  })\n  return { starts, ends }\n}\n\nconst html = function (obj) {\n  // index ids to highlight\n  let { starts, ends } = getIndex(this, obj)\n  // create the text output\n  let out = ''\n  this.docs.forEach(terms => {\n    for (let i = 0; i < terms.length; i += 1) {\n      let t = terms[i]\n      // do a span tag\n      if (starts.hasOwnProperty(t.id)) {\n        out += starts[t.id].join('')\n      }\n      out += t.pre || '' + t.text || ''\n      if (ends.hasOwnProperty(t.id)) {\n        out += ends[t.id].join('')\n      }\n      out += t.post || ''\n    }\n  })\n  return out\n}\nexport default { html }","const trimEnd = /[,:;)\\]*.?~!\\u0022\\uFF02\\u201D\\u2019\\u00BB\\u203A\\u2032\\u2033\\u2034\\u301E\\u00B4—-]+$/\nconst trimStart =\n  /^[(['\"*~\\uFF02\\u201C\\u2018\\u201F\\u201B\\u201E\\u2E42\\u201A\\u00AB\\u2039\\u2035\\u2036\\u2037\\u301D\\u0060\\u301F]+/\n\nconst punctToKill = /[,:;)('\"\\u201D\\]]/\nconst isHyphen = /^[-–—]$/\nconst hasSpace = / /\n\nconst textFromTerms = function (terms, opts, keepSpace = true) {\n  let txt = ''\n  terms.forEach((t) => {\n    let pre = t.pre || ''\n    let post = t.post || ''\n    if (opts.punctuation === 'some') {\n      pre = pre.replace(trimStart, '')\n      // replace a hyphen with a space\n      if (isHyphen.test(post)) {\n        post = ' '\n      }\n      post = post.replace(punctToKill, '')\n      // cleanup exclamations\n      post = post.replace(/\\?!+/, '?')\n      post = post.replace(/!+/, '!')\n      post = post.replace(/\\?+/, '?')\n      // kill elipses\n      post = post.replace(/\\.{2,}/, '')\n      // kill abbreviation periods\n      if (t.tags.has('Abbreviation')) {\n        post = post.replace(/\\./, '')\n      }\n    }\n    if (opts.whitespace === 'some') {\n      pre = pre.replace(/\\s/, '') //remove pre-whitespace\n      post = post.replace(/\\s+/, ' ') //replace post-whitespace with a space\n    }\n    if (!opts.keepPunct) {\n      pre = pre.replace(trimStart, '')\n      if (post === '-') {\n        post = ' '\n      } else {\n        post = post.replace(trimEnd, '')\n      }\n    }\n    // grab the correct word format\n    let word = t[opts.form || 'text'] || t.normal || ''\n    if (opts.form === 'implicit') {\n      word = t.implicit || t.text\n    }\n    if (opts.form === 'root' && t.implicit) {\n      word = t.root || t.implicit || t.normal\n    }\n    // add an implicit space, for contractions\n    if ((opts.form === 'machine' || opts.form === 'implicit' || opts.form === 'root') && t.implicit) {\n      if (!post || !hasSpace.test(post)) {\n        post += ' '\n      }\n    }\n    txt += pre + word + post\n  })\n  if (keepSpace === false) {\n    txt = txt.trim()\n  }\n  if (opts.lowerCase === true) {\n    txt = txt.toLowerCase()\n  }\n  return txt\n}\n\nconst textFromDoc = function (docs, opts) {\n  let text = ''\n  if (!docs || !docs[0] || !docs[0][0]) {\n    return text\n  }\n  for (let i = 0; i < docs.length; i += 1) {\n    // middle\n    text += textFromTerms(docs[i], opts, true)\n  }\n  if (!opts.keepSpace) {\n    text = text.trim()\n  }\n  if (opts.keepPunct === false) {\n    // don't remove ':)' etc\n    if (!docs[0][0].tags.has('Emoticon')) {\n      text = text.replace(trimStart, '')\n    }\n    let last = docs[docs.length - 1]\n    if (!last[last.length - 1].tags.has('Emoticon')) {\n      text = text.replace(trimEnd, '')\n    }\n  }\n  if (opts.cleanWhitespace === true) {\n    text = text.trim()\n  }\n  return text\n}\nexport { textFromDoc, textFromTerms }\n","const fmts = {\n  text: {\n    form: 'text',\n  },\n  normal: {\n    whitespace: 'some',\n    punctuation: 'some',\n    case: 'some',\n    unicode: 'some',\n    form: 'normal',\n  },\n  machine: {\n    keepSpace: false,\n    whitespace: 'some',\n    punctuation: 'some',\n    case: 'none',\n    unicode: 'some',\n    form: 'machine',\n  },\n  root: {\n    keepSpace: false,\n    whitespace: 'some',\n    punctuation: 'some',\n    case: 'some',\n    unicode: 'some',\n    form: 'root',\n  },\n  implicit: {\n    form: 'implicit',\n  }\n}\nfmts.clean = fmts.normal\nfmts.reduced = fmts.root\nexport default fmts","/* eslint-disable no-bitwise */\n/* eslint-disable no-mixed-operators */\n/* eslint-disable no-multi-assign */\n\n// https://github.com/jbt/tiny-hashes/\nlet k = [], i = 0;\nfor (; i < 64;) {\n  k[i] = 0 | Math.sin(++i % Math.PI) * 4294967296;\n}\n\nexport default function md5(s) {\n  let b, c, d,\n    h = [b = 0x67452301, c = 0xEFCDAB89, ~b, ~c],\n    words = [],\n    j = decodeURI(encodeURI(s)) + '\\x80',\n    a = j.length;\n\n  s = (--a / 4 + 2) | 15;\n\n  words[--s] = a * 8;\n\n  for (; ~a;) {\n    words[a >> 2] |= j.charCodeAt(a) << 8 * a--;\n  }\n\n  for (i = j = 0; i < s; i += 16) {\n    a = h;\n\n    for (; j < 64;\n      a = [\n        d = a[3],\n        (\n          b +\n          ((d =\n            a[0] +\n            [\n              b & c | ~b & d,\n              d & b | ~d & c,\n              b ^ c ^ d,\n              c ^ (b | ~d)\n            ][a = j >> 4] +\n            k[j] +\n            ~~words[i | [\n              j,\n              5 * j + 1,\n              3 * j + 5,\n              7 * j\n            ][a] & 15]\n          ) << (a = [\n            7, 12, 17, 22,\n            5, 9, 14, 20,\n            4, 11, 16, 23,\n            6, 10, 15, 21\n          ][4 * a + j++ % 4]) | d >>> -a)\n        ),\n        b,\n        c\n      ]\n    ) {\n      b = a[1] | 0;\n      c = a[2];\n    }\n    for (j = 4; j;) h[--j] += a[j];\n  }\n\n  for (s = ''; j < 32;) {\n    s += ((h[j >> 3] >> ((1 ^ j++) * 4)) & 15).toString(16);\n  }\n\n  return s;\n}\n\n// console.log(md5('food-safety'))","import { textFromTerms } from './lib/_text.js'\nimport fmts from './_fmts.js'\nimport hash from './lib/hash.js'\n\n\nconst defaults = {\n  text: true,\n  terms: true,\n}\n\nlet opts = { case: 'none', unicode: 'some', form: 'machine', punctuation: 'some' }\n\nconst merge = function (a, b) {\n  return Object.assign({}, a, b)\n}\n\nconst fns = {\n  text: (terms) => textFromTerms(terms, { keepPunct: true }, false),\n  normal: (terms) => textFromTerms(terms, merge(fmts.normal, { keepPunct: true }), false),\n  implicit: (terms) => textFromTerms(terms, merge(fmts.implicit, { keepPunct: true }), false),\n\n  machine: (terms) => textFromTerms(terms, opts, false),\n  root: (terms) => textFromTerms(terms, merge(opts, { form: 'root' }), false),\n\n  hash: (terms) => hash(textFromTerms(terms, { keepPunct: true }, false)),\n\n  offset: (terms) => {\n    let len = fns.text(terms).length\n    return {\n      index: terms[0].offset.index,\n      start: terms[0].offset.start,\n      length: len,\n    }\n  },\n  terms: (terms) => {\n    return terms.map(t => {\n      let term = Object.assign({}, t)\n      term.tags = Array.from(t.tags)\n      return term\n    })\n  },\n  confidence: (_terms, view, i) => view.eq(i).confidence(),\n  syllables: (_terms, view, i) => view.eq(i).syllables(),\n  sentence: (_terms, view, i) => view.eq(i).fullSentence().text(),\n  dirty: (terms) => terms.some(t => t.dirty === true)\n}\nfns.sentences = fns.sentence\nfns.clean = fns.normal\nfns.reduced = fns.root\n\nconst toJSON = function (view, option) {\n  option = option || {}\n  if (typeof option === 'string') {\n    option = {}\n  }\n  option = Object.assign({}, defaults, option)\n  // run any necessary upfront steps\n  if (option.offset) {\n    view.compute('offset')\n  }\n  return view.docs.map((terms, i) => {\n    let res = {}\n    Object.keys(option).forEach(k => {\n      if (option[k] && fns[k]) {\n        res[k] = fns[k](terms, view, i)\n      }\n    })\n    return res\n  })\n}\n\n\nconst methods = {\n  /** return data */\n  json: function (n) {\n    let res = toJSON(this, n)\n    if (typeof n === 'number') {\n      return res[n]\n    }\n    return res\n  },\n}\nmethods.data = methods.json\nexport default methods","/* eslint-disable no-console */\nconst logClientSide = function (view) {\n  console.log('%c -=-=- ', 'background-color:#6699cc;')\n  view.forEach(m => {\n    console.groupCollapsed(m.text())\n    let terms = m.docs[0]\n    let out = terms.map(t => {\n      let text = t.text || '-'\n      if (t.implicit) {\n        text = '[' + t.implicit + ']'\n      }\n      let tags = '[' + Array.from(t.tags).join(', ') + ']'\n      return { text, tags }\n    })\n    console.table(out, ['text', 'tags'])\n    console.groupEnd();\n  })\n}\nexport default logClientSide\n","// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\nconst reset = '\\x1b[0m'\n\n//cheaper than requiring chalk\nconst cli = {\n  green: str => '\\x1b[32m' + str + reset,\n  red: str => '\\x1b[31m' + str + reset,\n  blue: str => '\\x1b[34m' + str + reset,\n  magenta: str => '\\x1b[35m' + str + reset,\n  cyan: str => '\\x1b[36m' + str + reset,\n  yellow: str => '\\x1b[33m' + str + reset,\n  black: str => '\\x1b[30m' + str + reset,\n  dim: str => '\\x1b[2m' + str + reset,\n  i: str => '\\x1b[3m' + str + reset,\n}\nexport default cli\n","/* eslint-disable no-console */\nimport cli from './_color.js'\n\nconst tagString = function (tags, model) {\n  if (model.one.tagSet) {\n    tags = tags.map(tag => {\n      if (!model.one.tagSet.hasOwnProperty(tag)) {\n        return tag\n      }\n      const c = model.one.tagSet[tag].color || 'blue'\n      return cli[c](tag)\n    })\n  }\n  return tags.join(', ')\n}\n\nconst showTags = function (view) {\n  let { docs, model } = view\n  if (docs.length === 0) {\n    console.log(cli.blue('\\n     ──────'))\n  }\n  docs.forEach(terms => {\n    console.log(cli.blue('\\n  ┌─────────'))\n    terms.forEach(t => {\n      let tags = [...(t.tags || [])]\n      let text = t.text || '-'\n      if (t.sense) {\n        text = `{${t.normal}/${t.sense}}`\n      }\n      if (t.implicit) {\n        text = '[' + t.implicit + ']'\n      }\n      text = cli.yellow(text)\n      let word = \"'\" + text + \"'\"\n      word = word.padEnd(18)\n      let str = cli.blue('  │ ') + cli.i(word) + '  - ' + tagString(tags, model)\n      console.log(str)\n    })\n  })\n}\nexport default showTags\n","import cli from './_color.js'\n\nconst split = (txt, offset, index) => {\n  let buff = index * 9 //there are 9 new chars addded to each highlight\n  let start = offset.start + buff\n  let end = start + offset.length\n  let pre = txt.substring(0, start)\n  let mid = txt.substring(start, end)\n  let post = txt.substring(end, txt.length)\n  return [pre, mid, post]\n}\n\nconst spliceIn = function (txt, offset, index) {\n  let parts = split(txt, offset, index)\n  return `${parts[0]}${cli.blue(parts[1])}${parts[2]}`\n}\n\nconst showHighlight = function (doc) {\n  if (!doc.found) {\n    return\n  }\n  let bySentence = {}\n  doc.fullPointer.forEach(ptr => {\n    bySentence[ptr[0]] = bySentence[ptr[0]] || []\n    bySentence[ptr[0]].push(ptr)\n  })\n  Object.keys(bySentence).forEach(k => {\n    let full = doc.update([[Number(k)]])\n    let txt = full.text()\n    let matches = doc.update(bySentence[k])\n    let json = matches.json({ offset: true })\n    json.forEach((obj, i) => {\n      txt = spliceIn(txt, obj.offset, i)\n    })\n    console.log(txt) // eslint-disable-line\n  })\n}\nexport default showHighlight\n","/* eslint-disable no-console */\nimport logClientSide from './client-side.js'\nimport showTags from './tags.js'\nimport showChunks from './chunks.js'\nimport showHighlight from './highlight.js'\n\nfunction isClientSide() {\n  return typeof window !== 'undefined' && window.document\n}\n//output some helpful stuff to the console\nconst debug = function (opts = {}) {\n  let view = this\n  if (typeof opts === 'string') {\n    let tmp = {}\n    tmp[opts] = true //allow string input\n    opts = tmp\n  }\n  if (isClientSide()) {\n    logClientSide(view)\n    return view\n  }\n  if (opts.tags !== false) {\n    showTags(view)\n    console.log('\\n')\n  }\n  // output chunk-view, too\n  if (opts.chunks === true) {\n    showChunks(view)\n    console.log('\\n')\n  }\n  // highlight match in sentence\n  if (opts.highlight === true) {\n    showHighlight(view)\n    console.log('\\n')\n  }\n  return view\n}\nexport default debug\n","const toText = function (term) {\n  let pre = term.pre || ''\n  let post = term.post || ''\n  return pre + term.text + post\n}\n\nconst findStarts = function (doc, obj) {\n  let starts = {}\n  Object.keys(obj).forEach(reg => {\n    let m = doc.match(reg)\n    m.fullPointer.forEach(a => {\n      starts[a[3]] = { fn: obj[reg], end: a[2] }\n    })\n  })\n  return starts\n}\n\nconst wrap = function (doc, obj) {\n  // index ids to highlight\n  let starts = findStarts(doc, obj)\n  let text = ''\n  doc.docs.forEach((terms, n) => {\n    for (let i = 0; i < terms.length; i += 1) {\n      let t = terms[i]\n      // do a span tag\n      if (starts.hasOwnProperty(t.id)) {\n        let { fn, end } = starts[t.id]\n        let m = doc.update([[n, i, end]])\n        text += terms[i].pre || ''\n        text += fn(m)\n        i = end - 1\n        text += terms[i].post || ''\n      } else {\n        text += toText(t)\n      }\n    }\n  })\n  return text\n}\nexport default wrap","import debug from './debug/index.js'\nimport wrap from './wrap.js'\nimport hash from './lib/hash.js'\n\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\n// sort by frequency\nconst topk = function (arr) {\n  let obj = {}\n  arr.forEach(a => {\n    obj[a] = obj[a] || 0\n    obj[a] += 1\n  })\n  let res = Object.keys(obj).map(k => {\n    return { normal: k, count: obj[k] }\n  })\n  return res.sort((a, b) => (a.count > b.count ? -1 : 0))\n}\n\n/** some named output formats */\nconst out = function (method) {\n  // support custom outputs\n  if (isObject(method)) {\n    return wrap(this, method)\n  }\n  // text out formats\n  if (method === 'text') {\n    return this.text()\n  }\n  if (method === 'normal') {\n    return this.text('normal')\n  }\n  if (method === 'root') {\n    return this.text('root')\n  }\n  if (method === 'machine' || method === 'reduced') {\n    return this.text('machine')\n  }\n  if (method === 'hash' || method === 'md5') {\n    return hash(this.text())\n  }\n\n  // json data formats\n  if (method === 'json') {\n    return this.json()\n  }\n  if (method === 'offset' || method === 'offsets') {\n    this.compute('offset')\n    return this.json({ offset: true })\n  }\n  if (method === 'array') {\n    let arr = this.docs.map(terms => {\n      return terms\n        .reduce((str, t) => {\n          return str + t.pre + t.text + t.post\n        }, '')\n        .trim()\n    })\n    return arr.filter(str => str)\n  }\n  // return terms sorted by frequency\n  if (method === 'freq' || method === 'frequency' || method === 'topk') {\n    return topk(this.json({ normal: true }).map(o => o.normal))\n  }\n\n  // some handy ad-hoc outputs\n  if (method === 'terms') {\n    let list = []\n    this.docs.forEach(s => {\n      let terms = s.terms.map(t => t.text)\n      terms = terms.filter(t => t)\n      list = list.concat(terms)\n    })\n    return list\n  }\n  if (method === 'tags') {\n    return this.docs.map(terms => {\n      return terms.reduce((h, t) => {\n        h[t.implicit || t.normal] = Array.from(t.tags)\n        return h\n      }, {})\n    })\n  }\n  if (method === 'debug') {\n    return this.debug() //allow\n  }\n  return this.text()\n}\n\nconst methods = {\n  /** */\n  debug: debug,\n  /** */\n  out,\n  /** */\n  wrap: function (obj) {\n    return wrap(this, obj)\n  },\n}\n\nexport default methods\n","/* eslint-disable no-console */\nimport cli from './_color.js'\n\nconst showChunks = function (view) {\n  let { docs } = view\n  console.log('')\n  docs.forEach(terms => {\n    let out = []\n    terms.forEach(term => {\n      if (term.chunk === 'Noun') {\n        out.push(cli.blue(term.implicit || term.normal))\n      } else if (term.chunk === 'Verb') {\n        out.push(cli.green(term.implicit || term.normal))\n      } else if (term.chunk === 'Adjective') {\n        out.push(cli.yellow(term.implicit || term.normal))\n      } else if (term.chunk === 'Pivot') {\n        out.push(cli.red(term.implicit || term.normal))\n      } else {\n        out.push(term.implicit || term.normal)\n      }\n    })\n    console.log(out.join(' '), '\\n')\n  })\n}\nexport default showChunks\n","import { textFromDoc } from './lib/_text.js'\nimport fmts from './_fmts.js'\n\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\nexport default {\n  /** */\n  text: function (fmt) {\n    let opts = {}\n    if (fmt && typeof fmt === 'string' && fmts.hasOwnProperty(fmt)) {\n      opts = Object.assign({}, fmts[fmt])\n    } else if (fmt && isObject(fmt)) {\n      opts = Object.assign({}, fmt)//todo: fixme\n    }\n    if (opts.keepSpace === undefined && this.pointer) {\n      opts.keepSpace = false\n    }\n    if (opts.keepPunct === undefined && this.pointer) {\n      let ptr = this.pointer[0]\n      if (ptr && ptr[1]) {\n        opts.keepPunct = false\n      } else {\n        opts.keepPunct = true\n      }\n    }\n    // set defaults\n    if (opts.keepPunct === undefined) {\n      opts.keepPunct = true\n    }\n    if (opts.keepSpace === undefined) {\n      opts.keepSpace = true\n    }\n    return textFromDoc(this.docs, opts)\n  },\n}\n","import html from './html.js'\nimport json from './json.js'\nimport out from './out.js'\nimport text from './text.js'\n\nconst methods = Object.assign({}, out, text, json, html)\n\nconst addAPI = function (View) {\n  Object.assign(View.prototype, methods)\n}\nexport default addAPI\n","import api from './api/index.js'\nimport hash from './api/lib/hash.js'\n\nexport default {\n  api,\n  methods: {\n    one: {\n      hash\n    }\n  }\n}\n","// do the pointers intersect?\nexport const doesOverlap = function (a, b) {\n  if (a[0] !== b[0]) {\n    return false\n  }\n  let [, startA, endA] = a\n  let [, startB, endB] = b\n  // [a,a,a,-,-,-,]\n  // [-,-,b,b,b,-,]\n  if (startA <= startB && endA > startB) {\n    return true\n  }\n  // [-,-,-,a,a,-,]\n  // [-,-,b,b,b,-,]\n  if (startB <= startA && endB > startA) {\n    return true\n  }\n  return false\n}\n\n// get widest min/max\nexport const getExtent = function (ptrs) {\n  let min = ptrs[0][1]\n  let max = ptrs[0][2]\n  ptrs.forEach(ptr => {\n    if (ptr[1] < min) {\n      min = ptr[1]\n    }\n    if (ptr[2] > max) {\n      max = ptr[2]\n    }\n  })\n  return [ptrs[0][0], min, max]\n}\n\n// collect pointers by sentence number\nexport const indexN = function (ptrs) {\n  let byN = {}\n  ptrs.forEach(ref => {\n    byN[ref[0]] = byN[ref[0]] || []\n    byN[ref[0]].push(ref)\n  })\n  return byN\n}\n\n// remove exact duplicates\nexport const uniquePtrs = function (arr) {\n  let obj = {}\n  for (let i = 0; i < arr.length; i += 1) {\n    obj[arr[i].join(',')] = arr[i]\n  }\n  return Object.values(obj)\n}\n\n// a before b\n// console.log(doesOverlap([0, 0, 4], [0, 2, 5]))\n// // b before a\n// console.log(doesOverlap([0, 3, 4], [0, 1, 5]))\n// // disjoint\n// console.log(doesOverlap([0, 0, 3], [0, 4, 5]))\n// neighbours\n// console.log(doesOverlap([0, 1, 3], [0, 3, 5]))\n// console.log(doesOverlap([0, 3, 5], [0, 1, 3]))\n\n// console.log(\n//   getExtent([\n//     [0, 3, 4],\n//     [0, 4, 5],\n//     [0, 1, 2],\n//   ])\n// )\n","import { indexN } from './_lib.js'\n\n// split a pointer, by match pointer\nconst pivotBy = function (full, m) {\n  let [n, start] = full\n  let mStart = m[1]\n  let mEnd = m[2]\n  let res = {}\n  // is there space before the match?\n  if (start < mStart) {\n    let end = mStart < full[2] ? mStart : full[2] // find closest end-point\n    res.before = [n, start, end] //before segment\n  }\n  res.match = m\n  // is there space after the match?\n  if (full[2] > mEnd) {\n    res.after = [n, mEnd, full[2]] //after segment\n  }\n  return res\n}\n\nconst doesMatch = function (full, m) {\n  return full[1] <= m[1] && m[2] <= full[2]\n}\n\nconst splitAll = function (full, m) {\n  let byN = indexN(m)\n  let res = []\n  full.forEach(ptr => {\n    let [n] = ptr\n    let matches = byN[n] || []\n    matches = matches.filter(p => doesMatch(ptr, p))\n    if (matches.length === 0) {\n      res.push({ passthrough: ptr })\n      return\n    }\n    // ensure matches are in-order\n    matches = matches.sort((a, b) => a[1] - b[1])\n    // start splitting our left-to-right\n    let carry = ptr\n    matches.forEach((p, i) => {\n      let found = pivotBy(carry, p)\n      // last one\n      if (!matches[i + 1]) {\n        res.push(found)\n      } else {\n        res.push({ before: found.before, match: found.match })\n        if (found.after) {\n          carry = found.after\n        }\n      }\n    })\n  })\n  return res\n}\n\nexport default splitAll\n","import { indexN } from '../api/lib/_lib.js'\nimport splitAll from '../api/lib/split.js'\nimport getDoc from './getDoc.js'\n\n// flat list of terms from nested document\nconst termList = function (docs) {\n  let arr = []\n  for (let i = 0; i < docs.length; i += 1) {\n    for (let t = 0; t < docs[i].length; t += 1) {\n      arr.push(docs[i][t])\n    }\n  }\n  return arr\n}\n\nexport default {\n  one: {\n    termList,\n    getDoc,\n    pointer: {\n      indexN,\n      splitAll,\n    }\n  },\n}\n","const max = 20\n\n// sweep-around looking for our start term uuid\nconst blindSweep = function (id, doc, n) {\n  for (let i = 0; i < max; i += 1) {\n    // look up a sentence\n    if (doc[n - i]) {\n      let index = doc[n - i].findIndex(term => term.id === id)\n      if (index !== -1) {\n        return [n - i, index]\n      }\n    }\n    // look down a sentence\n    if (doc[n + i]) {\n      let index = doc[n + i].findIndex(term => term.id === id)\n      if (index !== -1) {\n        return [n + i, index]\n      }\n    }\n  }\n  return null\n}\n\nconst repairEnding = function (ptr, document) {\n  let [n, start, , , endId] = ptr\n  let terms = document[n]\n  // look for end-id\n  let newEnd = terms.findIndex(t => t.id === endId)\n  if (newEnd === -1) {\n    // if end-term wasn't found, so go all the way to the end\n    ptr[2] = document[n].length\n    ptr[4] = terms.length ? terms[terms.length - 1].id : null\n  } else {\n    ptr[2] = newEnd // repair ending pointer\n  }\n  return document[n].slice(start, ptr[2] + 1)\n}\n\n/** return a subset of the document, from a pointer */\nconst getDoc = function (ptrs, document) {\n  let doc = []\n  ptrs.forEach((ptr, i) => {\n    if (!ptr) {\n      return\n    }\n    let [n, start, end, id, endId] = ptr //parsePointer(ptr)\n    let terms = document[n] || []\n    if (start === undefined) {\n      start = 0\n    }\n    if (end === undefined) {\n      end = terms.length\n    }\n    if (id && (!terms[start] || terms[start].id !== id)) {\n      // console.log('  repairing pointer...')\n      let wild = blindSweep(id, document, n)\n      if (wild !== null) {\n        let len = end - start\n        terms = document[wild[0]].slice(wild[1], wild[1] + len)\n        // actually change the pointer\n        let startId = terms[0] ? terms[0].id : null\n        ptrs[i] = [wild[0], wild[1], wild[1] + len, startId]\n      }\n    } else {\n      terms = terms.slice(start, end)\n    }\n    if (terms.length === 0) {\n      return\n    }\n    if (start === end) {\n      return\n    }\n    // test end-id, if it exists\n    if (endId && terms[terms.length - 1].id !== endId) {\n      terms = repairEnding(ptr, document)\n    }\n    // otherwise, looks good!\n    doc.push(terms)\n  })\n  doc = doc.filter(a => a.length > 0)\n  return doc\n}\nexport default getDoc","import { doesOverlap, getExtent, indexN, uniquePtrs } from './_lib.js'\n\n// a union is a + b, minus duplicates\nconst getUnion = function (a, b) {\n  let both = a.concat(b)\n  let byN = indexN(both)\n  let res = []\n  both.forEach(ptr => {\n    let [n] = ptr\n    if (byN[n].length === 1) {\n      // we're alone on this sentence, so we're good\n      res.push(ptr)\n      return\n    }\n    // there may be overlaps\n    let hmm = byN[n].filter(m => doesOverlap(ptr, m))\n    hmm.push(ptr)\n    let range = getExtent(hmm)\n    res.push(range)\n  })\n  res = uniquePtrs(res)\n  return res\n}\nexport default getUnion\n\n// two disjoint\n// console.log(getUnion([[1, 3, 4]], [[0, 1, 2]]))\n// two disjoint\n// console.log(getUnion([[0, 3, 4]], [[0, 1, 2]]))\n// overlap-plus\n// console.log(getUnion([[0, 1, 4]], [[0, 2, 6]]))\n// overlap\n// console.log(getUnion([[0, 1, 4]], [[0, 2, 3]]))\n// neighbours\n// console.log(getUnion([[0, 1, 3]], [[0, 3, 5]]))\n","import splitAll from './split.js'\n\nconst subtract = function (refs, not) {\n  let res = []\n  let found = splitAll(refs, not)\n  found.forEach(o => {\n    if (o.passthrough) {\n      res.push(o.passthrough)\n    }\n    if (o.before) {\n      res.push(o.before)\n    }\n    if (o.after) {\n      res.push(o.after)\n    }\n  })\n  return res\n}\nexport default subtract\n\n// console.log(subtract([[0, 0, 2]], [[0, 0, 1]]))\n// console.log(subtract([[0, 0, 2]], [[0, 1, 2]]))\n","import getUnion from './lib/union.js'\nimport getDifference from './lib/difference.js'\nimport getIntersection from './lib/intersection.js'\n\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\nconst getDoc = (m, view) => {\n  if (typeof m === 'string' || isArray(m)) {\n    return view.match(m)\n  }\n  if (!m) {\n    return view.none()\n  }\n  // support pre-parsed reg object\n  return m\n}\n\n// 'harden' our json pointers, again\nconst addIds = function (ptrs, docs) {\n  return ptrs.map(ptr => {\n    let [n, start] = ptr\n    if (docs[n] && docs[n][start]) {\n      ptr[3] = docs[n][start].id\n    }\n    return ptr\n  })\n}\n\nconst methods = {}\n\n// all parts, minus duplicates\nmethods.union = function (m) {\n  m = getDoc(m, this)\n  let ptrs = getUnion(this.fullPointer, m.fullPointer)\n  ptrs = addIds(ptrs, this.document)\n  return this.toView(ptrs)\n}\nmethods.and = methods.union\n\n// only parts they both have\nmethods.intersection = function (m) {\n  m = getDoc(m, this)\n  let ptrs = getIntersection(this.fullPointer, m.fullPointer)\n  ptrs = addIds(ptrs, this.document)\n  return this.toView(ptrs)\n}\n\n// only parts of a that b does not have\nmethods.not = function (m) {\n  m = getDoc(m, this)\n  let ptrs = getDifference(this.fullPointer, m.fullPointer)\n  ptrs = addIds(ptrs, this.document)\n  return this.toView(ptrs)\n}\nmethods.difference = methods.not\n\n// get opposite of a\nmethods.complement = function () {\n  let doc = this.all()\n  let ptrs = getDifference(doc.fullPointer, this.fullPointer)\n  ptrs = addIds(ptrs, this.document)\n  return this.toView(ptrs)\n}\n\n// remove overlaps\nmethods.settle = function () {\n  let ptrs = this.fullPointer\n  ptrs.forEach(ptr => {\n    ptrs = getUnion(ptrs, [ptr])\n  })\n  ptrs = addIds(ptrs, this.document)\n  return this.update(ptrs)\n}\n\n\nconst addAPI = function (View) {\n  // add set/intersection/union\n  Object.assign(View.prototype, methods)\n}\nexport default addAPI\n","import { doesOverlap, indexN } from './_lib.js'\n\n// [a,a,a,a,-,-,]\n// [-,-,b,b,b,-,]\n// [-,-,x,x,-,-,]\nconst intersection = function (a, b) {\n  // find the latest-start\n  let start = a[1] < b[1] ? b[1] : a[1]\n  // find the earliest-end\n  let end = a[2] > b[2] ? b[2] : a[2]\n  // does it form a valid pointer?\n  if (start < end) {\n    return [a[0], start, end]\n  }\n  return null\n}\n\nconst getIntersection = function (a, b) {\n  let byN = indexN(b)\n  let res = []\n  a.forEach(ptr => {\n    let hmm = byN[ptr[0]] || []\n    hmm = hmm.filter(p => doesOverlap(ptr, p))\n    // no sentence-pairs, so no intersection\n    if (hmm.length === 0) {\n      return\n    }\n    hmm.forEach(h => {\n      let overlap = intersection(ptr, h)\n      if (overlap) {\n        res.push(overlap)\n      }\n    })\n  })\n  return res\n}\nexport default getIntersection\n\n// console.log(getIntersection([[0, 1, 3]], [[0, 2, 4]]))\n","import methods from './methods/index.js'\nimport api from './api/index.js'\n\nexport default {\n  methods,\n  api,\n}\n","const api = function (View) {\n\n  /** speedy match a sequence of matches */\n  View.prototype.sweep = function (net, opts = {}) {\n    const { world, docs } = this\n    const { methods } = world\n    let found = methods.one.bulkMatch(docs, net, this.methods, opts)\n\n    // apply any changes\n    if (opts.tagger !== false) {\n      methods.one.bulkTagger(found, docs, this.world)\n    }\n    // fix the pointers\n    // collect all found results into a View\n    found = found.map(o => {\n      let ptr = o.pointer\n      let term = docs[ptr[0]][ptr[1]]\n      let len = ptr[2] - ptr[1]\n      if (term.index) {\n        o.pointer = [\n          term.index[0],\n          term.index[1],\n          ptr[1] + len\n        ]\n      }\n      return o\n    })\n    let ptrs = found.map(o => o.pointer)\n    // cleanup results a bit\n    found = found.map(obj => {\n      obj.view = this.update([obj.pointer])\n      delete obj.regs\n      delete obj.needs\n      delete obj.pointer\n      delete obj._expanded\n      return obj\n    })\n    return {\n      view: this.update(ptrs),\n      found\n    }\n  }\n\n}\nexport default api","// extract the clear needs for an individual match token\nconst getTokenNeeds = function (reg) {\n  // negatives can't be cached\n  if (reg.optional === true || reg.negative === true) {\n    return null\n  }\n  if (reg.tag) {\n    return '#' + reg.tag\n  }\n  if (reg.word) {\n    return reg.word\n  }\n  if (reg.switch) {\n    return `%${reg.switch}%`\n  }\n  return null\n}\n\nconst getNeeds = function (regs) {\n  let needs = []\n  regs.forEach(reg => {\n    needs.push(getTokenNeeds(reg))\n    // support AND (foo && tag)\n    if (reg.operator === 'and' && reg.choices) {\n      reg.choices.forEach(oneSide => {\n        oneSide.forEach(r => {\n          needs.push(getTokenNeeds(r))\n        })\n      })\n    }\n  })\n  return needs.filter(str => str)\n}\n\nconst getWants = function (regs) {\n  let wants = []\n  let count = 0\n  regs.forEach(reg => {\n    if (reg.operator === 'or' && !reg.optional && !reg.negative) {\n      // add fast-or terms\n      if (reg.fastOr) {\n        Array.from(reg.fastOr).forEach(w => {\n          wants.push(w)\n        })\n      }\n      // add slow-or\n      if (reg.choices) {\n        reg.choices.forEach(rs => {\n          rs.forEach(r => {\n            let n = getTokenNeeds(r)\n            if (n) {\n              wants.push(n)\n            }\n          })\n        })\n      }\n      count += 1\n    }\n  })\n  return { wants, count }\n}\n\nconst parse = function (matches, world) {\n  const parseMatch = world.methods.one.parseMatch\n  matches.forEach(obj => {\n    obj.regs = parseMatch(obj.match, {}, world)\n    // wrap these ifNo properties into an array\n    if (typeof obj.ifNo === 'string') {\n      obj.ifNo = [obj.ifNo]\n    }\n    if (obj.notIf) {\n      obj.notIf = parseMatch(obj.notIf, {}, world)\n    }\n    // cache any requirements up-front \n    obj.needs = getNeeds(obj.regs)\n    let { wants, count } = getWants(obj.regs)\n    obj.wants = wants\n    obj.minWant = count\n    // get rid of tiny sentences\n    obj.minWords = obj.regs.filter(o => !o.optional).length\n  })\n  return matches\n}\n\nexport default parse\n","import buildNet from './buildNet/index.js'\nimport bulkMatch from './sweep/index.js'\nimport bulkTagger from './tagger/index.js'\n\nexport default {\n  buildNet,\n  bulkMatch,\n  bulkTagger\n}","import parse from './01-parse.js'\n\n// do some indexing on the list of matches\nconst buildNet = function (matches, world) {\n  // turn match-syntax into json\n  matches = parse(matches, world)\n\n  // collect by wants and needs\n  let hooks = {}\n  matches.forEach(obj => {\n    // add needs\n    obj.needs.forEach(str => {\n      hooks[str] = hooks[str] || []\n      hooks[str].push(obj)\n    })\n    // add wants\n    obj.wants.forEach(str => {\n      hooks[str] = hooks[str] || []\n      hooks[str].push(obj)\n    })\n  })\n  // remove duplicates\n  Object.keys(hooks).forEach(k => {\n    let already = {}\n    hooks[k] = hooks[k].filter(obj => {\n      if (already[obj.match]) {\n        return false\n      }\n      already[obj.match] = true\n      return true\n    })\n  })\n\n  // keep all un-cacheable matches (those with no needs) \n  let always = matches.filter(o => o.needs.length === 0 && o.wants.length === 0)\n  return {\n    hooks,\n    always\n  }\n}\n\nexport default buildNet\n","import getHooks from './01-getHooks.js'\nimport trimDown from './02-trim-down.js'\n// import getWants from './03-get-wants.js'\nimport runMatch from './04-runMatch.js'\n\n\nconst tooSmall = function (maybeList, document) {\n  return maybeList.map((arr, i) => {\n    let termCount = document[i].length\n    arr = arr.filter(o => {\n      return termCount >= o.minWords\n    })\n    return arr\n  })\n}\n\nconst sweep = function (document, net, methods, opts = {}) {\n  // find suitable matches to attempt, on each sentence\n  let docCache = methods.one.cacheDoc(document)\n  // collect possible matches for this document\n  let maybeList = getHooks(docCache, net.hooks)\n  // ensure all defined needs are met for each match\n  maybeList = trimDown(maybeList, docCache, document)\n  // add unchacheable matches to each sentence's todo-list\n  if (net.always.length > 0) {\n    maybeList = maybeList.map(arr => arr.concat(net.always))\n  }\n  // if we don't have enough words\n  maybeList = tooSmall(maybeList, document)\n\n  // now actually run the matches\n  let results = runMatch(maybeList, document, docCache, methods, opts)\n  // console.dir(results, { depth: 5 })\n  return results\n}\nexport default sweep\n","// for each cached-sentence, find a list of possible matches\nconst getHooks = function (docCaches, hooks) {\n  return docCaches.map((set, i) => {\n    let maybe = []\n    Object.keys(hooks).forEach(k => {\n      if (docCaches[i].has(k)) {\n        maybe = maybe.concat(hooks[k])\n      }\n    })\n    // remove duplicates\n    let already = {}\n    maybe = maybe.filter(m => {\n      if (already[m.match]) {\n        return false\n      }\n      already[m.match] = true\n      return true\n    })\n    return maybe\n  })\n}\n\nexport default getHooks\n","// filter-down list of maybe-matches\nconst localTrim = function (maybeList, docCache) {\n  return maybeList.map((list, n) => {\n    let haves = docCache[n]\n    // ensure all stated-needs of the match are met\n    list = list.filter(obj => {\n      return obj.needs.every(need => haves.has(need))\n    })\n    // ensure nothing matches in our 'ifNo' property\n    list = list.filter(obj => {\n      if (obj.ifNo !== undefined && obj.ifNo.some(no => haves.has(no)) === true) {\n        return false\n      }\n      return true\n    })\n    // ensure atleast one(?) of the wants is found\n    list = list.filter(obj => {\n      if (obj.wants.length === 0) {\n        return true\n      }\n      // ensure there's one cache-hit\n      let found = obj.wants.filter(str => haves.has(str)).length\n      return found >= obj.minWant\n    })\n    return list\n  })\n}\nexport default localTrim\n","// finally,\n// actually run these match-statements on the terms\nconst runMatch = function (maybeList, document, docCache, methods, opts) {\n  let results = []\n  for (let n = 0; n < maybeList.length; n += 1) {\n    for (let i = 0; i < maybeList[n].length; i += 1) {\n      let m = maybeList[n][i]\n      // ok, actually do the work.\n      let res = methods.one.match([document[n]], m)\n      // found something.\n      if (res.ptrs.length > 0) {\n        res.ptrs.forEach(ptr => {\n          ptr[0] = n // fix the sentence pointer\n          // check ifNo\n          // if (m.ifNo !== undefined) {\n          //   let terms = document[n].slice(ptr[1], ptr[2])\n          //   for (let k = 0; k < m.ifNo.length; k += 1) {\n          //     const no = m.ifNo[k]\n          //     // quick-check cache\n          //     if (docCache[n].has(no)) {\n          //       if (no.startsWith('#')) {\n          //         let tag = no.replace(/^#/, '')\n          //         if (terms.find(t => t.tags.has(tag))) {\n          //           console.log('+' + tag)\n          //           return\n          //         }\n          //       } else if (terms.find(t => t.normal === no || t.tags.has(no))) {\n          //         console.log('+' + no)\n          //         return\n          //       }\n          //     }\n          //   }\n          // }\n          let todo = Object.assign({}, m, { pointer: ptr })\n          if (m.unTag !== undefined) {\n            todo.unTag = m.unTag\n          }\n          results.push(todo)\n        })\n        //ok cool, can we stop early?\n        if (opts.matchOne === true) {\n          return [results[0]]\n        }\n      }\n    }\n  }\n  return results\n}\nexport default runMatch\n","import canBe from './canBe.js'\n\nconst tagger = function (list, document, world) {\n  const { model, methods } = world\n  const { getDoc, setTag, unTag } = methods.one\n  const looksPlural = methods.two.looksPlural\n  if (list.length === 0) {\n    return list\n  }\n  // some logging for debugging\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env\n  if (env.DEBUG_TAGS) {\n    console.log(`\\n\\n  \\x1b[32m→ ${list.length} post-tagger:\\x1b[0m`) //eslint-disable-line\n  }\n  return list.map(todo => {\n    if (!todo.tag && !todo.chunk && !todo.unTag) {\n      return\n    }\n    let reason = todo.reason || todo.match\n    let terms = getDoc([todo.pointer], document)[0]\n    // handle 'safe' tag\n    if (todo.safe === true) {\n      // check for conflicting tags\n      if (canBe(terms, todo.tag, model) === false) {\n        return\n      }\n      // dont tag half of a hyphenated word\n      if (terms[terms.length - 1].post === '-') {\n        return\n      }\n    }\n    if (todo.tag !== undefined) {\n      setTag(terms, todo.tag, world, todo.safe, `[post] '${reason}'`)\n      // quick and dirty plural tagger\n      if (todo.tag === 'Noun') {\n        let term = terms[terms.length - 1]\n        if (looksPlural(term.text)) {\n          setTag([term], 'Plural', world, todo.safe, 'quick-plural')\n        } else {\n          setTag([term], 'Singular', world, todo.safe, 'quick-singular')\n        }\n      }\n    }\n    if (todo.unTag !== undefined) {\n      unTag(terms, todo.unTag, world, todo.safe, reason)\n    }\n    // allow setting chunks, too\n    if (todo.chunk) {\n      terms.forEach(t => t.chunk = todo.chunk)\n    }\n  })\n}\nexport default tagger\n","// is this tag consistent with the tags they already have?\nconst canBe = function (terms, tag, model) {\n  let tagSet = model.one.tagSet\n  if (!tagSet.hasOwnProperty(tag)) {\n    return true\n  }\n  let not = tagSet[tag].not || []\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    for (let k = 0; k < not.length; k += 1) {\n      if (term.tags.has(not[k]) === true) {\n        return false //found a tag conflict - bail!\n      }\n    }\n  }\n  return true\n}\nexport default canBe\n","import lib from './lib.js'\nimport api from './api.js'\nimport methods from './methods/index.js'\n\nexport default {\n  lib,\n  api,\n  methods: {\n    one: methods,\n  }\n}","export default {\n  // compile a list of matches into a match-net\n  buildNet: function (matches) {\n    const methods = this.methods()\n    let net = methods.one.buildNet(matches, this.world())\n    net.isNet = true\n    return net\n  }\n}","const isMulti = / /\n\nconst addChunk = function (term, tag) {\n  if (tag === 'Noun') {\n    term.chunk = tag\n  }\n  if (tag === 'Verb') {\n    term.chunk = tag\n  }\n}\n\nconst tagTerm = function (term, tag, tagSet, isSafe) {\n  // does it already have this tag?\n  if (term.tags.has(tag) === true) {\n    return null\n  }\n  // allow this shorthand in multiple-tag strings\n  if (tag === '.') {\n    return null\n  }\n  // for known tags, do logical dependencies first\n  let known = tagSet[tag]\n  if (known) {\n    // first, we remove any conflicting tags\n    if (known.not && known.not.length > 0) {\n      for (let o = 0; o < known.not.length; o += 1) {\n        // if we're in tagSafe, skip this term.\n        if (isSafe === true && term.tags.has(known.not[o])) {\n          return null\n        }\n        term.tags.delete(known.not[o])\n      }\n    }\n    // add parent tags\n    if (known.parents && known.parents.length > 0) {\n      for (let o = 0; o < known.parents.length; o += 1) {\n        term.tags.add(known.parents[o])\n        addChunk(term, known.parents[o])\n      }\n    }\n  }\n  // finally, add our tag\n  term.tags.add(tag)\n  // now it's dirty?\n  term.dirty = true\n  // add a chunk too, if it's easy\n  addChunk(term, tag)\n  return true\n}\n\n// support '#Noun . #Adjective' syntax\nconst multiTag = function (terms, tagString, tagSet, isSafe) {\n  let tags = tagString.split(isMulti)\n  terms.forEach((term, i) => {\n    let tag = tags[i]\n    if (tag) {\n      tag = tag.replace(/^#/, '')\n      tagTerm(term, tag, tagSet, isSafe)\n    }\n  })\n}\n\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\n// verbose-mode tagger debuging\nconst log = (terms, tag, reason = '') => {\n  const yellow = str => '\\x1b[33m\\x1b[3m' + str + '\\x1b[0m'\n  const i = str => '\\x1b[3m' + str + '\\x1b[0m'\n  let word = terms.map(t => {\n    return t.text || '[' + t.implicit + ']'\n  }).join(' ')\n  if (typeof tag !== 'string' && tag.length > 2) {\n    tag = tag.slice(0, 2).join(', #') + ' +' //truncate the list of tags\n  }\n  tag = typeof tag !== 'string' ? tag.join(', #') : tag\n  console.log(` ${yellow(word).padEnd(24)} \\x1b[32m→\\x1b[0m #${tag.padEnd(22)}  ${i(reason)}`) // eslint-disable-line\n}\n\n// add a tag to all these terms\nconst setTag = function (terms, tag, world = {}, isSafe, reason) {\n  const tagSet = world.model.one.tagSet || {}\n  if (!tag) {\n    return\n  }\n  // some logging for debugging\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env\n  if (env && env.DEBUG_TAGS) {\n    log(terms, tag, reason)\n  }\n  if (isArray(tag) === true) {\n    tag.forEach(tg => setTag(terms, tg, world, isSafe))\n    return\n  }\n  if (typeof tag !== 'string') {\n    console.warn(`compromise: Invalid tag '${tag}'`)// eslint-disable-line\n    return\n  }\n  tag = tag.trim()\n  // support '#Noun . #Adjective' syntax\n  if (isMulti.test(tag)) {\n    multiTag(terms, tag, tagSet, isSafe)\n    return\n  }\n  tag = tag.replace(/^#/, '')\n  // let set = false\n  for (let i = 0; i < terms.length; i += 1) {\n    tagTerm(terms[i], tag, tagSet, isSafe)\n  }\n}\nexport default setTag\n","const validate = function (node) {\n  node.children = node.children || []\n  node._cache = node._cache || {}\n  node.props = node.props || {}\n  node._cache.parents = node._cache.parents || []\n  node._cache.children = node._cache.children || []\n  return node\n}\nexport default validate\n","import validate from './_validate.js'\n\nconst isComment = /^ *(#|\\/\\/)/\n\nconst indentLevel = str => {\n  const reg = /^( {2}|\\t)/\n  let indent = 0\n  while (reg.test(str)) {\n    str = str.replace(reg, '')\n    indent += 1\n  }\n  return indent\n}\n\nconst parseOne = function (str) {\n  str = str.trim()\n  if (!str) {\n    return null\n  }\n  if (/^\\[/.test(str) && /\\]$/.test(str)) {\n    str = str.replace(/^\\[/, '')\n    str = str.replace(/\\]$/, '')\n    let list = str.split(/,/)\n    list = list.map(s => s.trim()).filter(s => s)\n    list = list.map(label => {\n      return validate({ id: label })\n    })\n    return list\n  }\n  return [validate({ id: str })]\n}\n\n// a -> a1 -> a2\nconst parseLine = function (str) {\n  let split = str.trim().split(/->/)\n  let list = []\n  split.forEach(s => {\n    list = list.concat(parseOne(s))\n  })\n  list = list.filter(s => s)\n  let node = list[0]\n  for (let i = 1; i < list.length; i += 1) {\n    node.children.push(list[i])\n    node = list[i]\n  }\n  return list[0]\n}\n\n// find the parent\nconst rollBackWards = function (list, i) {\n  let have = list[i].indent\n  for (; i >= 0; i -= 1) {\n    if (list[i].indent < have) {\n      return list[i]\n    }\n  }\n  return list[0]\n}\n\nconst byIndent = function (list) {\n  // add them to nth child\n  let root = { children: [] }\n  list.forEach((o, i) => {\n    if (o.indent === 0) {\n      // add it to the root\n      root.children = root.children.concat(o.node)\n    } else if (list[i - 1]) {\n      let parent = rollBackWards(list, i)\n      // add it to the deepest node last line\n      parent.node.children.push(o.node)\n    }\n  })\n  return root\n}\n\nconst fromText = function (txt) {\n  let lines = txt.split(/\\r?\\n/)\n  let list = []\n  lines.forEach(line => {\n    if (!line.trim() || isComment.test(line)) {\n      return\n    }\n    let indent = indentLevel(line)\n    list.push({ indent: indent, node: parseLine(line) })\n  })\n  let root = byIndent(list)\n  root = validate(root)\n  return root\n}\nexport default fromText\n","// [a, b, a1, b1]\n// const getBreadth = root => {\n//   let list = []\n//   let queue = [root]\n//   while (queue.length > 0) {\n//     // get first\n//     let node = queue.shift()\n//     // add to list\n//     list.push(node)\n//     // add kids to queue\n//     node.children.forEach(n => {\n//       // n._cache.parents = node._cache.parents + 1\n//       queue.push(n)\n//     })\n//   }\n//   return list\n// }\n\n// [a, a1, b, b1]\nconst byDepth = (root, fn) => {\n  let list = []\n  let queue = [root]\n  while (queue.length > 0) {\n    // get first\n    let node = queue.pop()\n    // add to list\n    list.push(node)\n    // add kids to queue\n    if (node.children) {\n      node.children.forEach(child => {\n        if (fn) {\n          fn(node, child)\n        }\n        queue.push(child)\n      })\n    }\n  }\n  return list\n}\n\nexport default byDepth\n","export const isObject = item => item && typeof item === 'object' && !Array.isArray(item)\n\nexport const isArray = arr => Object.prototype.toString.call(arr) === '[object Array]'\n\nexport const isSet = item => item instanceof Set\n\nconst parsePointer = str => {\n  if (typeof str !== 'string') {\n    return str\n  }\n  str = str.replace(/^\\//, '')\n  return str.split(/\\//)\n}\n\nexport const getByPointer = (node, str) => {\n  str = str || ''\n  let ptr = parsePointer(str)\n  for (let i = 0; i < ptr.length; i += 1) {\n    let found = node.children.find(obj => obj.id === ptr[i])\n    if (!found) {\n      return null\n    }\n    node = found\n  }\n  return node\n}\n\nexport const normalize = str => {\n  str = str || ''\n  return str.trim()\n}\n","import fromText from './from-text.js'\nimport fromArray from './from-array.js'\nimport byDepth from '../crawl/crawl.js'\nimport validate from './_validate.js'\nimport { isArray } from '../lib/_lib.js'\n\nconst fromNested = json => {\n  let rows = byDepth(json)\n  rows.forEach(validate)\n  return json\n}\n\n// 3 fmts we support\nconst parse = function (input = []) {\n  if (typeof input === 'string') {\n    return fromText(input)\n  }\n  if (isArray(input)) {\n    return fromArray(input)\n  }\n  return fromNested(input)\n}\nexport default parse\n","import validate from './_validate.js'\n\n// turn parent-index rows into nested json\nconst fromArray = function (rows) {\n  let index = {}\n  rows.forEach(node => {\n    index[node.id] = node\n  })\n  let root = validate({})\n  rows.forEach(node => {\n    node = validate(node)\n    if (node.parent) {\n      if (index.hasOwnProperty(node.parent)) {\n        let parent = index[node.parent]\n        delete node.parent //no-longer needed\n        parent.children.push(node)\n      } else {\n        console.warn(`[Grad] - missing node '${node.parent}'`) // eslint-disable-line\n      }\n      return\n    }\n    // no parent, add it to root\n    root.children.push(node)\n  })\n  return root\n}\nexport default fromArray\n","// https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\n\nconst reset = '\\x1b[0m'\n//cheaper than requiring chalk\nconst cli = {\n  // green: str => '\\x1b[32m' + str + reset,\n  red: str => '\\x1b[31m' + str + reset,\n  // blue: str => '\\x1b[34m' + str + reset,\n  // magenta: str => '\\x1b[35m' + str + reset,\n  // cyan: str => '\\x1b[36m' + str + reset,\n  // yellow: str => '\\x1b[33m' + str + reset,\n  // black: str => '\\x1b[30m' + str + reset,\n  dim: str => '\\x1b[2m' + str + reset,\n}\nexport default cli\n","import byDepth from '../crawl/crawl.js'\nimport c from '../lib/color.js'\nconst indent = '    '\n\nconst toText = function (json, color) {\n  let arrow = '-> '\n  if (color) {\n    arrow = c.dim('→ ')\n  }\n  let txt = ''\n  let rows = byDepth(json)\n  rows.forEach((node, i) => {\n    let label = node.id || ''\n    if (color) {\n      label = c.red(label)\n    }\n    if (i === 0 && !node.id) {\n      return //skip empty root\n    }\n    let depth = node._cache.parents.length\n    txt += indent.repeat(depth) + arrow + label + '\\n'\n  })\n  return txt\n}\nexport default toText\n","import byDepth from '../crawl/crawl.js'\n\nconst toArray = function (json) {\n  let nodes = byDepth(json)\n  nodes.forEach(node => {\n    node = Object.assign({}, node)\n    delete node.children //no-longer needed\n  })\n  // should we show the root?\n  let root = nodes[0]\n  if (root && !root.id && Object.keys(root.props).length === 0) {\n    nodes.shift()\n  }\n  return nodes\n}\nexport default toArray\n","import toText from './toText.js'\nimport toArray from './toArray.js'\n\nconst fmts = {\n  text: toText,\n  txt: toText,\n  array: toArray,\n  flat: toArray,\n}\n\nconst out = function (root, label) {\n  // return internal json\n  if (label === 'nested' || label === 'json') {\n    return root\n  }\n  if (label === 'debug') {\n    console.log(toText(root, true)) // eslint-disable-line\n    return null\n  }\n  if (fmts.hasOwnProperty(label)) {\n    return fmts[label](root)\n  }\n  return root\n}\nexport default out\n","import byDepth from './crawl.js'\n\n// count children\nconst cacheDown = root => {\n  byDepth(root, (parent, child) => {\n    if (parent.id) {\n      parent._cache.parents = parent._cache.parents || []\n      child._cache.parents = parent._cache.parents.concat([parent.id])\n    }\n  })\n}\n\n// count parents\nconst cacheUp = root => {\n  let nodes = byDepth(root, (parent, child) => {\n    if (parent.id) {\n      parent._cache.parents = parent._cache.parents || []\n      parent._cache.children = parent._cache.children || []\n      child._cache.parents = parent._cache.parents.concat([parent.id])\n    }\n  })\n  let byId = {}\n  nodes.forEach(node => {\n    if (node.id) {\n      byId[node.id] = node\n    }\n  })\n  nodes.forEach(node => {\n    node._cache.parents.forEach(id => {\n      if (byId.hasOwnProperty(id)) {\n        byId[id]._cache.children.push(node.id)\n      }\n    })\n  })\n  root._cache.children = Object.keys(byId)\n}\nexport { cacheDown, cacheUp }\n","import { isSet, isObject, isArray } from '../lib/_lib.js'\nimport byDepth from './crawl.js'\n\n// recursive merge of objects\nconst mergeDeep = (props, parent) => {\n  Object.keys(parent).forEach(k => {\n    // merge sets\n    if (isSet(parent[k])) {\n      let set = props[k] || new Set()\n      props[k] = new Set([...set, ...parent[k]])\n      return\n    }\n    // merge an object\n    if (isObject(parent[k])) {\n      let obj = props[k] || {}\n      props[k] = Object.assign({}, parent[k], obj)\n      return\n    }\n    //  concat an array\n    if (isArray(parent[k])) {\n      props[k] = parent[k].concat(props[k] || [])\n      return\n    }\n\n    // just overwrite it\n    if (props[k] === undefined) {\n      props[k] = parent[k]\n    }\n  })\n  return props\n}\n\nconst fillDown = root => {\n  byDepth(root, (parent, child) => {\n    child.props = mergeDeep(child.props, parent.props)\n  })\n}\n\nexport default fillDown\n\n// console.log(mergeDeep({}, { cool: false }))\n","import out from './out/index.js'\nimport { normalize, getByPointer } from './lib/_lib.js'\nimport byDepth from './crawl/crawl.js'\nimport { isArray } from './lib/_lib.js'\nimport { cacheDown, cacheUp } from './crawl/cache.js'\nimport fillDown from './crawl/fillDown.js'\nconst hasSlash = /\\//\nimport validate from './input/_validate.js'\n\nclass View {\n  constructor(json = {}) {\n    Object.defineProperty(this, 'json', {\n      enumerable: false,\n      value: json,\n      writable: true,\n    })\n  }\n  get children() {\n    return this.json.children\n  }\n  get id() {\n    return this.json.id\n  }\n  get found() {\n    return this.json.id || this.json.children.length > 0\n  }\n  props(input = {}) {\n    let props = this.json.props || {}\n    if (typeof input === 'string') {\n      props[input] = true\n    }\n    this.json.props = Object.assign(props, input)\n    return this\n  }\n  get(id) {\n    id = normalize(id)\n    if (!hasSlash.test(id)) {\n      // lookup by label name\n      let found = this.json.children.find(obj => obj.id === id)\n      return new View(found)\n    }\n    let obj = getByPointer(this.json, id) || validate({})\n    return new View(obj)\n  }\n  add(id, props = {}) {\n    if (isArray(id)) {\n      id.forEach(str => this.add(normalize(str), props))\n      return this\n    }\n    id = normalize(id)\n    let node = validate({ id, props })\n    this.json.children.push(node)\n    return new View(node)\n  }\n  remove(id) {\n    id = normalize(id)\n    this.json.children = this.json.children.filter(obj => obj.id !== id)\n    return this\n  }\n  nodes() {\n    let nodes = byDepth(this.json)\n    return nodes.map(node => {\n      node = Object.assign({}, node)\n      delete node.children\n      return node\n    })\n  }\n  cache() {\n    cacheUp(this.json)\n    return this\n  }\n  list() {\n    return byDepth(this.json)\n  }\n  fillDown() {\n    fillDown(this.json)\n    return this\n  }\n  depth() {\n    cacheDown(this.json)\n    let nodes = byDepth(this.json)\n    let max = nodes.length > 1 ? 1 : 0\n    // count # of parents\n    nodes.forEach(node => {\n      if (node._cache.parents.length === 0) {\n        return\n      }\n      let count = node._cache.parents.length + 1\n      if (count > max) {\n        max = count\n      }\n    })\n    return max\n  }\n  out(fmt) {\n    cacheDown(this.json)\n    return out(this.json, fmt)\n  }\n  debug() {\n    cacheDown(this.json)\n    out(this.json, 'debug')\n    return this\n  }\n}\n\nexport default View\n","import parse from './input/index.js'\nimport View from './View.js'\n\nconst grad = function (input) {\n  let data = parse(input)\n  return new View(data)\n}\n\ngrad.prototype.plugin = function (fn) {\n  fn(this)\n}\n\nexport default grad\n","// i just made these up\nconst colors = {\n  Noun: 'blue',\n  Verb: 'green',\n  Negative: 'green',\n  Date: 'red',\n  Value: 'red',\n  Adjective: 'magenta',\n  Preposition: 'cyan',\n  Conjunction: 'cyan',\n  Determiner: 'cyan',\n  Adverb: 'cyan',\n}\n\nexport default colors","import colors from './_colors.js'\n\nconst getColor = function (node) {\n  if (colors.hasOwnProperty(node.id)) {\n    return colors[node.id]\n  }\n  if (colors.hasOwnProperty(node.is)) {\n    return colors[node.is]\n  }\n  let found = node._cache.parents.find(c => colors[c])\n  return colors[found]\n}\n\n// convert tags to our final format\nconst fmt = function (nodes) {\n  const res = {}\n  nodes.forEach(node => {\n    let { not, also, is, novel } = node.props\n    let parents = node._cache.parents\n    if (also) {\n      parents = parents.concat(also)\n    }\n    res[node.id] = {\n      is,\n      not,\n      novel,\n      also,\n      parents,\n      children: node._cache.children,\n      color: getColor(node)\n    }\n  })\n  // lastly, add all children of all nots\n  Object.keys(res).forEach(k => {\n    let nots = new Set(res[k].not)\n    res[k].not.forEach(not => {\n      if (res[not]) {\n        res[not].children.forEach(tag => nots.add(tag))\n      }\n    })\n    res[k].not = Array.from(nots)\n  })\n  return res\n}\n\nexport default fmt","\nconst toArr = function (input) {\n  if (!input) {\n    return []\n  }\n  if (typeof input === 'string') {\n    return [input]\n  }\n  return input\n}\n\nconst addImplied = function (tags, already) {\n  Object.keys(tags).forEach(k => {\n    // support deprecated fmts\n    if (tags[k].isA) {\n      tags[k].is = tags[k].isA\n    }\n    if (tags[k].notA) {\n      tags[k].not = tags[k].notA\n    }\n    // add any implicit 'is' tags\n    if (tags[k].is && typeof tags[k].is === 'string') {\n      if (!already.hasOwnProperty(tags[k].is) && !tags.hasOwnProperty(tags[k].is)) {\n        tags[tags[k].is] = {}\n      }\n    }\n    // add any implicit 'not' tags\n    if (tags[k].not && typeof tags[k].not === 'string' && !tags.hasOwnProperty(tags[k].not)) {\n      if (!already.hasOwnProperty(tags[k].not) && !tags.hasOwnProperty(tags[k].not)) {\n        tags[tags[k].not] = {}\n      }\n    }\n  })\n  return tags\n}\n\n\nconst validate = function (tags, already) {\n\n  tags = addImplied(tags, already)\n\n  // property validation\n  Object.keys(tags).forEach(k => {\n    tags[k].children = toArr(tags[k].children)\n    tags[k].not = toArr(tags[k].not)\n  })\n  // not links are bi-directional\n  // add any incoming not tags\n  Object.keys(tags).forEach(k => {\n    let nots = tags[k].not || []\n    nots.forEach(no => {\n      if (tags[no] && tags[no].not) {\n        tags[no].not.push(k)\n      }\n    })\n  })\n  return tags\n}\nexport default validate","import setTag from './setTag.js'\nimport unTag from './unTag.js'\nimport addTags from './addTags/index.js'\n\nexport default {\n  one: {\n    setTag,\n    unTag,\n    addTags\n  },\n}\n","// remove this tag, and its children, from these terms\nconst unTag = function (terms, tag, tagSet) {\n  tag = tag.trim().replace(/^#/, '')\n  for (let i = 0; i < terms.length; i += 1) {\n    let term = terms[i]\n    // support clearing all tags, with '*'\n    if (tag === '*') {\n      term.tags.clear()\n      continue\n    }\n    // for known tags, do logical dependencies first\n    let known = tagSet[tag]\n    // removing #Verb should also remove #PastTense\n    if (known && known.children.length > 0) {\n      for (let o = 0; o < known.children.length; o += 1) {\n        term.tags.delete(known.children[o])\n      }\n    }\n    term.tags.delete(tag)\n  }\n}\nexport default unTag\n","import grad from 'grad-school'\nimport fmt from './02-fmt.js'\nimport validate from './01-validate.js'\n\n// 'fill-down' parent logic inference\nconst compute = function (allTags) {\n  // setup graph-lib format\n  const flatList = Object.keys(allTags).map(k => {\n    let o = allTags[k]\n    const props = { not: new Set(o.not), also: o.also, is: o.is, novel: o.novel }\n    return { id: k, parent: o.is, props, children: [] }\n  })\n  const graph = grad(flatList).cache().fillDown()\n  return graph.out('array')\n}\n\nconst fromUser = function (tags) {\n  Object.keys(tags).forEach(k => {\n    tags[k] = Object.assign({}, tags[k])\n    tags[k].novel = true\n  })\n  return tags\n}\n\nconst addTags = function (tags, already) {\n  // are these tags internal ones, or user-generated?\n  if (Object.keys(already).length > 0) {\n    tags = fromUser(tags)\n  }\n  tags = validate(tags, already)\n\n  let allTags = Object.assign({}, already, tags)\n  // do some basic setting-up\n  // 'fill-down' parent logic\n  const nodes = compute(allTags)\n  // convert it to our final format\n  const res = fmt(nodes)\n  return res\n}\nexport default addTags\n","/* eslint no-console: 0 */\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\nconst fns = {\n  /** add a given tag, to all these terms */\n  tag: function (input, reason = '', isSafe) {\n    if (!this.found || !input) {\n      return this\n    }\n    let terms = this.termList()\n    if (terms.length === 0) {\n      return this\n    }\n    const { methods, verbose, world } = this\n    // logger\n    if (verbose === true) {\n      console.log(' +  ', input, reason || '')\n    }\n    if (isArray(input)) {\n      input.forEach(tag => methods.one.setTag(terms, tag, world, isSafe, reason))\n    } else {\n      methods.one.setTag(terms, input, world, isSafe, reason)\n    }\n    // uncache\n    this.uncache()\n    return this\n  },\n\n  /** add a given tag, only if it is consistent */\n  tagSafe: function (input, reason = '') {\n    return this.tag(input, reason, true)\n  },\n\n  /** remove a given tag from all these terms */\n  unTag: function (input, reason) {\n    if (!this.found || !input) {\n      return this\n    }\n    let terms = this.termList()\n    if (terms.length === 0) {\n      return this\n    }\n    const { methods, verbose, model } = this\n    // logger\n    if (verbose === true) {\n      console.log(' -  ', input, reason || '')\n    }\n    let tagSet = model.one.tagSet\n    if (isArray(input)) {\n      input.forEach(tag => methods.one.unTag(terms, tag, tagSet))\n    } else {\n      methods.one.unTag(terms, input, tagSet)\n    }\n    // uncache\n    this.uncache()\n    return this\n  },\n\n  /** return only the terms that can be this tag  */\n  canBe: function (tag) {\n    tag = tag.replace(/^#/, '')\n    let tagSet = this.model.one.tagSet\n    // everything can be an unknown tag\n    if (!tagSet.hasOwnProperty(tag)) {\n      return this\n    }\n    let not = tagSet[tag].not || []\n    let nope = []\n    this.document.forEach((terms, n) => {\n      terms.forEach((term, i) => {\n        let found = not.find(no => term.tags.has(no))\n        if (found) {\n          nope.push([n, i, i + 1])\n        }\n      })\n    })\n    let noDoc = this.update(nope)\n    return this.difference(noDoc)\n  },\n}\nexport default fns\n","// wire-up more pos-tags to our model\nconst addTags = function (tags) {\n  const { model, methods } = this.world()\n  const tagSet = model.one.tagSet\n  const fn = methods.one.addTags\n  let res = fn(tags, tagSet)\n  model.one.tagSet = res\n  return this\n}\n\nexport default { addTags }","const boringTags = new Set(['Auxiliary', 'Possessive'])\n\nconst sortByKids = function (tags, tagSet) {\n  tags = tags.sort((a, b) => {\n    // (unknown tags are interesting)\n    if (boringTags.has(a) || !tagSet.hasOwnProperty(b)) {\n      return 1\n    }\n    if (boringTags.has(b) || !tagSet.hasOwnProperty(a)) {\n      return -1\n    }\n    let kids = tagSet[a].children || []\n    let aKids = kids.length\n    kids = tagSet[b].children || []\n    let bKids = kids.length\n    return aKids - bKids\n  })\n  return tags\n}\n\nconst tagRank = function (view) {\n  const { document, world } = view\n  const tagSet = world.model.one.tagSet\n  document.forEach(terms => {\n    terms.forEach(term => {\n      let tags = Array.from(term.tags)\n      term.tagRank = sortByKids(tags, tagSet)\n    })\n  })\n}\nexport default tagRank\n","import methods from './methods/index.js'\nimport api from './api/index.js'\nimport lib from './lib.js'\nimport tagRank from './compute/tagRank.js'\n\n\nexport default {\n  model: {\n    one: { tagSet: {} }\n  },\n  compute: {\n    tagRank\n  },\n  methods,\n  api,\n  lib\n}\n","import tag from './tag.js'\n\nconst tagAPI = function (View) {\n  Object.assign(View.prototype, tag)\n}\nexport default tagAPI\n","// split by periods, question marks, unicode ⁇, etc\nconst initSplit = /([.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049]+\\s)/g\n// merge these back into prev sentence\nconst splitsOnly = /^[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049]+\\s$/\nconst newLine = /((?:\\r?\\n|\\r)+)/ // Match different new-line formats\n\n// Start with a regex:\nconst basicSplit = function (text) {\n  let all = []\n  //first, split by newline\n  let lines = text.split(newLine)\n  for (let i = 0; i < lines.length; i++) {\n    //split by period, question-mark, and exclamation-mark\n    let arr = lines[i].split(initSplit)\n    for (let o = 0; o < arr.length; o++) {\n      // merge 'foo' + '.'\n      if (arr[o + 1] && splitsOnly.test(arr[o + 1]) === true) {\n        arr[o] += arr[o + 1]\n        arr[o + 1] = ''\n      }\n      if (arr[o] !== '') {\n        all.push(arr[o])\n      }\n    }\n  }\n  return all\n}\nexport default basicSplit\n","const hasLetter = /[a-z0-9\\u00C0-\\u00FF\\u00a9\\u00ae\\u2000-\\u3300\\ud000-\\udfff]/i\nconst hasSomething = /\\S/\n\nconst notEmpty = function (splits) {\n  let chunks = []\n  for (let i = 0; i < splits.length; i++) {\n    let s = splits[i]\n    if (s === undefined || s === '') {\n      continue\n    }\n    //this is meaningful whitespace\n    if (hasSomething.test(s) === false || hasLetter.test(s) === false) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s\n        continue\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1]\n        continue\n      }\n    }\n    //else, only whitespace, no terms, no sentence\n    chunks.push(s)\n  }\n  return chunks\n}\nexport default notEmpty","// merge embedded quotes into 1 sentence\n// like - 'he said \"no!\" and left.' \nconst MAX_QUOTE = 280// ¯\\_(ツ)_/¯\n\n// don't support single-quotes for multi-sentences\nconst pairs = {\n  '\\u0022': '\\u0022', // 'StraightDoubleQuotes'\n  '\\uFF02': '\\uFF02', // 'StraightDoubleQuotesWide'\n  // '\\u0027': '\\u0027', // 'StraightSingleQuotes'\n  '\\u201C': '\\u201D', // 'CommaDoubleQuotes'\n  // '\\u2018': '\\u2019', // 'CommaSingleQuotes'\n  '\\u201F': '\\u201D', // 'CurlyDoubleQuotesReversed'\n  // '\\u201B': '\\u2019', // 'CurlySingleQuotesReversed'\n  '\\u201E': '\\u201D', // 'LowCurlyDoubleQuotes'\n  '\\u2E42': '\\u201D', // 'LowCurlyDoubleQuotesReversed'\n  '\\u201A': '\\u2019', // 'LowCurlySingleQuotes'\n  '\\u00AB': '\\u00BB', // 'AngleDoubleQuotes'\n  '\\u2039': '\\u203A', // 'AngleSingleQuotes'\n  '\\u2035': '\\u2032', // 'PrimeSingleQuotes'\n  '\\u2036': '\\u2033', // 'PrimeDoubleQuotes'\n  '\\u2037': '\\u2034', // 'PrimeTripleQuotes'\n  '\\u301D': '\\u301E', // 'PrimeDoubleQuotes'\n  // '\\u0060': '\\u00B4', // 'PrimeSingleQuotes'\n  '\\u301F': '\\u301E', // 'LowPrimeDoubleQuotesReversed'\n}\nconst openQuote = RegExp('(' + Object.keys(pairs).join('|') + ')', 'g')\nconst closeQuote = RegExp('(' + Object.values(pairs).join('|') + ')', 'g')\n\nconst closesQuote = function (str) {\n  if (!str) {\n    return false\n  }\n  let m = str.match(closeQuote)\n  if (m !== null && m.length === 1) {\n    return true\n  }\n  return false\n}\n\n// allow micro-sentences when inside a quotation, like:\n// the doc said \"no sir. i will not beg\" and walked away.\nconst quoteMerge = function (splits) {\n  let arr = []\n  for (let i = 0; i < splits.length; i += 1) {\n    let split = splits[i]\n    // do we have an open-quote and not a closed one?\n    let m = split.match(openQuote)\n    if (m !== null && m.length === 1) {\n\n      // look at the next sentence for a closing quote,\n      if (closesQuote(splits[i + 1]) && splits[i + 1].length < MAX_QUOTE) {\n        splits[i] += splits[i + 1]// merge them\n        arr.push(splits[i])\n        splits[i + 1] = ''\n        i += 1\n        continue\n      }\n      // look at n+2 for a closing quote,\n      if (closesQuote(splits[i + 2])) {\n        let toAdd = splits[i + 1] + splits[i + 2]// merge them all\n        //make sure it's not too-long\n        if (toAdd.length < MAX_QUOTE) {\n          splits[i] += toAdd\n          arr.push(splits[i])\n          splits[i + 1] = ''\n          splits[i + 2] = ''\n          i += 2\n          continue\n        }\n      }\n    }\n    arr.push(splits[i])\n  }\n  return arr\n}\nexport default quoteMerge","const MAX_LEN = 250// ¯\\_(ツ)_/¯\n\n// support unicode variants?\n// https://stackoverflow.com/questions/13535172/list-of-all-unicodes-open-close-brackets\nconst hasOpen = /\\(/g\nconst hasClosed = /\\)/g\nconst mergeParens = function (splits) {\n  let arr = []\n  for (let i = 0; i < splits.length; i += 1) {\n    let split = splits[i]\n    let m = split.match(hasOpen)\n    if (m !== null && m.length === 1) {\n      // look at next sentence, for closing parenthesis\n      if (splits[i + 1] && splits[i + 1].length < MAX_LEN) {\n        let m2 = splits[i + 1].match(hasClosed)\n        if (m2 !== null && m.length === 1 && !hasOpen.test(splits[i + 1])) {\n          // merge in 2nd sentence\n          splits[i] += splits[i + 1]\n          arr.push(splits[i])\n          splits[i + 1] = ''\n          i += 1\n          continue\n        }\n      }\n    }\n    arr.push(splits[i])\n  }\n  return arr\n}\nexport default mergeParens","import simpleSplit from './01-simple-split.js'\nimport simpleMerge from './02-simple-merge.js'\nimport smartMerge from './03-smart-merge.js'\nimport quoteMerge from './04-quote-merge.js'\nimport parensMerge from './05-parens-merge.js'\n//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n//regs-\nconst hasSomething = /\\S/\nconst startWhitespace = /^\\s+/\n\nconst splitSentences = function (text, world) {\n  text = text || ''\n  text = String(text)\n  // Ensure it 'smells like' a sentence\n  if (!text || typeof text !== 'string' || hasSomething.test(text) === false) {\n    return []\n  }\n  // cleanup unicode-spaces\n  text = text.replace('\\xa0', ' ')\n  // First do a greedy-split..\n  let splits = simpleSplit(text)\n  // Filter-out the crap ones\n  let sentences = simpleMerge(splits)\n  //detection of non-sentence chunks:\n  sentences = smartMerge(sentences, world)\n  // allow 'he said \"no sir.\" and left.'\n  sentences = quoteMerge(sentences)\n  // allow 'i thought (no way!) and left.'\n  sentences = parensMerge(sentences)\n  //if we never got a sentence, return the given text\n  if (sentences.length === 0) {\n    return [text]\n  }\n  //move whitespace to the ends of sentences, when possible\n  //['hello',' world'] -> ['hello ','world']\n  for (let i = 1; i < sentences.length; i += 1) {\n    let ws = sentences[i].match(startWhitespace)\n    if (ws !== null) {\n      sentences[i - 1] += ws[0]\n      sentences[i] = sentences[i].replace(startWhitespace, '')\n    }\n  }\n  return sentences\n}\nexport default splitSentences\n","const hasHyphen = function (str, model) {\n  let parts = str.split(/[-–—]/)\n  if (parts.length <= 1) {\n    return false\n  }\n  const { prefixes, suffixes } = model.one\n\n  // l-theanine, x-ray\n  if (parts[0].length === 1 && /[a-z]/i.test(parts[0])) {\n    return false\n  }\n  //dont split 're-do'\n  if (prefixes.hasOwnProperty(parts[0])) {\n    return false\n  }\n  //dont split 'flower-like'\n  parts[1] = parts[1].trim().replace(/[.?!]$/, '')\n  if (suffixes.hasOwnProperty(parts[1])) {\n    return false\n  }\n  //letter-number 'aug-20'\n  let reg = /^([a-z\\u00C0-\\u00FF`\"'/]+)[-–—]([a-z0-9\\u00C0-\\u00FF].*)/i\n  if (reg.test(str) === true) {\n    return true\n  }\n  //number-letter '20-aug'\n  let reg2 = /^([0-9]{1,4})[-–—]([a-z\\u00C0-\\u00FF`\"'/-]+$)/i\n  if (reg2.test(str) === true) {\n    return true\n  }\n  return false\n}\n\nconst splitHyphens = function (word) {\n  let arr = []\n  //support multiple-hyphenated-terms\n  const hyphens = word.split(/[-–—]/)\n  let whichDash = '-'\n  let found = word.match(/[-–—]/)\n  if (found && found[0]) {\n    whichDash = found\n  }\n  for (let o = 0; o < hyphens.length; o++) {\n    if (o === hyphens.length - 1) {\n      arr.push(hyphens[o])\n    } else {\n      arr.push(hyphens[o] + whichDash)\n    }\n  }\n  return arr\n}\n\nexport { splitHyphens, hasHyphen }\n","const isSlash = /\\p{L} ?\\/ ?\\p{L}+$/u\n\n// 'he / she' should be one word\nconst combineSlashes = function (arr) {\n  for (let i = 1; i < arr.length - 1; i++) {\n    if (isSlash.test(arr[i])) {\n      arr[i - 1] += arr[i] + arr[i + 1]\n      arr[i] = null\n      arr[i + 1] = null\n    }\n  }\n  return arr\n}\nexport default combineSlashes\n","import { hasHyphen, splitHyphens } from './01-hyphens.js'\nimport combineRanges from './03-ranges.js'\nimport combineSlashes from './02-slashes.js'\n\nconst wordlike = /\\S/\nconst isBoundary = /^[!?.]+$/\nconst naiiveSplit = /(\\S+)/\n\nlet notWord = ['.', '?', '!', ':', ';', '-', '–', '—', '--', '...', '(', ')', '[', ']', '\"', \"'\", '`', '«', '»', '*']\nnotWord = notWord.reduce((h, c) => {\n  h[c] = true\n  return h\n}, {})\n\nconst isArray = function (arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]'\n}\n\n//turn a string into an array of strings (naiive for now, lumped later)\nconst splitWords = function (str, model) {\n  let result = []\n  let arr = []\n  //start with a naiive split\n  str = str || ''\n  if (typeof str === 'number') {\n    str = String(str)\n  }\n  if (isArray(str)) {\n    return str\n  }\n  const words = str.split(naiiveSplit)\n  for (let i = 0; i < words.length; i++) {\n    //split 'one-two'\n    if (hasHyphen(words[i], model) === true) {\n      arr = arr.concat(splitHyphens(words[i]))\n      continue\n    }\n    arr.push(words[i])\n  }\n  //greedy merge whitespace+arr to the right\n  let carry = ''\n  for (let i = 0; i < arr.length; i++) {\n    let word = arr[i]\n    //if it's more than a whitespace\n    if (wordlike.test(word) === true && notWord.hasOwnProperty(word) === false && isBoundary.test(word) === false) {\n      //put whitespace on end of previous term, if possible\n      if (result.length > 0) {\n        result[result.length - 1] += carry\n        result.push(word)\n      } else {\n        //otherwise, but whitespace before\n        result.push(carry + word)\n      }\n      carry = ''\n    } else {\n      carry += word\n    }\n  }\n  //handle last one\n  if (carry) {\n    if (result.length === 0) {\n      result[0] = ''\n    }\n    result[result.length - 1] += carry //put it on the end\n  }\n  // combine 'one / two'\n  result = combineSlashes(result)\n  result = combineRanges(result)\n  // remove empty results\n  result = result.filter(s => s)\n  return result\n}\nexport default splitWords\n","//all punctuation marks, from https://en.wikipedia.org/wiki/Punctuation\n\n//we have slightly different rules for start/end - like #hashtags.\nconst isLetter = /\\p{Letter}/u\nconst isNumber = /[\\p{Number}\\p{Currency_Symbol}]/u\nconst hasAcronym = /^[a-z]\\.([a-z]\\.)+/i\nconst chillin = /[sn]['’]$/\n\nconst normalizePunctuation = function (str, model) {\n  // quick lookup for allowed pre/post punctuation\n  let { prePunctuation, postPunctuation, emoticons } = model.one\n  let original = str\n  let pre = ''\n  let post = ''\n  let chars = Array.from(str)\n\n  // punctuation-only words, like '<3'\n  if (emoticons.hasOwnProperty(str.trim())) {\n    return { str: str.trim(), pre, post: ' ' } //not great\n  }\n\n  // pop any punctuation off of the start\n  let len = chars.length\n  for (let i = 0; i < len; i += 1) {\n    let c = chars[0]\n    // keep any declared chars\n    if (prePunctuation[c] === true) {\n      continue//keep it\n    }\n    // keep '+' or '-' only before a number\n    if ((c === '+' || c === '-') && isNumber.test(chars[1])) {\n      break//done\n    }\n    // '97 - year short-form\n    if (c === \"'\" && c.length === 3 && isNumber.test(chars[1])) {\n      break//done\n    }\n    // start of word\n    if (isLetter.test(c) || isNumber.test(c)) {\n      break //done\n    }\n    // punctuation\n    pre += chars.shift()//keep going\n  }\n\n  // pop any punctuation off of the end\n  len = chars.length\n  for (let i = 0; i < len; i += 1) {\n    let c = chars[chars.length - 1]\n    // keep any declared chars\n    if (postPunctuation[c] === true) {\n      continue//keep it\n    }\n    // start of word\n    if (isLetter.test(c) || isNumber.test(c)) {\n      break //done\n    }\n    // F.B.I.\n    if (c === '.' && hasAcronym.test(original) === true) {\n      continue//keep it\n    }\n    //  keep s-apostrophe - \"flanders'\" or \"chillin'\"\n    if (c === \"'\" && chillin.test(original) === true) {\n      continue//keep it\n    }\n    // punctuation\n    post = chars.pop() + post//keep going\n  }\n\n  str = chars.join('')\n  //we went too far..\n  if (str === '') {\n    // do a very mild parse, and hope for the best.\n    original = original.replace(/ *$/, after => {\n      post = after || ''\n      return ''\n    })\n    str = original\n    pre = ''\n  }\n  return { str, pre, post }\n}\nexport default normalizePunctuation\n","// do acronyms need to be ASCII?  ... kind of?\nconst periodAcronym = /([A-Z]\\.)+[A-Z]?,?$/\nconst oneLetterAcronym = /^[A-Z]\\.,?$/\nconst noPeriodAcronym = /[A-Z]{2,}('s|,)?$/\nconst lowerCaseAcronym = /([a-z]\\.)+[a-z]\\.?$/\n\nconst isAcronym = function (str) {\n  //like N.D.A\n  if (periodAcronym.test(str) === true) {\n    return true\n  }\n  //like c.e.o\n  if (lowerCaseAcronym.test(str) === true) {\n    return true\n  }\n  //like 'F.'\n  if (oneLetterAcronym.test(str) === true) {\n    return true\n  }\n  //like NDA\n  if (noPeriodAcronym.test(str) === true) {\n    return true\n  }\n  return false\n}\n\nconst doAcronym = function (str) {\n  if (isAcronym(str)) {\n    str = str.replace(/\\./g, '')\n  }\n  return str\n}\nexport default doAcronym\n","import cleanup from './01-cleanup.js'\n// import doUnicode from './02-unicode.js'\nimport doAcronyms from './02-acronyms.js'\n\nconst normalize = function (term, world) {\n  const killUnicode = world.methods.one.killUnicode\n  // console.log(world.methods.one)\n  let str = term.text || ''\n  str = cleanup(str)\n  //(very) rough ASCII transliteration -  bjŏrk -> bjork\n  str = killUnicode(str, world)\n  str = doAcronyms(str)\n  term.normal = str\n}\nexport default normalize\n","/** some basic operations on a string to reduce noise */\nconst clean = function (str) {\n  str = str || ''\n  str = str.toLowerCase()\n  str = str.trim()\n  let original = str\n  //punctuation\n  str = str.replace(/[,;.!?]+$/, '')\n  //coerce Unicode ellipses\n  str = str.replace(/\\u2026/g, '...')\n  //en-dash\n  str = str.replace(/\\u2013/g, '-')\n  //strip leading & trailing grammatical punctuation\n  if (/^[:;]/.test(str) === false) {\n    str = str.replace(/\\.{3,}$/g, '')\n    str = str.replace(/[\",.!:;?)]+$/g, '')\n    str = str.replace(/^['\"(]+/g, '')\n  }\n  // remove zero-width characters\n  str = str.replace(/[\\u200B-\\u200D\\uFEFF]/g, '')\n  //do this again..\n  str = str.trim()\n  //oh shucks,\n  if (str === '') {\n    str = original\n  }\n  //no-commas in numbers\n  str = str.replace(/([0-9]),([0-9])/g, '$1$2')\n  return str\n}\nexport default clean\n","const isAcronym = /[ .][A-Z]\\.? *$/i //asci - 'n.s.a.'\nconst hasEllipse = /(?:\\u2026|\\.{2,}) *$/ // '...'\nconst hasLetter = /\\p{L}/u\nconst leadInit = /^[A-Z]\\. $/ // \"W. Kensington\"\n\n/** does this look like a sentence? */\nconst isSentence = function (str, abbrevs) {\n  // must have a letter\n  if (hasLetter.test(str) === false) {\n    return false\n  }\n  // check for 'F.B.I.'\n  if (isAcronym.test(str) === true) {\n    return false\n  }\n  // check for leading initial - \"W. Kensington\"\n  if (str.length === 3 && leadInit.test(str)) {\n    return false\n  }\n  //check for '...'\n  if (hasEllipse.test(str) === true) {\n    return false\n  }\n  let txt = str.replace(/[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049] *$/, '')\n  let words = txt.split(' ')\n  let lastWord = words[words.length - 1].toLowerCase()\n  // check for 'Mr.'\n  if (abbrevs.hasOwnProperty(lastWord) === true) {\n    return false\n  }\n  // //check for jeopardy!\n  // if (blacklist.hasOwnProperty(lastWord)) {\n  //   return false\n  // }\n  return true\n}\nexport default isSentence\n","import splitSentences from './01-sentences/index.js'\nimport splitTerms from './02-terms/index.js'\nimport splitWhitespace from './03-whitespace/index.js'\nimport killUnicode from './unicode.js'\nimport fromString from './parse.js'\nimport isSentence from './01-sentences/is-sentence.js'\n\nexport default {\n  one: {\n    killUnicode,\n    tokenize: {\n      splitSentences,\n      isSentence,\n      splitTerms,\n      splitWhitespace,\n      fromString,\n    },\n  },\n}\n","// 'Björk' to 'Bjork'.\nconst killUnicode = function (str, world) {\n  const unicode = world.model.one.unicode || {}\n  str = str || ''\n  let chars = str.split('')\n  chars.forEach((s, i) => {\n    if (unicode[s]) {\n      chars[i] = unicode[s]\n    }\n  })\n  return chars.join('')\n}\nexport default killUnicode\n","\n//loop through these chunks, and join the non-sentence chunks back together..\nconst smartMerge = function (chunks, world) {\n  const isSentence = world.methods.one.tokenize.isSentence\n  const abbrevs = world.model.one.abbreviations || new Set()\n\n  let sentences = []\n  for (let i = 0; i < chunks.length; i++) {\n    let c = chunks[i]\n    //should this chunk be combined with the next one?\n    if (chunks[i + 1] && isSentence(c, abbrevs) === false) {\n      chunks[i + 1] = c + (chunks[i + 1] || '')\n    } else if (c && c.length > 0) {\n      //this chunk is a proper sentence..\n      sentences.push(c)\n      chunks[i] = ''\n    }\n  }\n  return sentences\n}\nexport default smartMerge","// combine '2 - 5' like '2-5' is\n// 2-4: 2, 4\nconst combineRanges = function (arr) {\n  const startRange = /^[0-9]{1,4}(:[0-9][0-9])?([a-z]{1,2})? ?[-–—] ?$/\n  const endRange = /^[0-9]{1,4}([a-z]{1,2})? ?$/\n  for (let i = 0; i < arr.length - 1; i += 1) {\n    if (arr[i + 1] && startRange.test(arr[i]) && endRange.test(arr[i + 1])) {\n      arr[i] = arr[i] + arr[i + 1]\n      arr[i + 1] = null\n    }\n  }\n  return arr\n}\nexport default combineRanges\n","import tokenize from './tokenize.js'\n\nconst parseTerm = (txt, model) => {\n  // cleanup any punctuation as whitespace\n  let { str, pre, post } = tokenize(txt, model)\n  const parsed = {\n    text: str,\n    pre: pre,\n    post: post,\n    tags: new Set(),\n  }\n  return parsed\n}\nexport default parseTerm\n","import normalize from '../compute/normal/index.js'\n\n// turn a string input into a 'document' json format\nconst parse = function (input, world) {\n  const { methods, model } = world\n  const { splitSentences, splitTerms, splitWhitespace } = methods.one.tokenize\n  input = input || ''\n  // split into sentences\n  let sentences = splitSentences(input, world)\n  // split into word objects\n  input = sentences.map((txt) => {\n    let terms = splitTerms(txt, model)\n    // split into [pre-text-post]\n    terms = terms.map(t => splitWhitespace(t, model))\n    // add normalized term format, always\n    terms.forEach((t) => {\n      normalize(t, world)\n    })\n    return terms\n  })\n  return input\n}\nexport default parse","import misc from './abbreviations/misc.js'\nimport honorifics from './abbreviations/honorifics.js'\nimport months from './abbreviations/months.js'\nimport nouns from './abbreviations/nouns.js'\nimport organizations from './abbreviations/organizations.js'\nimport places from './abbreviations/places.js'\nimport units from './abbreviations/units.js'\n\n// add our abbreviation list to our lexicon\nlet list = [\n  [misc],\n  [units, 'Unit'],\n  [nouns, 'Noun'],\n  [honorifics, 'Honorific'],\n  [months, 'Month'],\n  [organizations, 'Organization'],\n  [places, 'Place'],\n]\n// create key-val for sentence-tokenizer\nlet abbreviations = {}\n// add them to a future lexicon\nlet lexicon = {}\n\nlist.forEach(a => {\n  a[0].forEach(w => {\n    // sentence abbrevs\n    abbreviations[w] = true\n    // future-lexicon\n    lexicon[w] = 'Abbreviation'\n    if (a[1] !== undefined) {\n      lexicon[w] = [lexicon[w], a[1]]\n    }\n  })\n})\n\nexport { lexicon, abbreviations }\n","export default [\n  'approx',\n  'apt',\n  'bc',\n  'cyn',\n  'eg',\n  'esp',\n  'est',\n  'etc',\n  'ex',\n  'exp',\n  'prob', //probably\n  'pron', // Pronunciation\n  'gal', //gallon\n  'min',\n  'pseud',\n  'fig', //figure\n  'jd',\n  'lat', //latitude\n  'lng', //longitude\n  'vol', //volume\n  'fm', //not am\n  'def', //definition\n  'misc',\n  'plz', //please\n  'ea', //each\n  'ps',\n  'sec', //second\n  'pt',\n  'pref', //preface\n  'pl', //plural\n  'pp', //pages\n  'qt', //quarter\n  'fr', //french\n  'sq',\n  'nee', //given name at birth\n  'ss', //ship, or sections\n  'tel',\n  'temp',\n  'vet',\n  'ver', //version\n  'fem', //feminine\n  'masc', //masculine\n  'eng', //engineering/english\n  'adj', //adjective\n  'vb', //verb\n  'rb', //adverb\n  'inf', //infinitive\n  'situ', // in situ\n  'vivo',\n  'vitro',\n  'wr', //world record\n]\n","// units that are abbreviations too\nexport default [\n  'dl',\n  'ml',\n  'gal',\n  // 'ft', //ambiguous\n  'qt',\n  'pt',\n  'tbl',\n  'tsp',\n  'tbsp',\n  'km',\n  'dm', //decimeter\n  'cm',\n  'mm',\n  'mi',\n  'td',\n  'hr', //hour\n  'hrs', //hour\n  'kg',\n  'hg',\n  'dg', //decigram\n  'cg', //centigram\n  'mg', //milligram\n  'µg', //microgram\n  'lb', //pound\n  'oz', //ounce\n  'sq ft',\n  'hz', //hertz\n  'mps', //meters per second\n  'mph',\n  'kmph', //kilometers per hour\n  'kb', //kilobyte\n  'mb', //megabyte\n  // 'gb', //ambig\n  'tb', //terabyte\n  'lx', //lux\n  'lm', //lumen\n  // 'pa', //ambig\n  'fl oz', //\n  'yb',\n]\n","export default [\n  'ad',\n  'al',\n  'arc',\n  'ba',\n  'bl',\n  'ca',\n  'cca',\n  'col',\n  'corp',\n  'ft',\n  'fy',\n  'ie',\n  'lit',\n  'ma',\n  'md',\n  'pd',\n  'tce',\n]\n","export default [\n  'adj',\n  'adm',\n  'adv',\n  'asst',\n  'atty',\n  'bldg',\n  'brig',\n  'capt',\n  'cmdr',\n  'comdr',\n  'cpl',\n  'det',\n  'dr',\n  'esq',\n  'gen',\n  'gov',\n  'hon',\n  'jr',\n  'llb',\n  'lt',\n  'maj',\n  'messrs',\n  'mlle',\n  'mme',\n  'mr',\n  'mrs',\n  'ms',\n  'mstr',\n  'phd',\n  'prof',\n  'pvt',\n  'rep',\n  'reps',\n  'res',\n  'rev',\n  'sen',\n  'sens',\n  'sfc',\n  'sgt',\n  'sir',\n  'sr',\n  'supt',\n  'surg'\n  //miss\n  //misses\n]\n","export default ['jan', 'feb', 'mar', 'apr', 'jun', 'jul', 'aug', 'sep', 'sept', 'oct', 'nov', 'dec']\n","export default ['dept', 'univ', 'assn', 'bros', 'inc', 'ltd', 'co']\n","export default [\n  'rd',\n  'st',\n  'dist',\n  'mt',\n  'ave',\n  'blvd',\n  'cl',\n  // 'ct',\n  'cres',\n  'hwy',\n  //states\n  'ariz',\n  'cal',\n  'calif',\n  'colo',\n  'conn',\n  'fla',\n  'fl',\n  'ga',\n  'ida',\n  'ia',\n  'kan',\n  'kans',\n\n  'minn',\n  'neb',\n  'nebr',\n  'okla',\n  'penna',\n  'penn',\n  'pa',\n  'dak',\n  'tenn',\n  'tex',\n  'ut',\n  'vt',\n  'va',\n  'wis',\n  'wisc',\n  'wy',\n  'wyo',\n  'usafa',\n  'alta',\n  'ont',\n  'que',\n  'sask',\n]\n","// dashed prefixes that are not independent words\n//  'mid-century', 'pre-history'\nexport default [\n  'anti',\n  'bi',\n  'co',\n  'contra',\n  'de',\n  'extra',\n  'infra',\n  'inter',\n  'intra',\n  'macro',\n  'micro',\n  'mis',\n  'mono',\n  'multi',\n  'peri',\n  'pre',\n  'pro',\n  'proto',\n  'pseudo',\n  're',\n  'sub',\n  'supra',\n  'trans',\n  'tri',\n  'un',\n  'out', //out-lived\n  'ex',//ex-wife\n\n  // 'counter',\n  // 'mid',\n  // 'out',\n  // 'non',\n  // 'over',\n  // 'post',\n  // 'semi',\n  // 'super', //'super-cool'\n  // 'ultra', //'ulta-cool'\n  // 'under',\n  // 'whole',\n].reduce((h, str) => {\n  h[str] = true\n  return h\n}, {})","//a hugely-ignorant, and widely subjective transliteration of latin, cryllic, greek unicode characters to english ascii.\n//approximate visual (not semantic or phonetic) relationship between unicode and ascii characters\n//http://en.wikipedia.org/wiki/List_of_Unicode_characters\n//https://docs.google.com/spreadsheet/ccc?key=0Ah46z755j7cVdFRDM1A2YVpwa1ZYWlpJM2pQZ003M0E\nlet compact = {\n  '!': '¡',\n  '?': '¿Ɂ',\n  '\"': '“”\"❝❞',\n  \"'\": '‘‛❛❜’',\n  '-': '—–',\n  a: 'ªÀÁÂÃÄÅàáâãäåĀāĂăĄąǍǎǞǟǠǡǺǻȀȁȂȃȦȧȺΆΑΔΛάαλАаѦѧӐӑӒӓƛæ',\n  b: 'ßþƀƁƂƃƄƅɃΒβϐϦБВЪЬвъьѢѣҌҍ',\n  c: '¢©ÇçĆćĈĉĊċČčƆƇƈȻȼͻͼϲϹϽϾСсєҀҁҪҫ',\n  d: 'ÐĎďĐđƉƊȡƋƌ',\n  e: 'ÈÉÊËèéêëĒēĔĕĖėĘęĚěƐȄȅȆȇȨȩɆɇΈΕΞΣέεξϵЀЁЕеѐёҼҽҾҿӖӗ',\n  f: 'ƑƒϜϝӺӻҒғſ',\n  g: 'ĜĝĞğĠġĢģƓǤǥǦǧǴǵ',\n  h: 'ĤĥĦħƕǶȞȟΉΗЂЊЋНнђћҢңҤҥҺһӉӊ',\n  I: 'ÌÍÎÏ',\n  i: 'ìíîïĨĩĪīĬĭĮįİıƖƗȈȉȊȋΊΐΪίιϊІЇії',\n  j: 'ĴĵǰȷɈɉϳЈј',\n  k: 'ĶķĸƘƙǨǩΚκЌЖКжкќҚқҜҝҞҟҠҡ',\n  l: 'ĹĺĻļĽľĿŀŁłƚƪǀǏǐȴȽΙӀӏ',\n  m: 'ΜϺϻМмӍӎ',\n  n: 'ÑñŃńŅņŇňŉŊŋƝƞǸǹȠȵΝΠήηϞЍИЙЛПийлпѝҊҋӅӆӢӣӤӥπ',\n  o: 'ÒÓÔÕÖØðòóôõöøŌōŎŏŐőƟƠơǑǒǪǫǬǭǾǿȌȍȎȏȪȫȬȭȮȯȰȱΌΘΟθοσόϕϘϙϬϴОФоѲѳӦӧӨөӪӫ',\n  p: 'ƤΡρϷϸϼРрҎҏÞ',\n  q: 'Ɋɋ',\n  r: 'ŔŕŖŗŘřƦȐȑȒȓɌɍЃГЯгяѓҐґ',\n  s: 'ŚśŜŝŞşŠšƧƨȘșȿЅѕ',\n  t: 'ŢţŤťŦŧƫƬƭƮȚțȶȾΓΤτϮТт',\n  u: 'ÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųƯưƱƲǓǔǕǖǗǘǙǚǛǜȔȕȖȗɄΰυϋύ',\n  v: 'νѴѵѶѷ',\n  w: 'ŴŵƜωώϖϢϣШЩшщѡѿ',\n  x: '×ΧχϗϰХхҲҳӼӽӾӿ',\n  y: 'ÝýÿŶŷŸƳƴȲȳɎɏΎΥΫγψϒϓϔЎУучўѰѱҮүҰұӮӯӰӱӲӳ',\n  z: 'ŹźŻżŽžƵƶȤȥɀΖ',\n}\n//decompress data into two hashes\nlet unicode = {}\nObject.keys(compact).forEach(function (k) {\n  compact[k].split('').forEach(function (s) {\n    unicode[s] = k\n  })\n})\nexport default unicode","const hasSlash = /\\//\nconst hasDomain = /[a-z]\\.[a-z]/i\nconst isMath = /[0-9]/\n// const hasSlash = /[a-z\\u00C0-\\u00FF] ?\\/ ?[a-z\\u00C0-\\u00FF]/\n// const hasApostrophe = /['’]s$/\n\nconst addAliases = function (term, world) {\n  let str = term.normal || term.text || term.machine\n  const aliases = world.model.one.aliases\n  // lookup known aliases like '&'\n  if (aliases.hasOwnProperty(str)) {\n    term.alias = term.alias || []\n    term.alias.push(aliases[str])\n  }\n  // support slashes as aliases\n  if (hasSlash.test(str) && !hasDomain.test(str) && !isMath.test(str)) {\n    let arr = str.split(hasSlash)\n    // don't split urls and things\n    if (arr.length <= 2) {\n      arr.forEach(word => {\n        word = word.trim()\n        if (word !== '') {\n          term.alias = term.alias || []\n          term.alias.push(word)\n        }\n      })\n    }\n  }\n  // aliases for apostrophe-s\n  // if (hasApostrophe.test(str)) {\n  //   let main = str.replace(hasApostrophe, '').trim()\n  //   term.alias = term.alias || []\n  //   term.alias.push(main)\n  // }\n  return term\n}\nexport default addAliases\n","const hasDash = /^\\p{Letter}+-\\p{Letter}+$/u\n// 'machine' is a normalized form that looses human-readability\nconst doMachine = function (term) {\n  let str = term.implicit || term.normal || term.text\n  // remove apostrophes\n  str = str.replace(/['’]s$/, '')\n  str = str.replace(/s['’]$/, 's')\n  //lookin'->looking (make it easier for conjugation)\n  str = str.replace(/([aeiou][ktrp])in'$/, '$1ing')\n  //turn re-enactment to reenactment\n  if (hasDash.test(str)) {\n    str = str.replace(/-/g, '')\n  }\n  //#tags, @mentions\n  str = str.replace(/^[#@]/, '')\n  if (str !== term.normal) {\n    term.machine = str\n  }\n}\nexport default doMachine\n","import alias from './alias.js'\nimport normal from './normal/index.js'\nimport machine from './machine.js'\nimport freq from './freq.js'\nimport offset from './offset.js'\nimport index from './reindex.js'\nimport wordCount from './wordCount.js'\n\n// cheat-method for a quick loop\nconst termLoop = function (view, fn) {\n  let docs = view.docs\n  for (let i = 0; i < docs.length; i += 1) {\n    for (let t = 0; t < docs[i].length; t += 1) {\n      fn(docs[i][t], view.world)\n    }\n  }\n}\n\nconst methods = {\n  alias: (view) => termLoop(view, alias),\n  machine: (view) => termLoop(view, machine),\n  normal: (view) => termLoop(view, normal),\n  freq,\n  offset,\n  index,\n  wordCount,\n}\nexport default methods\n","// sort words by frequency\nconst freq = function (view) {\n  let docs = view.docs\n  let counts = {}\n  for (let i = 0; i < docs.length; i += 1) {\n    for (let t = 0; t < docs[i].length; t += 1) {\n      let term = docs[i][t]\n      let word = term.machine || term.normal\n      counts[word] = counts[word] || 0\n      counts[word] += 1\n    }\n  }\n  // add counts on each term\n  for (let i = 0; i < docs.length; i += 1) {\n    for (let t = 0; t < docs[i].length; t += 1) {\n      let term = docs[i][t]\n      let word = term.machine || term.normal\n      term.freq = counts[word]\n    }\n  }\n}\nexport default freq\n","// get all character startings in doc\nconst offset = function (view) {\n  let elapsed = 0\n  let index = 0\n  let docs = view.document //start from the actual-top\n  for (let i = 0; i < docs.length; i += 1) {\n    for (let t = 0; t < docs[i].length; t += 1) {\n      let term = docs[i][t]\n      term.offset = {\n        index: index,\n        start: elapsed + term.pre.length,\n        length: term.text.length,\n      }\n      elapsed += term.pre.length + term.text.length + term.post.length\n      index += 1\n    }\n  }\n}\n\n\nexport default offset\n","// cheat- add the document's pointer to the terms\nconst index = function (view) {\n  // console.log('reindex')\n  let document = view.document\n  for (let n = 0; n < document.length; n += 1) {\n    for (let i = 0; i < document[n].length; i += 1) {\n      document[n][i].index = [n, i]\n    }\n  }\n  // let ptrs = b.fullPointer\n  // console.log(ptrs)\n  // for (let i = 0; i < docs.length; i += 1) {\n  //   const [n, start] = ptrs[i]\n  //   for (let t = 0; t < docs[i].length; t += 1) {\n  //     let term = docs[i][t]\n  //     term.index = [n, start + t]\n  //   }\n  // }\n}\n\nexport default index","const wordCount = function (view) {\n  let n = 0\n  let docs = view.docs\n  for (let i = 0; i < docs.length; i += 1) {\n    for (let t = 0; t < docs[i].length; t += 1) {\n      if (docs[i][t].normal === '') {\n        continue //skip implicit words\n      }\n      n += 1\n      docs[i][t].wordCount = n\n    }\n  }\n}\n\nexport default wordCount\n","import methods from './methods/index.js'\nimport model from './model/index.js'\nimport compute from './compute/index.js'\n\nexport default {\n  compute,\n  methods,\n  model,\n  hooks: ['alias', 'machine', 'index', 'id'],\n}\n\n// const plugin = function (world) {\n//   let { methods, model, parsers } = world\n//   Object.assign({}, methods, _methods)\n//   Object.assign(model, _model)\n//   methods.one.tokenize.fromString = tokenize\n//   parsers.push('normal')\n//   parsers.push('alias')\n//   parsers.push('machine')\n//   // extend View class\n//   // addMethods(View)\n// }\n// export default plugin\n","import aliases from './aliases.js'\nimport { lexicon, abbreviations } from './lexicon.js'\nimport prefixes from './prefixes.js'\nimport suffixes from './suffixes.js'\nimport unicode from './unicode.js'\nimport { prePunctuation, postPunctuation, emoticons } from './punctuation.js'\n\nexport default {\n  one: {\n    aliases,\n    abbreviations,\n    prefixes,\n    suffixes,\n    prePunctuation,\n    postPunctuation,\n    lexicon, //give this one forward\n    unicode,\n    emoticons\n  },\n}\n","const aliases = {\n  '&': 'and',\n  '@': 'at',\n  '%': 'percent',\n  'plz': 'please',\n  'bein': 'being',\n}\nexport default aliases\n","// dashed suffixes that are not independent words\n//  'flower-like', 'president-elect'\nexport default {\n  'like': true,\n  'ish': true,\n  'less': true,\n  'able': true,\n  'elect': true,\n  'type': true,\n  'designate': true,\n  // 'fold':true,\n}","// https://util.unicode.org/UnicodeJsps/list-unicodeset.jsp?a=%5Cp%7Bpunctuation%7D\n\n// punctuation to keep at start of word\nconst prePunctuation = {\n  '#': true, //#hastag\n  '@': true, //@atmention\n  '_': true,//underscore\n  '°': true,\n  // '+': true,//+4\n  // '\\\\-',//-4  (escape)\n  // '.',//.4\n  // zero-width chars\n  '\\u200B': true,\n  '\\u200C': true,\n  '\\u200D': true,\n  '\\uFEFF': true\n}\n\n// punctuation to keep at end of word\nconst postPunctuation = {\n  '%': true,//88%\n  '_': true,//underscore\n  '°': true,//degrees, italian ordinal\n  // '\\'',// sometimes\n  // zero-width chars\n  '\\u200B': true,\n  '\\u200C': true,\n  '\\u200D': true,\n  '\\uFEFF': true\n}\n\nconst emoticons = {\n  '<3': true,\n  '</3': true,\n  '<\\\\3': true,\n  ':^P': true,\n  ':^p': true,\n  ':^O': true,\n  ':^3': true,\n}\n\nexport { prePunctuation, postPunctuation, emoticons }","// lookup last word in the type-ahead prefixes\nconst typeahead = function (view) {\n  const prefixes = view.model.one.typeahead\n  const docs = view.docs\n  if (docs.length === 0 || Object.keys(prefixes).length === 0) {\n    return\n  }\n  let lastPhrase = docs[docs.length - 1] || []\n  let lastTerm = lastPhrase[lastPhrase.length - 1]\n  // if we've already put whitespace, end.\n  if (lastTerm.post) {\n    return\n  }\n  // if we found something\n  if (prefixes.hasOwnProperty(lastTerm.normal)) {\n    let found = prefixes[lastTerm.normal]\n    // add full-word as an implicit result\n    lastTerm.implicit = found\n    lastTerm.machine = found\n    lastTerm.typeahead = true\n    // tag it, as our assumed term\n    if (view.compute.preTagger) {\n      view.last().unTag('*').compute(['lexicon', 'preTagger'])\n    }\n  }\n}\n\nexport default { typeahead }\n","// assume any discovered prefixes\nconst autoFill = function () {\n  const docs = this.docs\n  if (docs.length === 0) {\n    return this\n  }\n  let lastPhrase = docs[docs.length - 1] || []\n  let term = lastPhrase[lastPhrase.length - 1]\n  if (term.typeahead === true && term.machine) {\n    term.text = term.machine\n    term.normal = term.machine\n  }\n  return this\n}\n\nconst api = function (View) {\n  View.prototype.autoFill = autoFill\n}\nexport default api","import allPrefixes from './allPrefixes.js'\n\nconst isObject = val => {\n  return Object.prototype.toString.call(val) === '[object Object]'\n}\n\nconst defaults = {\n  safe: true,\n  min: 3,\n}\n\nconst prepare = function (words = [], opts = {}) {\n  let model = this.model()\n  opts = Object.assign({}, defaults, opts)\n  if (isObject(words)) {\n    Object.assign(model.one.lexicon, words)\n    words = Object.keys(words)\n  }\n  let prefixes = allPrefixes(words, opts, this.world())\n  // manually combine these with any existing prefixes\n  Object.keys(prefixes).forEach(str => {\n    // explode any overlaps\n    if (model.one.typeahead.hasOwnProperty(str)) {\n      delete model.one.typeahead[str]\n      return\n    }\n    model.one.typeahead[str] = prefixes[str]\n  })\n  return this\n}\n\nexport default {\n  typeahead: prepare\n}","// generate all the possible prefixes up-front\nconst getPrefixes = function (arr, opts, world) {\n  let index = {}\n  let collisions = []\n  let existing = world.prefixes || {}\n  arr.forEach((str) => {\n    str = str.toLowerCase().trim()\n    let max = str.length\n    if (opts.max && max > opts.max) {\n      max = opts.max\n    }\n    for (let size = opts.min; size < max; size += 1) {\n      let prefix = str.substring(0, size)\n      // ensure prefix is not a word\n      if (opts.safe && world.model.one.lexicon.hasOwnProperty(prefix)) {\n        continue\n      }\n      // does it already exist?\n      if (existing.hasOwnProperty(prefix) === true) {\n        collisions.push(prefix)\n        continue\n      }\n      if (index.hasOwnProperty(prefix) === true) {\n        collisions.push(prefix)\n        continue\n      }\n      index[prefix] = str\n    }\n  })\n  // merge with existing prefixes\n  index = Object.assign({}, existing, index)\n  // remove ambiguous-prefixes\n  collisions.forEach((str) => {\n    delete index[str]\n  })\n  return index\n}\n\nexport default getPrefixes\n","import compute from './compute.js'\nimport api from './api.js'\nimport lib from './lib/index.js'\n\nconst model = {\n  one: {\n    typeahead: {} //set a blank key-val\n  }\n}\nexport default {\n  model,\n  api,\n  lib,\n  compute,\n  hooks: ['typeahead']\n}\n\n","import nlp from './nlp.js' // 5kb\nimport cache from './1-one/cache/plugin.js'\nimport change from './1-one/change/plugin.js'\nimport contractions from './1-one/contraction-one/plugin.js'\nimport lexicon from './1-one/lexicon/plugin.js'\nimport lookup from './1-one/lookup/plugin.js'\nimport match from './1-one/match/plugin.js'\nimport output from './1-one/output/plugin.js'\nimport pointers from './1-one/pointers/plugin.js'\nimport sweep from './1-one/sweep/plugin.js'\nimport tag from './1-one/tag/plugin.js'\nimport tokenize from './1-one/tokenize/plugin.js'\nimport typeahead from './1-one/typeahead/plugin.js'\n\n// order here matters\nnlp.extend(change) //0kb\nnlp.extend(output) //0kb\nnlp.extend(match) //10kb\nnlp.extend(pointers) //2kb\nnlp.extend(tag) //2kb\nnlp.plugin(contractions) //~6kb\nnlp.extend(tokenize) //7kb\nnlp.plugin(cache) //~1kb\nnlp.extend(lookup) //7kb\nnlp.extend(typeahead) //1kb\nnlp.extend(lexicon) //1kb\nnlp.extend(sweep) //1kb\n\nexport default nlp // 40kb\n","//nouns with irregular plural/singular forms\n//used in nouns.toPlural(), and also in the lexicon.\n\nexport default {\n  // -a\n  addendum: 'addenda',\n  corpus: 'corpora',\n  criterion: 'criteria',\n  curriculum: 'curricula',\n  genus: 'genera',\n  memorandum: 'memoranda',\n  opus: 'opera',\n  ovum: 'ova',\n  phenomenon: 'phenomena',\n  referendum: 'referenda',\n\n  // -ae\n  alga: 'algae',\n  alumna: 'alumnae',\n  antenna: 'antennae',\n  formula: 'formulae',\n  larva: 'larvae',\n  nebula: 'nebulae',\n  vertebra: 'vertebrae',\n\n  // -is\n  analysis: 'analyses',\n  axis: 'axes',\n  diagnosis: 'diagnoses',\n  parenthesis: 'parentheses',\n  prognosis: 'prognoses',\n  synopsis: 'synopses',\n  thesis: 'theses',\n  neurosis: 'neuroses',\n  // -x\n  appendix: 'appendices',\n  index: 'indices',\n  matrix: 'matrices',\n  ox: 'oxen',\n  sex: 'sexes',\n\n  // -i\n  alumnus: 'alumni',\n  bacillus: 'bacilli',\n  cactus: 'cacti',\n  fungus: 'fungi',\n  hippopotamus: 'hippopotami',\n  libretto: 'libretti',\n  modulus: 'moduli',\n  nucleus: 'nuclei',\n  octopus: 'octopi',\n  radius: 'radii',\n  stimulus: 'stimuli',\n  syllabus: 'syllabi',\n\n  // -ie\n  cookie: 'cookies',\n  calorie: 'calories',\n  auntie: 'aunties',\n  movie: 'movies',\n  pie: 'pies',\n  rookie: 'rookies',\n  tie: 'ties',\n  zombie: 'zombies',\n\n  // -f\n  leaf: 'leaves',\n  loaf: 'loaves',\n  thief: 'thieves',\n\n  // ee-\n  foot: 'feet',\n  goose: 'geese',\n  tooth: 'teeth',\n\n  // -eaux\n  beau: 'beaux',\n  chateau: 'chateaux',\n  tableau: 'tableaux',\n\n  // -ses\n  bus: 'buses',\n  gas: 'gases',\n  circus: 'circuses',\n  crisis: 'crises',\n  virus: 'viruses',\n  database: 'databases',\n  excuse: 'excuses',\n  abuse: 'abuses',\n\n  avocado: 'avocados',\n  barracks: 'barracks',\n  child: 'children',\n  clothes: 'clothes',\n  echo: 'echoes',\n  embargo: 'embargoes',\n  epoch: 'epochs',\n  deer: 'deer',\n  halo: 'halos',\n  man: 'men',\n  woman: 'women',\n  mosquito: 'mosquitoes',\n  mouse: 'mice',\n  person: 'people',\n  quiz: 'quizzes',\n  rodeo: 'rodeos',\n  shoe: 'shoes',\n  sombrero: 'sombreros',\n  stomach: 'stomachs',\n  tornado: 'tornados',\n  tuxedo: 'tuxedos',\n\n}\n","// generated in ./lib/lexicon\nexport default {\n  \"Comparative\": \"true¦better\",\n  \"Superlative\": \"true¦earlier\",\n  \"PresentTense\": \"true¦sounds\",\n  \"Condition\": \"true¦unless\",\n  \"Conjunction\": \"true¦aXbTcuz,evenRhowPiHjust00lest,noEoCp8supposing,t5wh0yet;at,e2il1o0;evOse;e,st;nevMre0thM; if,vL;h0o;erefOo0;!uU;lus,rovide0; 1d0;! 0;th9;r0therwiJ;! not; mattBr,w0;! 0;since,th4w7;f4n0; 0asmuch;as mFcaCorder t0;h0o;at;! 0;only,t0w0;hen;!ev0;er;! 0;if,t8;e0ut,y the time;cau1f0;ore;se;lt3nd,s 0;far1if,m0soon1t2;uch0; as;hou0;gh\",\n  \"PastTense\": \"true¦be2came,d1had,lied,mea0sa1taken,we0;nt;id;en,gan\",\n  \"Gerund\": \"true¦accord0be0go0result0stain0;ing\",\n  \"Expression\": \"true¦a0Qb0Mco0Ld0He0Ffuck,g09hUjeez,lRmQnOoLpIshHtGuDvoi0Sw6y0;a4e3i1u0;ck,p;kYp0;ee,pee;ah,p,s;!a,h6y;ah5h2o1t0;af,f;rd up,w;e1o0;a,ops;e,w;oo;gh,h0;! 0h,m;huh,oh;here nLsk,ut tut;eesh,hh,it,oo;ff,h1l0ow,sst;ease,z;ew,ooey;h1i,o0uch,w,y;h,o,ps;!h;ah,o0;!pe;eh,mm;ah,m1ol0;!s;ao,fao;aBeAi8o2u0;h,mph,rra0zzB;h,y;ly1o0;r5y8;! 0;c1moCsmok0;es;ow;!p hip hoor0;ay;ck,e,llo,y;ha1i,lleluj0;ah;!ha;ah,ee4o1r0;eat scott,r;l1od0sh; grief,bye;ly;! whiz;e0h,t cetera,ww;k,p;'oh,a0rat,uh;m0ng;mit,n0;!it;ngratulations,wabunga;a2oo1r0ye;avo,r;!ya;h,m; 1h0las,men,rgh,ye;!a,em,oy;la\",\n  \"Negative\": \"true¦n0;ever,o0;n,t\",\n  \"QuestionWord\": \"true¦how3wh0;e1ich,o0y;!m;n,re; come,'s\",\n  \"Reflexive\": \"true¦h4it5my5o1the0your2;ir1m1;ne3ur0;sel0;f,ves;er0im0;self\",\n  \"Plural\": \"true¦ones,records\",\n  \"Unit|Noun\": \"true¦cEfDgChBinchAk9lb,m6newt5oz,p4qt,t1y0;ardEd;able1b0ea1sp;!l,sp;spo1;a,oundAt,x;on9;!b,g,i1l,m,p0;h,s;!les;!b,elvin,g,m;!es;g,z;al,b;eet,oot,t;m,up0;!s\",\n  \"Value\": \"true¦a few\",\n  \"Imperative\": \"true¦come here\",\n  \"PhrasalVerb\": \"true¦0:86;1:7V;2:8J;3:89;4:7O;5:8L;6:7J;7:7U;8:7H;9:8B;A:84;B:8E;C:8C;D:85;E:6O;F:6Q;G:6G;H:88;a8Rb79c68d63e62f50g4Ih3Xiron0j3Tk3Ol36m2Sn2Qo2Op24quietEr1Ps0ItYuWvacuum 1wLyammerAzI;ero Dip JonI;e0k0;by,up;aPeKhJiIor82rit13;mp0n36pe0r8s8;eel Dip 8V;aKiIn2V;gh Ird0;in,up;n Dr I;d2in,oF;it 6Mk8lk Jrm 10sh It7Gv5H;aw3d2o5up;aw3in,oH;rgeAsI;e 1herG;aXeVhTiPoOrKuIypN;ckGrn I;d2in,oFup;aJiIot0y 2Q;ckleEp 8G;ckEdI;e 0P;neEp 31s51;ck KdJe Ighte63me0p o0Kre0;aw3ba4d2in,up;e 6Ny 1;by,oC;ink Irow 71;ba4ov7up;aIe 6Lll5J;m 1r 55;ckAke Jlk I;ov7shit,u5K;aIba4d2in,oFup;ba4ft7p5Pw3;a0Nc0Me0Gh0Ci09l04m03n02o01pWquar4ZtNuMwI;earKiI;ngJtch I;aw3ba4o7V; by;ck 5Lit 1m 1ss0;aOe13iNoLrJuI;c39d2R;aigh25iI;ke 74n3O;p Irm27;by,in,oC;n34r 1tc47;c33mp0nd Irt 1Zve9y 1;ba4d2up;ar31eLiKlJrIurA;ingAuc8;a3Uit 5Y;l1Bn 1;e6Hll0;ber 1rt0und like;ap 5Cow D;ash 64oke0;eep KiIow 6;cIp 1;e 5Q;in,oI;ff,v7;de15gn JngIt 5Yz8; al5Tle0;in,o5up;aKoIu5G;ot Iut0w 71;aw3ba4f3UoC;c2IdeGk5Wve9;e Mll1Ind Lrv8tI; Itl51;d2f5Iin,o5upI;!on;aw3ba4d2in,o2Pup;oHto;al5Pout0rap5P;il9v8;aVeSiRoNuI;b 5Ile0n Istl8;aKba4d2inJoIt3Nu59;ut,v7;!to;c2JrBw3;ll Kot JuI;g35nd9;a2Jf3Co5;arBin,o5;ng 5Pp9;aIel9inGnt0;c5Yd I;o3Dup;c1Vt0;aXeWiUlRoPrMsyc2TuI;ll Kt I;aIba4d2in,oFt3Uup;p3Zw3;ap3Yd2in,o5t3Sup;attleAess JiLoI;p 1;ah21on;iIp 63r4IurEwer 63;nt0;aJuI;gGmp 6;ce u3Jy4X;ck Ig0leAn 6p4V;oFup;el 55ncilG;c4Nir 2Yn0ss KtJy I;ba4oC; d2c2F;aw3ba4in,oF;pIw4I;e4Ht D;arrowEerd0oI;d9teE;aSePiOoKuI;ddl8lI;l 41;c13nkeyKp 6uth9ve I;aId2in,o5up;l47w3; wi44;ss0x 1;asur8lJss I;a1Pup;t 6;ke Jn 6rIs1Yx0;k 6ry9;do,oHsure,up;aXeSiNoIuck0;aLc40g KoIse0;k Ise3Y;aft7ba4d2forw2Uin4Oov7u3R;in,oF;d 6;e 06ghtLnKsJve I;oHup;ten 54;e 1k 1; 1e3Q;ave Kt JvelI; oH;d2go,in,o5up;in,oI;pen,ut;c8p 1sh ItchAugh9y29;in4Ao5;eJick9nock I;d2oHup;eIyG;l 34p I;aw3ba4d2f00in,oFto,up;aKoJuI;ic8mpG;ke3ItE;c3Rzz 1;aXeSiPoMuI;nJrrIsh 6;y 1;kerEt I;arBd2;lIneGrse3B;d Ie 1;ba4d2fast,o06up;de Jt I;ba4on,up;aw3o5;aIlp0;d Kl 2Mr It 1;fIof;rom;in,oYu1N;cLm 1nJve Iz2H;it,to;d Ig 2TkerL;d2in,o5;k 1;aWeQive Oloss 2DoKrJunI; f0Q;ab hold,in3Uow 2O; Iof 2C;aJb1Iit,oIrBt0Su1D;ff,n,v7;bo5ft7hOw3;aw3bId2in,oFrise,up,w3;a4ir2C;ar 6ek0t I;aJb1Cd2in,oIrBup;ff,n,ut,v7;cJhIl2ArBt,w3;ead;ross;d aJnI;g 1;bo5;a0Ce05iWlSoOrKuI;ck Ie2F;arBup;eJighten IownAy 1;aw3oC;eIshe21; 1z8;lKol I;aIwi1U;bo5rB;d 6low 1;aJeIip0;sh0;g 6ke0mIrIttenE;e 34;gPlNnLrJsIzzle0;h 32;e Im 1;aw3ba4up;d0isI;h 1;e Il 1N;aw3fNin,o5;ht ba4ure0;eNnJsI;s 1;cKd I;fIoC;or;e D;d01l 1;cMll Irm0t1A;ap0AbKd2in,oJtIvictim;hrough;ff,ut,v7;a4ehi2E;e I;d2oCup;a0Rdge0nd 0Vy8;oLrI;aJess 6op I;aw3bZin,oH;gAwA; 0Oubl15;a05h02lZoMrIut 1D;ackAeep JoI;ss Dwd0;by,d2in,oIup;n,ut;me LoJuntI; o22;k 6l I;d2oC;aObNforLin,oKtJuI;nd7;ogeth7;n,ut,v7;th,wI;ard;a4y;pIrBw3;art;eaJose I;in,oHup;n 6;eIipG;ck Der I;on,up;lPncel0rMsKtch JveG; in;o1Iup;h Dt I;doubt,oC;ry JvI;e 06;aw3oF;l JmE; d2;aJba4d2oFup;ff,n,ut;rBw3;a0Pe0Hl0Ao01rNuI;bblKckl02il08lk 6ndl02rIst YtJy 18zz9;n 0DsI;t D;e I;ov7;anUeaSiJush I;oCup;ghOng I;aLba4d2fJin,o5uI;nd7p;orI;th;bo5lIrBw3;ong;teI;n 1;k I;d2in,o5up;ch0;arPg 6iNn8oLssKttlJunce Ix D;aw3ba4;e 6; arB;k Dt 1;e 1;l 6;d2up;d 1;aNeed0oIurt0;cKw I;aw3ba4d2o5up;ck;k I;in,oH;ck0nk0st9; oNaLef 1nd I;d2ov7up;er;up;r0t I;d2in,oHup;ff,nI;to;ck Oil0nKrgJsI;h D;ainAe D;g DkA; on;in,o5; o5;aw3d2oHup;ff,ut;ay;ct RdNsk Kuction9; oC;ff;arBo5;ouI;nd;d I;d2oIup;ff,n;own;o5up;ut\",\n  \"Demonym\": \"true¦0:15;1:12;a0Vb0Oc0Dd0Ce08f07g04h02iYjVkTlPmLnIomHpEqatari,rCs7t5u4v3welAz2;am0Gimbabwe0;enezuel0ietnam0I;gAkrai1;aiwTex0hai,rinida0Ju2;ni0Prkmen;a5cotti4e3ingapoOlovak,oma0Spaniard,udRw2y0W;ede,iss;negal0Cr09;sh;mo0uT;o5us0Jw2;and0;a2eru0Fhilippi0Nortugu07uerto r0S;kist3lesti1na2raguay0;ma1;ani;ami00i2orweP;caragu0geri2;an,en;a3ex0Lo2;ngo0Drocc0;cedo1la2;gasy,y07;a4eb9i2;b2thua1;e0Cy0;o,t01;azakh,eny0o2uwaiI;re0;a2orda1;ma0Ap2;anO;celandic,nd4r2sraeli,ta01vo05;a2iB;ni0qi;i0oneU;aiAin2ondur0unO;di;amEe2hanai0reek,uatemal0;or2rm0;gi0;ilipino,ren8;cuadoVgyp4mira3ngli2sto1thiopi0urope0;shm0;ti;ti0;aPominUut3;a9h6o4roat3ub0ze2;ch;!i0;lom2ngol5;bi0;a6i2;le0n2;ese;lifor1m2na3;bo2eroo1;di0;angladeshi,el6o4r3ul2;gaE;azi9it;li2s1;vi0;aru2gi0;si0;fAl7merBngol0r5si0us2;sie,tr2;a2i0;li0;genti2me1;ne;ba1ge2;ri0;ni0;gh0r2;ic0;an\",\n  \"Organization\": \"true¦0:4D;a3Gb2Yc2Ed26e22f1Xg1Ph1Ki1Hj1Fk1Dl18m0Wn0Jo0Gp09qu08r01sTtGuBv8w3xiaomi,y1;amaha,m13ou1w13;gov,tu2Z;a3e1orld trade organizati2S;lls fargo,st1;fie28inghou2I;l1rner br3I;gree37l street journ29m17;an halOeriz2Nisa,o1;dafo2Ol1;kswagMvo;b4kip,n2ps,s1;a tod2Yps;es3Ai1;lev33ted natio30;er,s; mobi2Qaco beQd bNeAgi frida9h3im horto2Ymz,o1witt31;shi3Xy1;ota,s r 00;e 1in lizzy;b3carpen37daily ma31guess w2holli0rolling st1Rs1w2;mashing pumpki2Tuprem0;ho;ea1lack eyed pe3Lyrds;ch bo1tl0;ys;l2n3Ds1xas instrumen1J;co,la m15;efoni0Cus;a7e4ieme2Lnp,o2pice gir5quare04ta1ubaru;rbucks,to2R;ny,undgard1;en;a2x pisto1;ls;g1Nrs;few2Ainsbury2QlesforYmsu22;.e.m.,adiohead,b6e3oyal 1yana30;b1dutch she4;ank;aders dige1Gd 1max,vl1R;bu1c1Zhot chili peppe2Nlobst2C;ll;c,s;ant30izno2I;a5bs,e3fiz28hilip morrCi2r1;emier2Audenti16;nk floyd,zza hut;psi2Btro1uge0A;br2Vchina,n2V;lant2Nn1yp12; 2ason20da2I;ld navy,pec,range juli2xf1;am;us;aAb9e6fl,h5i4o1sa,vid3wa;k2tre dame,vart1;is;ia;ke,ntendo,ss0L;l,s;c,st1Htflix,w1; 1sweek;kids on the block,york09;a,c;nd1Vs2t1;ional aca2Io,we0Q;a,cYd0O;aBcdonaldAe7i5lb,o3tv,y1;spa1;ce;b1Mnsanto,ody blu0t1;ley crue,or0O;crosoft,t1;as,subisM;dica2rcedes benz,talli1;ca;id,re;'s,s;c's milk,tt14z1Z;'ore08a3e1g,ittle caesa1K;novo,x1;is,mark; 1bour party;pres0Bz boy;atv,fc,kk,m1od1J;art;iffy lu0Moy divisi0Gpmorgan1sa;! cha07;bm,hop,n1tv;g,te1;l,rpol;asbro,ewlett pack1Ri3o1sbc,yundai;me dep1n1L;ot;tac1zbollah;hi;eneral 6hq,ithub,l5mb,o2reen d0Lu1;cci,ns n ros0;ldman sachs,o1;dye1g0E;ar;axo smith kli03encoV;electr0Km1;oto0W;a4bi,da,edex,i2leetwood mac,o1rito l0D;rd,xcX;at,nancial1restoY; tim0;cebook,nnie mae;b08sa,u3xxon1; m1m1;ob0H;!rosceptics;aiml0Be6isney,o4u1;nkin donu2po0Xran dur1;an;ts;j,w j1;on0;a,f lepp0Zll,peche mode,r spiegZstiny's chi1;ld;aIbc,hEiCloudflaBnn,o3r1;aigsli5eedence clearwater reviv1ossra06;al;ca c7inba6l4m1o0Bst06;ca2p1;aq;st;dplPg1;ate;se;ola;re;a,sco1tigroup;! systems;ev2i1;ck fil-a,na daily;r1y;on;dbury,pital o1rl's jr;ne;aEbc,eBf9l5mw,ni,o1p,rexiteeU;ei3mbardiIston 1;glo1pizza;be;ng;o2ue c1;roV;ckbuster video,omingda1;le; g1g1;oodriL;cht2e ge0rkshire hathaw1;ay;el;idu,nana republ3s1xt5y5;f,kin robbi1;ns;ic;bYcTdidSerosmith,iRlKmEnheuser-busDol,pple9r6s3utodesk,v2y1;er;is,on;hland1sociated F; o1;il;by4g2m1;co;os; compu2bee1;'s;te1;rs;ch;c,d,erican3t1;!r1;ak; ex1;pre1;ss; 5catel2ta1;ir;!-lu1;ce1;nt;jazeera,qae1;da;g,rbnb;as;/dc,a3er,tivision1;! blizz1;ard;demy of scienc0;es;ba\",\n  \"Possessive\": \"true¦any2its,my,no4o0somet3their1yo0;ur0;!s;o1t0;hing;ne\",\n  \"Noun|Verb\": \"true¦0:8L;1:8H;2:76;3:8S;4:7Z;5:8R;6:8V;7:7W;8:8B;9:7I;A:8Z;a8Db7Kc6Gd5Se5If4Vg4Jh49i42j41k3Zl3Nm3Dn39o35p29ques8Fr1Ls0DtXuVvQwEyDzB;ip,oB;ne,om;awn,e5Hie5A;aKeIhFiDoBre8E;nd0rB;k,ry,sh4M;ck,mp,nBpe,re,sh,tne8X;!d,g;e73iB;p,sB;k,t4;aBed;r,th0;it,rBs5t1ve,x;!ehou2raA;aEiDoB;iBlunte0m7te,w;ce,d;be,ew,s7;cuum,l3J;pBsh0;da5gra5Ilo5E;aOeNhrMiLoJrEuCwiBy53;n,st;nBrn;e,n6M;aDeCiBu8;bu5ck,gg0m,p;at,k,nd;ck,de,in,nsBp,v6I;f0i7K;ll,ne,p,r45ss,t7WuB;ch,r;ck,e,me,p,re;e51ow,u8;ar,e,mp0st,xt;g,lBng4rg6Ms5x;k,ly;a0Hc0Ce09h04i02k00lYmXnWou6YpRtHuDwB;ea73iB;pe,t1;b22it,m,ppCrBspe6;ge,pri2vey;lBo5S;e5Py;aIeHiGoErCuBy4;dy,ff,mb4;a6ZeBi4Vo4Vugg4;am,ss,t1;cking,p,rB;e,m;ck,t1;m,p;ck,in,ke,ll,mp,nd,p4rBte,y;!e,t;aEeed,iDla65oCrBy;ay,e4Fink4u3;ns78t;n,r75te;n,rk;ap,ee1Iow;e3Ui4o4H;eep,iB;ce,p,t;ateboa6LiB;!p;de,gnBp,ze;!al;aEeDiCoBuff4;ck,p,re,t,w;ft,p,v0;d,i3D;pe,re,ve;aCed,nBrv19t;se,t24;l,r1t;aEhedu4oDrB;at1eBo3E;en,w;re,ut;le,n,r23;crifi3il;aWeEiDoCuB;b,in,le,n,s55;a8ck,ll,ot,u5;de,ng,p,s1J;aRcQdo,el,fOgNje6lMmKnJo0ZpHque8sDturn,vBwa5Z;eBi1Q;al,r2;er67oDpe6tCuB;lt,me;!a4G;l64rt;air,eaBly,o4E;l,t;dezvo2Ht;aBedy;ke,rk;ea2i4Y;a5Mist0r4V;act61er1Eorm,uB;nd,se;a2Po5Jru7;d,s5K;c10ge,i2ke,l4PnBp1Ft1F;ge,k;a01eYhWiUlQoLrCuB;mp,n1rcha2sh;aIeGiFoBu40;be,ceDdu3grBje6mi2te8;amBe61;!me;ed,ss;ce,de,nt;sBy;er5Hs;cti3i2;iElCol,p,re,sBw0;e,i54t;iBl;ce,sh;nt,s52;aCe2LuB;g,n9;ce,nBy;!t;ck,lBn0Tpe,t,vot;e,ot;a2oB;ne,tograph;ak,eCn,rBt;fu4Em7;!l,r;cka9iEnDrBss,t1u2;eAtB;!y;!ic;nt,r;bDff0il,oCrButli36;b7d0ieA;ze;je6;a43eDoB;d,tB;e,i3;ed,gle6rd,t;aGeEiDoCuB;rd0;d37ld,nit4Pp,ve;lk,n3Srr4Oss,x;asu3Cn48rBss;ge,it;il,nDp,rk3EsCtB;ch,t0;h,k;da5n0oeuv37;aJeGiEoBump;aCbby,ck,g,oBve;k,t;d,n;cBft,m7nGst;en2k;aCc0Ie1vB;el,y;ch,d,k,p,se;bCcBnd,p,t1un1;e,k;el,o2F;e2NiBno3T;ck,ll,ss;am,o1Gui3;mpGnCr3OssB;ue;cr1Jdex,fluDha4k,se26terBvoi3;e8fa3viB;ew;en3;a6le20;aHeFiEoCuB;g,nt;ld,no22ok,pBr2st,u2;!e;ghlight,ke,re,t;aBd9lp;d,t;ndCrBte;bo3Gm,ne3Xve8;!le;aLeek,loKoIrDuB;arBe3Ui0Un;antee,d;aDiCoBumb4;om,u2O;nd,p;dBsp;e,ua5;of,ssB;ip;ss,w;in,me,ng,s,te,ze;aWeTiOlLoHrDuB;el,nBss,zz;c2Sd;aCoBy;st,wn;cBgme,me;tu1S;cDg,il,ld,ol,rB;ce,e1XmB;!at;us;aCe1Tip,oBy;at,ck,od,w;g,re,sh,vo15;eEgDlCnBre,sh,t,x;an3i1P;e,m,t0;ht,u1H;ld;aCeBn3;d,l;r,tu1D;ce,il,ll,rm,vo2G;cho,d9nJsHxDyeB;!baB;ll;cDerci2hib7pBtra6;eriBo0O;en3meA;el,han9;caBtima5;pe;count0d,gine0vy;aWeQiKoHrCuBye;b,el,mp,pli2H;aEeDiCoB;ne,p;ft,nk,p,ve;am,ss;ft,in;cCd9ubt,wnloB;ad;k,u07;p,sDt1vB;e,iBor3;de;char9liCpB;at1lay,u5;ke;al,ba5cEfeDlCma13pos7siBtail;gn,re;ay,ega5;at,ct;liZrB;ea2;b,ma9n3rBte;e,t;a09ent08h01irc4lYoHrDuB;be,e,rBt;e,l,ve;aDeCoBu0Gy;p,ss,wd;d7ep;ft,sh;a1de,in,lPmJnDok,py,re,st,uBv0;gh,nBp4;sXt;ceEdu6fli6glomeFsDtBveK;a6rB;a8ol;eAtru6;ntBrn;ra5;biFfoEmDpB;leBou0Eromi2;meA;a0CeAit,u5;rt;ne;lap2oB;r,ur;aCiB;ck,p;im,w;aCeBip;at,ck,er;iEllen9mpi0HnCrBuffe0O;ge,m,t;ge,nB;el;n,r;er,re;ke,ll,mp,noe,pDrTsCt1u2ve;se;h,t;!tuB;re;aYeViTlQoMrEuBypa0U;bb4ck4dgCff0lBrn,st,zz;ly;et;anHeFiDoadCuB;sh;ca8;be,d9;ge;aBed;ch,k;ch,d;aDmb,nCoBss,tt4x,ycott;k,st,t;d,e;rd,st;aCeBitz,oSur;nd;me;as,d,ke,nd,tB;ch,e;aCnef7t;it;r,t;il,lan3nErgaDsCtt4;le;e,h;in;!d,g,k;c03dVffilUge,iTlt0nQppNrJsGttEucCwaB;rd;tiB;on;aBempt;ck;k,sB;i8ocN;st;chCmoB;ur;!iB;ve;eCroa1;ch;al;chBg0sw0;or;er;d,m,r;ia5;dFvB;an3oB;ca5;te;ce;i6reB;ss;ct;cBhe,t;eDoB;rd,uA;nt;nt,ss\",\n  \"Actor\": \"true¦aJbGcFdCfAgardenIh9instructPjournalLlawyIm8nurse,opeOp5r3s1t0;echnCherapK;ailNcientJoldiGu0;pervKrgeon;e0oofE;ceptionGsearC;hotographClumbColi1r0sychologF;actitionBogrammB;cem6t5;echanic,inist9us4;airdress8ousekeep8;arm7ire0;fight6m2;eputy,iet0;ici0;an;arpent2lerk;ricklay1ut0;ch0;er;ccoun6d2ge7r0ssis6ttenda7;chitect,t0;ist;minist1v0;is1;rat0;or;ta0;nt\",\n  \"Honorific|Noun\": \"true¦aRbNcGdFexcellency,field marEjudge,king,lCm9officOp5queen,r2s0taoiseach,vice4;e0ultJ;cretary,rgeaB;abbi,e0;ar0verend; adN;astGr0;eside6i0ofessF;me ministGnce0;!ss;a1is0;sus,tD;gistrate,r2yA;ady,ieutena0ord;nt;shE;oct6utcheA;aptain,hance4o0;lonel,mmand6n0rporBunci3;gress0stable;m0wom0;an;ll0;or;aron1rigadi0;er;!e0;ss;d0yatullah;mir0;al\",\n  \"Pronoun\": \"true¦'em,elle,h3i2me,she4th0us,we,you;e0ou;m,y;!l,t;e0im;!'s\",\n  \"Singular\": \"true¦0:4P;1:5H;2:5G;3:4V;4:53;5:50;6:4Z;7:5A;8:4Q;a4Zb4Ec3Gd2Ze2Sf2Ig27h1Uin1Qjel4k1Ol1Km1An17o13p0Mqu0Lr0CsTtJuGvCw9x 59;a9ha3Iom2E;f0i53t0Dy9;! arou4M;arn4NeAo9;cabula48l5B;getPr9;di6t1K;nc3Bp2WrAs 9;do3Zs5E;bani2in1; rex,aHeGhi8iEoDrBuAv9;! show;m2Ln3rntIto15;agedy,ib9o4C;e,u2T;p3rq3K;c,de,er,me9; off,tD;am,mp3G;ct3le5x return;aQcOeNhMi2kKoJtEuBweethe1Ky9;ll9n2Ast4Y;ab2W;bAnri1Cper bowl,r9;f0roga2;st3Ltot1;aCepBipe3Yo1DrAudent9;! lo1N;ang0i8;fa1Imo1I;ff0t37;loi49meo18;elet15i9;er,ll,rm3T;a22or4H;ab0Wcurity gu2K;e5ho9;l37ol;la3Andwi0J;av0YeChetor3iAo9;de5om;te,v9;erb0P;bCcBf9publ3r0Qspi2;er9orm0;e5r1;it1ord label;a2u4A;estion mark,ot2F;aMeKhJiHlFort1rAu9yram1F;ddi8ppy,rpo0L;eCie3Po9;bl43s9;pe6t9;a2itu2;diction,mi0Groga7ss relea0G;a9ebisci2;q2Ete,y0;cn3e9g;!r;armaci3GotocoH;dest1ncil,r9t1;cen3Psp3Q;nAr2Zte9;!nt;el2Zop4;bj3McApia2rde1thers,ve9wn0;n,rview;cu9e0I;pi0;aAit2Cot9umb0;a2Dhi8;n2Hrra7;aFeEiDoAu9é0J;m0Vr1;mAnopo4pSrni8sq1Wt9u19;h0i3E;!my;li11n0C;d3nu,t1;mm1nAte9yf4;ri1;!d17;aurea2iBos0u9;ddi2n9;ch;ght bulb,p0E;ey9ittM;!no2;cBdices,itia7se6teAvert9;eb1S;l0Pnt;en7ide5;aKeaFighDo9uman right,ygie15;le,meAsp1Ptb9;ed;! r9;un; scho17ri9;se;dAv9;en; stApho9;ne;art;m,ndful,ze;aHeFirl1PlaQoErAu9;l4y;an9enadi0id;a1Bd9; slam,fa9mo9;th0;d,lf0;lat0Hntlem9;an;df4r9;l3n1I;aHeGiElDol4rAun9;er1;ee market,iAon9;ti0;e1Bga2;ame,ow0u2;nan9ref4;ci0;lla,t19;br3mi4n0Zth0;conoEffDgg,lecto0RnCs23th3venBxAyel9;id;ampXempl0Nte5;i8t;er1Q;e6i1P;my;aNeJiFoCrBu9;de,mp tru9;ck;agonf4i0;cAg1Ji4or,ssi0wn9;si0P;to0EumenB;aBgniAnn0s9vide0R;conte5incen7tri6;ta0D;le6;aBc1fAni1te9;c7rre5;ault 07err1;th;d9rZ;!dy;aYeVhOiNlLoDr9;edit cBit3uc9;ib9;le;ard;efficFke,lDmmuniqNnBpi0rr1t13u9yo2;ri0s9;in;ne6s9;ervatoWuI;ic,lRum9;ni0M;ie5;er9ie5;gy,ic;ty,vil wM;aDeqCocoBr9;istmas car9ysanthemum;ol;la2;ue;ndeli0racter9;ist3;iAllEr9;e1tifica2;li8;hi0naFpErCshi0t9ucus;erpi9hedr1;ll9;ar;bohyd9ri0;ra2;it1;ry;aPeOiMlemLoHrDu9;ddhiYnBr9tterf4;glar9i1;!y;ny;eakBiAo9;!th0;de;faRthroC;dy,g,roBwl,y9;!frie9;nd;ugh;ish;cyc9oH;liK;an,l4;nki8r9;!ri0;er;ng;cUdOllMnJppeti2rIsFtBu9;nt,to9;psy;hAt3;ic;ie9le2;st;ce5pe6;ct;nt;ray;ecAoma4tiA;ly;do2;er9y;gy; hominDjAvan9;tage;ec7;ti9;ve;em;cru1eAqui9;tt1;ta2;te;al\",\n  \"Preposition\": \"true¦-,aNbKcJdIexcept,fGinFmid,notwithstandiToDpUqua,sCt7u4v2w0;/o,herePith0;! whFin,oT;ersus,i0;a,s-a-vis;n1p0;!on;like,til;h1ill,oward0;!s;an,r0;ough0u;!oJ;ans,ince,o that,uch D;f0n1ut;!f;!to;or,r0;om;espite,own,u3;hez,irca;ar1e0oAy;sides,tween;ri6;bo7cross,ft6lo5m3propos,round,s1t0;!op;! long 0;as;id0ong0;!st;ng;er;ut\",\n  \"SportsTeam\": \"true¦0:1A;1:1H;2:1G;a1Eb16c0Td0Kfc dallas,g0Ihouston 0Hindiana0Gjacksonville jagua0k0El0Bm01newToQpJqueens parkIreal salt lake,sAt5utah jazz,vancouver whitecaps,w3yW;ashington 3est ham0Rh10;natio1Oredski2wizar0W;ampa bay 6e5o3;ronto 3ttenham hotspur;blue ja0Mrapto0;nnessee tita2xasC;buccanee0ra0K;a7eattle 5heffield0Kporting kansas0Wt3;. louis 3oke0V;c1Frams;marine0s3;eah15ounG;cramento Rn 3;antonio spu0diego 3francisco gJjose earthquak1;char08paA; ran07;a8h5ittsburgh 4ortland t3;imbe0rail blaze0;pirat1steele0;il3oenix su2;adelphia 3li1;eagl1philNunE;dr1;akland 3klahoma city thunder,rlando magic;athle0Mrai3;de0; 3castle01;england 7orleans 6york 3;city fc,g4je0FknXme0Fred bul0Yy3;anke1;ian0D;pelica2sain0C;patrio0Brevolut3;ion;anchester Be9i3ontreal impact;ami 7lwaukee b6nnesota 3;t4u0Fvi3;kings;imberwolv1wi2;rewe0uc0K;dolphi2heat,marli2;mphis grizz3ts;li1;cXu08;a4eicesterVos angeles 3;clippe0dodDla9; galaxy,ke0;ansas city 3nE;chiefs,roya0E; pace0polis colU;astr06dynamo,rockeTtexa2;olden state warrio0reen bay pac3;ke0;.c.Aallas 7e3i05od5;nver 5troit 3;lio2pisto2ti3;ge0;broncZnuggeM;cowbo4maver3;ic00;ys; uQ;arCelKh8incinnati 6leveland 5ol3;orado r3umbus crew sc;api5ocki1;brow2cavalie0india2;bengaWre3;ds;arlotte horAicago 3;b4cubs,fire,wh3;iteB;ea0ulR;diff3olina panthe0; c3;ity;altimore 9lackburn rove0oston 5rooklyn 3uffalo bilN;ne3;ts;cel4red3; sox;tics;rs;oriol1rave2;rizona Ast8tlanta 3;brav1falco2h4u3;nited;aw9;ns;es;on villa,r3;os;c5di3;amondbac3;ks;ardi3;na3;ls\",\n  \"Uncountable\": \"true¦0:2U;1:29;a2Hb28c1Yd1Pe1Ff19g12h0Vi0Pj0Ok0Nl0Im08n06o05pZrUsIt8v6w2you guys;a4i3oo2;d,l;ldlife,ne;rm7t1;ernacul1Vi2;neg1Uol1Ctae;eAh8oothpas1Or3un2yranny;a,gst1W;aff2Aea18o3ue nor2;th;oZu2;ble2se1Gt;!shoot1Y;er2und1;e,mod2C;a,nnis;aBcene0HeAh9il8ki7o6p5t3u2weepstak1L;g1Inshi12shi;ati01e2;am,el;ace24eci1H;ap,cc1;n,ttl1F;k,v1;eep,ingl1D;na15ri1C;d0Mfe1Wl2nd,t0A;m1Lt;a5e3ic2;e,ke0W;c2laxa0Tsearch;ogni0Srea0S;bi15in;aVe6hys0last1Lo4re2;amble,mis13s2ten1L;en1Ksu0B;l2rk;it0yB;a1Ptr05;bstetr0vercrowd17xyg10;a2ews;il polVtional securi1H;a9e7o4u2;m2s1B;ps;n2o1A;ey,o2;gamy;a2chan0rchandi17tallurgy;sl0Ot;chine2themat0; learn0Vry;aught1e5i4ogi3u2;ck,g0X;c,st0;ce,ghtn0Rngui1AteraQv1;ath1isuQss;ara09indergart0Inowled0U;azz,ewelB;ce,gnor6mp4n2;formaZter2;net,sta05;a2ort3rov;tiQ;an0Z;a5eHisto4o2ung1;ckey,mework,ne2rserad6spitali0S;s0Ry;ry;ir,libZppiFs2;h2te;ish;ene5l4o3r2um,ymna0T;aCeed;lf,re;ut00yce0E; 2t0;edit05po2;ol;aNicGlour,o4urni2;tu2;re;od,rgive2uri1wl;ne2;ss;conom0ducaAlectr9n7quip8th0very5x2;ist3per2;ti04;en0B;body,o2thT;ne;joy2tertain2;ment;ici01on0;tiQ;e8i5o3raugh2ynasZ;ts;pe,wnstai2;rs;abetAs2;honTrepu2;te;b2miP;ut;aAelci9h6iv0l4o2urrency;al,ld w2nfusiFral,ttFusco8;ar;ass0oth2;es;aos,e3ick2;en;eGw7;us;d,rI;a7eef,i5lood,read,u2;nt3tt1;er;ing;lliarDs2;on;g2ss;ga2;ge;cDdviCeroAir9m5ni4ppeal court,rithmet3spi2thlet0;rin;ic;se;en4n2;es2;ty;ds;craft;b0d2naut0;ynam0;ce;id,ou2;st0;ics\",\n  \"Unit\": \"true¦a09b06cZdYexXfTgRhePin00joule0DkMlJmDnan0AoCp9quart0Dsq ft,t7volts,w6y2ze3°1µ0;g,s;c,f,n;dXear1o0;ttT; 0s 0;old;att06b;erPon0;!ne04;ascals,e1i0;cZnt02;rcent,tL;hms,uI;/s,e4i0m²,²,³;/h,cro2l0;e0liM;!²;grNsT;gEtL;it1u0;menSx;erRreR;b5elvins,ilo1m0notQ;/h,ph,²;!byIgrGmEs;ct0rtzN;aLogrE;allonLb0ig5rD;ps;a2emtGl0t6; oz,uid ou0;nceH;hrenheit,radG;aby9;eci3m1;aratDe1m0oulombD;²,³;lsius,nti0;gr2lit1m0;et0;er8;am7;b1y0;te5;l,ps;c2tt0;os0;econd1;re0;!s\",\n  \"Noun|Gerund\": \"true¦0:25;1:24;2:1V;3:1H;4:1X;5:1N;a24b1Nc1Bd16en14f0Yg0Wh0Ti0Rjog1Zk0Pl0Lm0In0Go0Cp05ques08rWsGtBunderAvolunt15w6yDzo2;a8ed5i3or7r6;ap1Nest1Bi1;ki0r1N;i1r2s1Ttc1T;st1Mta4;al4e9hin4i8ra6y1J;c4di0i2v6;el15;mi0p1G;a1Xs1;ai12cIeHhFin1OkatDlZmo4nowCpeBt9u7w6;ea3im1T;f02r6;fi0vi0J;a1Kretc1Iu6;d1AfJ;l0Wn5;b7i0;eb6i0;oar5;ip14o6;rte2u1;a1r0At1;h7o3re6;a1Ge2;edu0Noo0N;aDe9i5o7u6;li0n2;o6wi0;fi0;a8c7hear1Cnde3por1struct6;r1Au3;or5yc0G;di0so2;p0Qti0;aBeacekAla9o7r6ublis0X;a0Peten5in1oces16;iso2si6;tio2;n2yi0;ee0K;cka0Tin1rt0K;f8pe7rgani6vula1;si0zi0;ni0ra1;fe3;e6ur0W;gotia1twor4;a7e6i2onito3;e1ssa0L;nufactu3rke1;a8ea7i6od0Jyi0;cen0Qf1s1;r2si0;n5ug0E;i6n0J;c4lS;ci0magi2n6ro2;nova1terac1;andPea1i7o6un1;l5wO;ki0ri0;athe3rie6ui5;vi0;ar0CenHi8l7or6ros1un5;ecas1mat1;ir1oo5;l7n6;anDdi0;i0li0;di0gin6;ee3;a8eba1irec1oub1r6umO;awi0es05i6;n4vi0;n6ti0;ci0;aFelebra1hDlBo8r6ur7;aw6os00;li0;a7di0lo3mplai2n6o4pi0ve3;duc1sul1;cMti0;apDea3imIo6ubI;ni0tK;a6ee3;n1t1;m9s1te3;ri0;aJeGitElDoBr9u6;il5ll7r6;pi0;yi0;an5;di0;a1m6o4;bi0;esHoa1;c6i0;hi0;gin2lon6t1;gi0;ni0;bys7c4ki0;ki0;it1;c9dverti8gi0rg7ssu6;mi0;ui0;si0;coun1ti0;ti0;ng\",\n  \"ProperNoun\": \"true¦barbie,c4diego,e3f2iron maiden,kirby,m0nis,riel;ercedes,i0;ckey,ssy;inn,lorence,ranco;lmo,uro;atalina,hristi\",\n  \"Ordinal\": \"true¦eBf7nin5s3t0zeroE;enDhir1we0;lfCn7;d,t3;e0ixt8;cond,vent7;et0th;e6ie7;i2o0;r0urt3;tie4;ft1rst;ight0lev1;e0h,ie1;en0;th\",\n  \"Cardinal\": \"true¦bEeBf5mEnine7one,s4t0zero;en,h2rDw0;e0o;lve,n5;irt6ousands,ree;even2ix2;i3o0;r1ur0;!t2;ty;ft0ve;e2y;ight0lev1;!e0y;en;illions\",\n  \"Multiple\": \"true¦b3hundred,m3qu2se1t0;housand,r2;pt1xt1;adr0int0;illion\",\n  \"City\": \"true¦0:6Y;1:5Y;2:6D;3:5R;4:5O;a65b50c4Fd45e41f3Tg3Eh36i2Xj2Sk2Bl20m1In18o15p0Tq0Rr0Ks01tPuOvLwDxiBy9z5;a7h5i4Juri4L;a5e5ongsh0;ng3E;greb,nzib5D;ang2e5okoha3Punfu;katerin3Erev0;a5n0N;m5En;arsBeAi6roclBu5;h0xi,zh5M;c7n5;d5nipeg,terth4;hoek,s1I;hi5Wkl37;l60xford;aw;a6ern2i5ladivost5Jolgogr6F;en3lni6M;lenc4Vncouv3Rr3ughn;lan bat1Brumqi,trecht;aDbilisi,eCheBi9o8r7u5;l1Zn60r5;in,ku;ipoli,ondh5Z;kyo,m2Zron1OulouS;an5jua3l2Umisoa69ra3;j4Ushui; hag60ssaloni2I;gucigal26hr0l av1U;briz,i6llinn,mpe57ng5rtu,shk2S;i3Fsh0;an,chu1n0p2Fyu0;aEeDh8kopje,owe1Gt7u5;ra5zh4Y;ba0Ht;aten is56ockholm,rasbou65uttga2W;an8e6i5;jiazhua1llo1m5Vy0;f51n5;ya1zh4I;gh3Lt4R;att46o1Wv45;cramen16int ClBn5o paulo,ppo3Srajevo; 7aa,t5;a 5o domin3F;a3fe,m1M;antonBdie3Dfrancisco,j5ped3Osalvad0K;o5u0;se;em,z26;lou57peters25;aAe9i7o5;me,sar5t58;io;ga,o5yadh;! de janei3F;cife,ykjavik;b4Sip4lei2Inc2Pwalpindi;ingdao,u5;ez2i0P;aEeDhCiBo8r7u6yong5;ya1;eb56ya1;ag50etor3M;rt5zn0; 5la4Do;au prin0Melizabe25sa04;ls3Qrae58tts27;iladelph3Hnom pe1Boenix;r22tah tik3F;lerZnaji,r4Nt5;na,r33;ak45des0Km1Nr6s5ttawa;a3Wlo;an,d06;a7ew5ing2Govosibir1Kyc; 5cast37;del25orlea45taip15;g8iro4Un5pl2Xshv34v0;ch6ji1t5;es,o1;a1o1;a6o5p4;ya;no,sa0X;aFeCi9o6u5;mb2Bni27sc3Z;gadishu,nt6s5;c14ul;evideo,re30;ami,l6n15s5;kolc,sissauga;an,waukee;cca,d5lbour2Nmph40ndo1D;an,ell5i3;in,ín;cau,drAkass2Sl9n8r5shh47;aca6ib5rakesh,se2L;or;i1Sy;a4BchEdal0Zi44;mo;id;aCeiAi8o6u5vRy2;anLckn0Odhia3;n5s angel26;d2g bea1N;brev2Be3Jma5nz,sb2verpo28;!ss27;c5pzig;est17; p6g5ho2Xn0Dusan25;os;az,la34;aHharFiClaipeBo9rak0Eu7y5;iv,o5;to;ala lump4n5;mi1sh0;hi0Ilka2Ypavog4si5wlo2;ce;da;ev,n5rkuk;gst2sha5;sa;k5toum;iv;bIdu3llakuric0Rmpa3Dn6ohsiu1ra5un1Jwaguc0R;c0Qj;d5o,p4;ah1Uy;a7e6i5ohannesW;l1Wn0;dd34rusalem;ip4k5;ar2I;bad0mph1PnBrkutVs8taYz5̇zm7;m6tapala5;pa;ir;fah0l6tanb5;ul;am2Wi2H;che2d5;ianap2Ko20;aAe7o5yder2T; chi mi5ms,nolulu;nh;f6lsin5rakli2;ki;ei;ifa,lifax,mCn5rb1Dva3;g8nov01oi;aFdanEenDhCiPlasgBo9raz,u5;a5jr23;dal6ng5yaquil;zh1J;aja2Lupe;ld coa1Athen5;bu2P;ow;ent;e0Uoa;sk;lw7n5za;dhi5gt1E;nag0U;ay;aisal26es,o8r6ukuya5;ma;ankfu5esno;rt;rt5sh0; wor6ale5;za;th;d5indhov0Pl paso;in5mont2;bur5;gh;aBe8ha0Xisp4o7resd0Lu5;b5esseldorf,rb0shanbe;ai,l0I;ha,nggu0rtmu13;hradSl6nv5troit;er;hi;donghIe6k09l5masc1Wr es sala1IugavpiY;i0lU;gu,je2;aJebu,hAleve0Vo5raio02uriti1N;lo7n6penhag0Ar5;do1Lk;akKst0V;gUm5;bo;aBen8i6ongqi1ristchur5;ch;ang m7ca5ttago1;go;g6n5;ai;du,zho1;ng5ttogr12;ch8sha,zh07;i9lga8mayenJn6pe town,r5;acCdiff;ber17c5;un;ry;ro;aVeNhKirmingh0UoJr9u5;chareSdapeSenos air7r5s0tu0;g5sa;as;es;a9is6usse5;ls;ba6t5;ol;ne;sil8tisla7zzav5;il5;le;va;ia;goZst2;op6ubaneshw5;ar;al;iBl9ng8r5;g6l5n;in;en;aluru,hazi;fa5grade,o horizonte;st;ji1rut;ghd09kGnAot9r7s6yan n4;ur;el,r05;celo3ranquil07;na;ou;du1g6ja lu5;ka;alo6k5;ok;re;ng;ers5u;field;a02bZccYddis abaXgartaWhmedUizawl,lQmNnHqaXrEsBt7uck5;la5;nd;he7l5;an5;ta;ns;h5unci2;dod,gab5;at;li5;ngt2;on;a6chora5kaLtwerp;ge;h7p5;ol5;is;eim;aravati,m0s5;terd5;am; 6buquerq5eppo,giers,maty;ue;basrah al qadim5mawsil al jadid5;ah;ab5;ad;la;ba;ra;idj0u dha5;bi;an;lbo6rh5;us;rg\",\n  \"Region\": \"true¦0:2N;1:2T;2:2K;a2Qb2Dc1Zd1Ues1Tf1Rg1Lh1Hi1Cj18k13l10m0Pn07o05pZqWrTsKtFuCv9w5y3zacatec2U;akut0o0Du3;cat2k07;a4est 3isconsin,yomi1M;bengal,vi6;rwick2Bshington3;! dc;er4i3;rgin0;acruz,mont;dmurt0t3;ah,tar3; 2La0X;a5e4laxca1Rripu1Xu3;scaDva;langa1nnessee,x2F;bas0Vm3smNtar25;aulip2Dil nadu;a8i6o4taf11u3ylh1F;ffYrr04s1A;me1Cno1Quth 3;cVdU;ber0c3kkim,naloa;hu2ily;n4skatchew2xo3;ny; luis potosi,ta catari1;a3hode9;j3ngp07;asth2shahi;ingh25u3;e3intana roo;bec,en5reta0R;ara7e5rince edward3unjab; i3;sl0B;i,nnsylv3rnambu0B;an0;!na;axa0Ydisha,h3klaho20ntar3reg6ss0Bx0G;io;aJeDo5u3;evo le3nav0W;on;r3tt17va scot0;f8mandy,th3; 3ampton16;c5d4yo3;rk14;ako1N;aroli1;olk;bras1Mva0Cw3; 4foundland3;! and labrador;brunswick,hamp0Xjers4mexiSyork3;! state;ey;galOyarit;a9eghala0Mi5o3;nta1r3;dov0elos;ch5dlanCn4ss3zor11;issippi,ouri;as geraOneso18;ig2oac2;dhy12harasht0Gine,ni4r3ssachusetts;anhao,i el,ylF;p3toba;ur;anca0Ie3incoln0IouisH;e3iR;ds;a5e4h3omi;aka06ul1;ntucky,ra01;bardino,lmyk0ns0Qr3;achay,el0nata0X;alis5har3iangxi;kh3;and;co;daho,llino6n3owa;d4gush3;et0;ia1;is;a5ert4i3un2;dalFm0D;fordZ;mpYrya1waii;ansu,eorg0lou7oa,u3;an4erre3izhou,jarat;ro;ajuato,gdo3;ng;cesterS;lori3uji2;da;sex;ageTe6o4uran3;go;rs3;et;lawaLrbyK;aEeaDh8o3rimea ,umbr0;ahui6l5nnectic4rsi3ventry;ca;ut;i02orado;la;e4hattisgarh,i3uvash0;apQhuahua;chn4rke3;ss0;ya;ra;lFm3;bridge6peche;a8ihar,r7u3;ck3ryat0;ingham3;shi3;re;emen,itish columb0;h0ja cal7lk6s3v6;hkorto3que;st2;an;ar0;iforn0;ia;dygea,guascalientes,lAndhr8r4ss3;am;izo1kans4un3;achal 6;as;na;a 3;pradesh;a5ber4t3;ai;ta;ba4s3;ka;ma\",\n  \"Country\": \"true¦0:39;1:2M;a2Xb2Ec22d1Ye1Sf1Mg1Ch1Ai14j12k0Zl0Um0Gn05om3DpZqat1KrXsKtCu6v4wal3yemTz2;a25imbabwe;es,lis and futu2Y;a2enezue32ietnam;nuatu,tican city;.5gTkraiZnited 3ruXs2zbeE;a,sr;arab emirat0Kkingdom,states2;! of am2Y;k.,s.2; 28a.;a7haBimor-les0Bo6rinidad4u2;nis0rk2valu;ey,me2Ys and caic1U; and 2-2;toba1K;go,kel0Znga;iw2Wji2nz2S;ki2U;aCcotl1eBi8lov7o5pa2Cri lanka,u4w2yr0;az2ed9itzerl1;il1;d2Rriname;lomon1Wmal0uth 2;afr2JkLsud2P;ak0en0;erra leoEn2;gapo1Xt maart2;en;negKrb0ychellY;int 2moa,n marino,udi arab0;hele25luc0mart20;epublic of ir0Dom2Duss0w2;an26;a3eHhilippinTitcairn1Lo2uerto riM;l1rtugE;ki2Cl3nama,pua new0Ura2;gu6;au,esti2;ne;aAe8i6or2;folk1Hth3w2;ay; k2ern mariana1C;or0N;caragua,ger2ue;!ia;p2ther19w zeal1;al;mib0u2;ru;a6exi5icro0Ao2yanm05;ldova,n2roc4zamb9;a3gol0t2;enegro,serrat;co;c9dagasc00l6r4urit3yot2;te;an0i15;shall0Wtin2;ique;a3div2i,ta;es;wi,ys0;ao,ed01;a5e4i2uxembourg;b2echtenste11thu1F;er0ya;ban0Hsotho;os,tv0;azakh1Ee3iriba03o2uwait,yrgyz1E;rWsovo;eling0Jnya;a2erF;ma15p1B;c6nd5r3s2taly,vory coast;le of m19rael;a2el1;n,q;ia,oI;el1;aiSon2ungary;dur0Mg kong;aAermany,ha0Pibralt9re7u2;a5ern4inea2ya0O;!-biss2;au;sey;deloupe,m,tema0P;e2na0M;ce,nl1;ar;bTmb0;a6i5r2;ance,ench 2;guia0Dpoly2;nes0;ji,nl1;lklandTroeT;ast tim6cu5gypt,l salv5ngl1quatorial3ritr4st2thiop0;on0; guin2;ea;ad2;or;enmark,jibou4ominica3r con2;go;!n B;ti;aAentral african 9h7o4roat0u3yprQzech2; 8ia;ba,racao;c3lo2morPngo-brazzaville,okFsta r03te d'ivoiK;mb0;osD;i2ristmasF;le,na;republic;m2naTpe verde,yman9;bod0ero2;on;aFeChut00o8r4u2;lgar0r2;kina faso,ma,undi;azil,itish 2unei;virgin2; is2;lands;liv0nai4snia and herzegoviGtswaGuvet2; isl1;and;re;l2n7rmuF;ar2gium,ize;us;h3ngladesh,rbad2;os;am3ra2;in;as;fghaFlCmAn5r3ustr2zerbaijH;al0ia;genti2men0uba;na;dorra,g4t2;arct6igua and barbu2;da;o2uil2;la;er2;ica;b2ger0;an0;ia;ni2;st2;an\",\n  \"Place\": \"true¦aVbTcPdOeNfMgIhHiFjfk,kDlBm9new eng8or7p5s4t2u1vostok,wake is8y0;akutDyz;laanbaatar,pP;ahiti,he 0;bronx,hamptons;akhalGfo,oho,under3yd;acifUek,h0itcairn;l,x;ange county,d;land;a0co,idHuc;gadRlibu,nhattR;a0gw,hr;s,x;osrae,rasnoyar0ul;sk;ax,cn,nd0st;ianKochina;arlem,kg,nd,ovd;ay village,re0;at 0enwich;brita0lakB;in;co,ra;urope,verglad8;en,fw,own2xb;dg,gk,h0lt;a1ina0uuk;town;morro,tham;cn,e0kk,rooklyn;l air,verly hills;frica,m7n2r3sia,tl1zor0;es;!ant2;adyr,tar0;ct0;ic0; oce0;an;ericas,s\",\n  \"WeekDay\": \"true¦fri2mon2s1t0wednesd3;hurs1ues1;aturd1und1;!d0;ay0;!s\",\n  \"Month\": \"true¦dec0february,july,nov0octo1sept0;em0;ber\",\n  \"Date\": \"true¦ago,t0week end,yesterd2;mr2o0;d0morrow;ay;!w\",\n  \"Duration\": \"true¦century,dAh9m6q5se4w1y0;ear,r;eek1k0;!s;!e4;ason,c;tr,uarter;i0onth;lliseco0nute;nd;our,r;ay,ecade\",\n  \"FemaleName\": \"true¦0:IS;1:IW;2:I5;3:I4;4:IM;5:I9;6:JD;7:GQ;8:J9;9:J5;A:HD;B:HN;C:IE;D:J2;E:II;F:H2;G:C4;H:HP;aGIbFDcDJdCSeBIfB0gA9h9Pi9Cj8Bk7Bl5Vm45n3Jo3Fp33qu32r2As15t0Eu0Cv03wWxiUyPzI;aMeJineb,oIsof2;e3Qf2la,ra;h3iLlJna,ynI;ab,ep;da,ma;da,h3iIra;nab;aLeKi0FolB3uJvI;etAonDH;i0na;le0sen2;el,gm3Fn,rGAs8S;aoIme0nyi;m5XyAA;aNendDRhiD8iI;dele9lKnI;if44niIo0;e,f43;a,helmi0lIma;a,ow;ka0nB;aNeKiIusa5;ck81ktoriBGlAole7viI;anGenIQ;da,lA6rIs0;a,nIoniGW;a,iFI;leInesGW;nI8rI;i1y;g9rIxGX;su5te;aZeVhSiOoMrJuIy3;i,la;acIQiIu0L;c2na,sI;hGta;nIr0H;iGya;aKffaEHnIs6;a,gtiI;ng;!nFIra;aJeIomasi0;a,l9Mo87res1;l2ndolwethu;g9Do85rJssI;!a,ie;eIi,ri8;sa,za;bPlNmLnJrIs6tia0wa0;a60yn;iIya;a,ka,s6;arGe3iIm75ra;!ka;a,iI;a,t6;at6it6;a0Gcarlett,e0ChYiUkye,neza0oStOuJyI;bI3lvi1;ha,mayI6ni7sJzI;an3KetAie,y;anIi8;!a,e,nI;aCe;aKeI;fIl5DphI;an4;cHRr5;b2fiA4m0MnIphi1;d3ia,ja,ya;er3lKmon1nJobh8NtI;a,i;dy;lEIv2;aNeJirIo0risF0y5;a,lDE;ba,e0i5lKrI;iIr6Gyl;!d8Ffa;ia,lDQ;hd,iNki3nKrJu0w0yI;la,ma,na;i,le9on,ron;aJda,ia,nIon;a,on;!ya;k6mI;!aa;lKrJtaye7ZvI;da,inj;e0ife;en1i0ma;anA1bMd3Kh1PiBkLlKmJnd3rIs6vannaC;aCi0;ant6i3;lDFma,ome;ee0in8Pu3;in1ri0;a05e00hYiVoIuthDD;bTcSghRl8HnQsKwJxI;anAVie,y;an,e0;aJeIie,lD; merBJann8ll1marD7t7;!lInn1;iIyn;e,nI;a,dG;da,i,na;ayy8C;hel63io;bDGer7yn;a,cJkImas,nGta,ya;ki,o;helHki;ea,iannG8oI;da,n1L;an0bKemGgi0iJnIta,y0;a87ee;han82na;a,eI;cE6kaC;bi0chJe,i0mo0nIquEGy0;di,ia;aEEelIiB;!e,le;een4ia0;aOeNhLipaluk,oKrIute67;iIudenCM;scil3LyamvaB;lly,rt2;ilome0oebe,ylI;is,lis;ggy,nelope,r5t3;ige,m0UnLo5rvaDCtJulI;a,etAin1;ricIt4T;a,e,ia;do3i07;ctav2dJfCVis6lIphCVumBZyunbileg;a,ga,iv2;eIvAA;l2tA;aXeViNoJurIy5;!ay,ul;a,eKor,rJuI;f,r;aCeEma;ll1mi;aOcMhariBKkLlaKna,sIta,vi;anIha;ur;!y;a,iDOki;hoHk9TolI;a,eDF;!mh;hir,lIna,risFsreE;!a,lBP;asuMdLh2i6DnKomi8rgEKtIzanin zah3;aIhal4;li1s6;cy,etA;e9iEQ;nngu30;a0Ackenz4e02iNoKrignayani,uriD9yI;a,rI;a,lOna,tH;bi0i3llBEnI;a,iI;ca,ka,qCZ;a,cUkaTlOmi,nMrJtzi,yI;ar;aJiam,lI;anEJ;!l,nB;dy,eIh,n4;nhHrva;aLdKiCLlI;iIy;cent,e;red;!gros;!e5;ae5hI;ae5el40;ag5FgOi,lLrI;edi78iJjem,on,yI;em,l;em,sF;an4iIliF;nIsCA;a,da;!an,han;b0DcAOd0Be,g09ha,i08ja,l06n04rMsoum5ZtLuJv81x9GyIz4;bell,ra,soB5;de,rI;a,eE;h8Dild1t4;a,cYgUiLjor4l7Rn4s6tKwa,yI;!aIbe6Vja9lAA;m,nBD;a,ha,in1;!aKbC7eJja,lDna,sIt63;!a,ol,sa;!l1H;! Kh,mJnI;!a,e,n1;!awit,i;aliADcJeduarBfern5FjIlui5X;o6Eul2;ecil2la3;arKeJie,oIr46ueriA;!t;!ry;et44i39;el4Wi76y;dIon,ue5;akran7y;ak,en,iIlo3Q;a,ka,nB;a,re,s4te;daIg4;!l3C;alDd4elIge,isD7on0;ei9in1yn;el,le;a0Oe0DiZoRuMyI;d2la,nI;!a,dJeBDnIsCH;!a,eBC;a,sCF;aCScKel0QiFlJna,pIz;e,i7;a,u,wa;iIy;a0Te,ja,l2LnB;is,l1TrKttJuIvel4;el5is1;e,ie;aLeJi8na,rI;a85i8;lIn1t7;ei;!in1;aTbb99dSepa,lNnKsJv2zI;!a,be5LetAz4;a,etA;!a,dI;a,sIy;ay,ey,i,y;a,iKja,lI;iIy;a9Xe;!aI;!nG;ia,ya;!nI;!a,ne;aQda,e0iOjZla,nNoLsKtIx4y5;iIt4;c2t2;e2NlCC;la,nIra;a,ie,o3;a,or1;a,gh,laI;!ni;!h,nI;a,d3e,n5P;cPdon94iOkes6mi97na,rNtKurJvIxmi,y5;ern1in2;a,e54ie,yn;as6iJoI;nya,ya;fa,s6;a,isF;a,la;ey,ie,y;a05e00hYiPlAGoOrKyI;lIra;a,ee,ie;istIy6C;a,en,iJyI;!na;!e,n59;nul,ri,urtnAW;aPerOlAVmKrIzzy;a,stI;en,in;!berlJmernI;aq;eIi,y;e,y;a,stE;!na,ra;aIei3ongordzol;dij1w5;el7NiLjsi,lKnJrI;a,i,ri;d3na,za;ey,i,lB9s4y;ra,s6;bi7cAFdiat7FeAYiSlRmQnyakuma1BrOss6ItLvi7yI;!e,lI;a,eI;e,i8I;a6CeJhIi4NlDri0y;ar6Aer6Aie,leErAYy;!lyn8Dri0;a,en,iIl5Roli0yn;!ma,nGsF;a5il1;ei8Bi,l4;a,tl6J;a09eZiWoOuI;anMdLliIst62;a8EeIsF;!n9tI;!a,te;e5Ii3Jy;a,i7;!anOcelDdNelHhan7OleMni,sJva0yI;a,ce;eIie;fIlDph5T;a,in1;en,n1;i8y;!a,e,n41;lIng;!i1ElI;!i1D;anOle0nLrKsI;i89sI;!e,i88;i,ri;!a,elHif2BnI;a,etAiIy;!e,f29;a,e8AiJnI;a,e89iI;e,n1;cNda,mi,nJque4VsminGvie3y9zI;min8;a8eJiI;ce,e,n1s;!lIsFt0G;e,le;inJk4lDquelI;in1yn;da,ta;da,lSmQnPo0rOsJvaIzaro;!a0lu,na;aKiJlaIob80;!n9I;do3;belIdo3;!a,e,l38;a73en1i0ma;di3es,gr6Uji;a9elBogI;en1;a,e9iIo0se;a0na;aTePiKoIusFyacin2A;da,ll4rten22snI;a,i9L;lJmaI;ri;aJdIlaJ;a,egard;ry;ath1BiKlJnriet7rmi9sI;sa,t1A;en2Rga,mi;di;bi2Cil8DlOnNrKsJtIwa,yl8D;i5Ot4;n5Uti;iImo4Yri4Z;etI;!te;aCnaC;a,ey,l4;a04eYiTlRoPrLunKwI;enIyne1P;!dolD;ay,el;acJetIiselB;a,chE;e,ieI;!la;ld19ogooI;sh;adys,enIor2yn2G;a,da,na;aLgi,lJna,ov84selIta;a,e,le;da,liI;an;!n0;mMnKorgJrI;ald3Ni,m3Atru86;etAi4S;a,eIna;s25vieve;ma;bJle,mIrnet,yH;al5Ji5;i5BrielI;a,l1;aUeRiQlorPoz2rI;anKeJiI;da,eB;da,ja;!cI;esJiIoi0N;n1s5X;!ca;a,enc2;en,o0;lJn0rnI;anB;ec2ic2;jr,n7rLtIy8;emJiIma,ouma7;ha,ma,n;eh;ah,iBrah,za0;cr4Ld0Oe0Ni0Mk7l05mXn4WrUsOtNuMvI;aKelJiI;!e,ta;inGyn;!ngel2S;geni1ni43;h5Qta;mMperanLtI;eJhIrel5;er;l2Zr8;za;a,eralB;iIma,nest2Jyn;cIka,n;a,ka;a,eNiKmI;aIie,y;!li9;lIn1;ee,iIy;a,e,ja;lIrald;da,y;aXeViOlNma,no3oLsKvI;a,iI;na,ra;a,ie;iIuiI;se;a,en,ie,y;a0c2da,f,nNsKzaI;!betIve7;e,h;aIe,ka;!beI;th;!a,or;anor,nG;!a;!in1na;leEs6;vi;eJiIna,wi0;e,th;l,n;aZeNh2iMjeneLoI;lor5Qminiq4Gn3DrItt4;a,eEis,la,othIthy;ea,y;ba;an0AnaCon9ya;anRbQde,ePiNlKmetr2nIsir5H;a,iI;ce,se;a,iJla,orIphi9;es,is;a,l6A;dIrdI;re;!d59na;!b2ForaCraC;a,d3nI;!a,e;hl2i0l0HmOnMphn1rJvi1WyI;le,na;a,by,cJia,lI;a,en1;ey,ie;a,etAiI;!ca,el1Bka,z;arIia;is;a0Se0Oh05i03lVoKristJynI;di,th2;al,i0;lQnNrJurI;tn1E;aKd2MiIn2Mri9;!nI;a,e,n1;!l4;cepci57n4sI;tanIuelo;ce,za;eIleE;en,tA;aKeoJotI;il4Z;!pat3;ir8rKudI;etAiI;a,ne;a,e,iI;ce,s00;a3er3ndI;i,y;aSeOloe,rI;isKyI;stI;al;sy,tI;a1Qen,iIy;an1e,n1;deKlseJrI;!i8yl;a,y;li9;nNrI;isLlJmI;ai9;a,eIotA;n1tA;!sa;d3elHtI;al,elH;cJlI;esAi42;el2ilI;e,ia,y;itlZlYmilXndWrOsMtIy5;aKeKhIri0;erIleErDy;in1;ri0;a32sI;a31ie;a,iOlMmeKolJrI;ie,ol;!e,in1yn;lIn;!a,la;a,eIie,o7y;ne,y;na,sF;a0Hi0H;a,e,l1;is7l4;in,yn;a0Ie02iZlXoUrI;andi8eRiKoJyI;an0nn;nwDoke;an3CdgMg0XtI;n2WtI;!aJnI;ey,i,y;ny;etI;!t8;an0e,nI;da,na;bbi8glarJlo06nI;i7n4;ka;ancIossom,ythe;a,he;an18lja0nIsm3I;i7tI;ou;aVcky,linUni7rQssPtKulaCvI;!erlI;ey,y;hKsy,tI;e,iIy8;e,na;!anI;ie,y;!ie;nIt6yl;adJiI;ce;etAi9;ay,da;!triI;ce,z;rbKyaI;rmI;aa;a3o3ra;a2Sb2Md23g1Zi1Qj5l16m0Xn0Aoi,r05sVtUuQvPwa,yJzI;ra,u0;aLes6gKlJseI;!l;in;un;!nI;a,na;a,i2I;drKgus1RrJsteI;ja;el2;a,ey,i,y;aahua,he0;hJi2Gja,mi7s2DtrI;id;aNlJraqIt21;at;eJi8yI;!n;e,iIy;gh;!nI;ti;iKleJo6pi7;ta;en,n1tA;aIelH;!n1J;a01dje5eZgViTjRnKohito,toIya;inetAnI;el5ia;!aLeJiImK;e,ka;!mItA;ar4;!belJliFmV;sa;!le;a,eliI;ca;ka,sIta;a,sa;elIie;a,iI;a,ca,n1qI;ue;!tA;te;!bJmIstasiNya;ar2;el;aMberLeliKiIy;e,l2naI;!ta;a,ja;!ly;hHiJl2nB;da;a,ra;le;aXba,eQiNlLthKyI;a,c2sI;a,on,sa;ea;iIys0O;e,s0N;a,cJn1sIza;a,e,ha,on,sa;e,ia,ja;c2is6jaLksaLna,sKxI;aIia;!nd3;ia,saI;nd3;ra;ia;i0nJyI;ah,na;a,is,naCoud;la;c6da,leEmOnMsI;haClI;inIyZ;g,n;!h;a,o,slI;ey;ee;en;at6g4nJusI;ti0;es;ie;aXdiUelNrI;eKiI;anNenI;a,e,ne;an0;na;!aMeLiJyI;nn;a,n1;a,e;!ne;!iI;de;e,lDsI;on;yn;!lI;i9yn;ne;aLbJiIrM;!gaL;ey,i8y;!e;gaI;il;dLliyKradhJs6;ha;ya;ah;a,ya\",\n  \"FirstName\": \"true¦aLblair,cHdevGgabrieFhinaEjCk9l8m4nelly,quinn,re3s0;h0umit;ay,e0iloh;a,lby;g6ne;a1el0ina,org5;!okuh9;naia,r0;ion,lo;ashawn,uca;asCe1ir0rE;an;lsAnyat2rry;am0ess6ie,ude;ie,m5;ta;le;an,on;as2h0;arl0eyenne;ie;ey,sidy;lex2ndr1ubr0;ey;a,ea;is\",\n  \"LastName\": \"true¦0:9G;1:9W;2:9O;3:9Y;4:9I;5:8L;6:9L;7:A1;8:9F;9:8A;A:78;B:6G;C:6K;a9Vb8Nc7Ld6Ye6Tf6Fg5Wh59i55j4Qk45l3Nm2Sn2Fo27p1Oquispe,r18s0Ft05vVwOxNyGzD;aytsAEhD;aDou,u;ng,o;aGeun81iDoshiAAun;!lD;diDmaz;rim,z;maDng;da,guc98mo6VsDzaA;aAhiA8;iao,u;aHeGiEoDright,u;jc8Tng;lDmm0nkl0sniewsA;liA2s3;b0iss,lt0;a5Tgn0lDtanabe;k0sh;aHeGiEoDukB;lk5roby5;dBllalDnogr2Zr10ss0val37;ba,obos;lasEsel7P;lGn dFrg8FsEzD;qu7;ily9Pqu7silj9P;en b35ijk,yk;enzue96verde;aLeix1KhHi2j6ka3IoGrFsui,uD;om50rD;c2n0un1;an,embl8UynisA;dor96lst31m4rr9th;at5Ni7NoD;mErD;are70laci65;ps3s0Z;hirBkah8Enaka;a01chXeUhQiNmKoItFuEvDzabo;en8Bobod34;ar7bot4lliv2zuA;aEein0oD;i68j3Myan8W;l6rm0;kol5lovy5re6Rsa,to,uD;ng,sa;iDy60;rn5tD;!h;l5ZmEnDrbu;at8gh;mo6Eo6K;aFeDimizu;hu,vchD;en7Duk;la,r17;gu8mDoh,pulve8Trra4S;jDyD;on5;evi6Giltz,miDneid0roed0ulz,warz;dEtD;!z;!t;ar42h6ito,lFnDr4saAto,v4;ch7d0AtDz;a4Pe,os;as,ihBm3Zo0Q;aOeNiKoGuEyD;a67oo,u;bio,iz,sD;so,u;bEc7Bdrigue57g03j73mDosevelt,ssi,ta7Nux,w3Z;a4Ce0O;ertsDins3;!on;bei0LcEes,vDzzo;as,e8;ci,hards3;ag2es,it0ut0y9;dFmEnDsmu7Zv5F;tan1;ir7os;ic,u;aSeLhJiGoErDut6;asad,if60ochazk1V;lishc23pDrti63u55we67;e2Tov48;cEe09nD;as,to;as61hl0;aDillips;k,m,n5L;de3AetIna,rGtD;ersErovDtersC;!a,ic;en,on;eDic,ry,ss3;i8ra,tz,z;ers;h71k,rk0tEvD;ic,l3T;el,t2O;bJconnor,g2ClGnei5QrEzD;demir,turk;ella3MtDwe5O;ega,iz;iDof6GsC;vDyn1E;ei8;aPri1;aLeJguy1iFoDune44ym2;rodahl,vDwak;ak3Uik5otn57;eEkolDlsCx3;ic,ov6X;ls1miD;!n1;ils3mD;co42ec;gy,kaEray2varD;ro;jiDmu8shiD;ma;aWcUeQiPoIuD;lGnFrDssoli5T;atDpTr68;i,ov4;oz,te4C;d0l0;h2lInr13o0GrEsDza0Y;er,s;aFeEiDoz5r3Ete4C;!n6F;au,i8no,t4N;!l9;i2Rl0;crac5Ohhail5kke3Qll0;hmeFij0j2FlEn2Xrci0ssiDyer19;!er;n0Io;dBti;cartDlaughl6;hy;dMe6Egnu5Fi0jer35kLmJnci5ArFtEyD;er,r;ei,ic,su1O;iEkBqu9roqu6tinD;ez,s;a55c,nD;!o;a53mD;ad5;e5Pin1;rig4Ps1;aSeMiIoGuEyD;!nch;k4nDo;d,gu;mbarDpe2Svr4;di;!nDu,yana1T;coln,dD;bDholm;erg;bed5UfeGhtFitn0kaEn6rDw2H;oy;!j;in1on1;bvDvD;re;iDmmy,rsCu,voie;ne,t12;aTennedy,h2iSlQnez48oJrGuEvar2woD;k,n;cerDmar59znets5;a,o2H;aDem0i31yeziu;sni3RvD;ch3W;bay4Grh0Ksk0UvaFwalDzl5;czDsA;yk;cFlD;!cDen3S;huk;!ev4ic,s;e6uiveD;rt;eff0l4mu8nnun1;hn,llFminsArEstra33to,ur,yDzl5;a,s0;j0HlsC;oe;aMenLha2Qim0RoEuD;ng,r4;e2KhFnErge2Ku2OvD;anB;es,ss3;anEnsD;en,on,t3;nesDsC;en,s1;ki27s1;cGkob3RnsDrv06;en,sD;enDon;!s;ks3obs1;brahimBglesi3Ake4Ll0DnoZoneFshikEto,vanoD;u,v4A;awa;scu;aPeIitchcock,jaltal6oFrist46uD;!aDb0gh9ynh;m2ng;a24dz4fEjga2Tk,rDx3B;ak0Yvat;er,fm3B;iGmingw3NnErD;nand7re8;dDriks1;ers3;kkiEnD;on1;la,n1;dz4g1lvoLmJnsCqIrr0SsFuEyD;as36es;g1ng;anEhiD;mo0Q;i,ov08;ue;alaD;in1;rs1;aNeorgMheorghe,iKjonJoGrEuDw3;o,staf2Utierr7zm2;ayDg4iffitVub0;li1H;lub3Rme0JnEodD;e,m2;calv9zale0H;aj,i;l,mDordaL;en7;iev3A;gnJlGmaFnd2Mo,rDs2Muthi0;cDza;ia;ge;eaElD;agh0i,o;no;e,on;ab0erLiHjeldsted,lor9oFriedm2uD;cDent9ji3E;hs;ntaDrt6st0urni0;na;lipEsD;ch0;ovD;!ic;hatBnanFrD;arDei8;a,i;deS;ov4;dGinste6riksCsDva0D;cob2YpDtra2W;inoza,osiL;en,s3;er,is3wards;aUeMiKjurhuJoHrisco0ZuEvorakD;!oQ;arte,boEmitru,rDt2U;and,ic;is;g2he0Imingu7n2Ord1AtD;to;us;aDmitr29ssanayake;s,z; GbnaFlEmirDrvis1Lvi,w2;!ov4;gado,ic;th;bo0groot,jo04lEsilDvri9;va;a cruz,e3uD;ca;hl,mcevsAnEt2EviD;d5es,s;ieDku1S;ls1;ki;a06e01hOiobNlarkMoFrD;ivDuz;elli;h1lHntGoFrDs26x;byn,reD;a,ia;ke,p0;i,rer0N;em2liD;ns;!e;anu;aLeIiu,oGriDuJwe;stD;eDiaD;ns1;i,ng,uFwDy;!dhury;!n,onEuD;ng;!g;kEnDpm2tterjee,v7;!d,g;ma,raboD;rty;bGl08ng4rD;eghetEnD;a,y;ti;an,ota0L;cer9lder3mpbeIrFstDvadi07;iDro;llo;doEt0uDvalho;so;so,zo;ll;es;a08eWhTiRlNoGrFyD;rne,tyD;qi;ank5iem,ooks,yant;gdan5nFruya,su,uchEyHziD;c,n5;ard;darDik;enD;ko;ov;aEondD;al;nco,zD;ev4;ancRshwD;as;a01oDuiy2;umDwmD;ik;ckNethov1gu,ktLnJrD;gGisFnD;ascoDds1;ni;ha;er,mD;ann;gtDit7nett;ss3;asD;hi;er,ham;b4ch,ez,hMiley,kk0nHrDu0;bEnDua;es,i0;ieDosa;ri;dDik;a8yopadhyD;ay;ra;er;k,ng;ic;cosZdYguilXkhtXlSnJrGsl2yD;aEd6;in;la;aEsl2;an;ujo,ya;dFgelD;ovD;!a;ersGov,reD;aDjL;ss1;en;en,on,s3;on;eksejGiyGmeiFvD;ar7es;ez;da;ev;ar;ams;ta\",\n  \"MaleName\": \"true¦0:DO;1:CP;2:D7;3:AK;4:CL;5:C0;6:CG;7:D3;8:BT;9:AS;A:95;B:DB;C:D4;D:BN;aCAbB8cA8d99e8Jf83g7Gh6Ti6Dj5Fk53l4Fm37n2Uo2Op2Gqu2Er1Ms12t0Gu0Fv08wUxTyJzE;aEor0;cEh9Kkaria,n0C;hFkE;!aC8;ar5VeC7;aMoGuE;sEu2LvBK;if,uf;nGsFusE;ouf,sE;ef;aEg;s,tE;an,h0;hli,nB9ssY;avi3ho4;aNeLiGoEyaBO;jcie88lfgang,odrow,utE;!er;lEnst1;bGey,fredBlE;aB0iE;am,e,s;e98ur;i,nde9sE;!l8t1;lFyE;l1ne;lEt3;a9Yy;aHiEladimir,ojte7V;cFha0kt68nceErgA6va0;!nt;e3Xt66;lentEn9T;inE;!e;ghBFlyss5Anax,sm0;aXeShOiMoIrGuFyE;!l3ro6s1;n7r5A;avAIeEist0oy,um0;ntAAv5Xy;bGd8SmEny;!as,mEoharu;aCCie,y;iAy;mEt5;!my,othy;adGeoFia0KomE;!as;!do8H;!de5;dHrE;en99rE;an98eEy;ll,n97;!dy;dgh,ha,iEnn3req,tsu4S;cAQka;aUcotSeQhMiKoIpenc3tEur1Xylve97zym1;anGeEua86;f0phBDvEwa85;e60ie;!islaw,l8;lom1uE;leyma6ta;dElAm1yabonga;!dhart75n8;aGeE;lErm0;d1t1;h7Lne,qu11un,wn,y6;aEbasti0k2Cl4Qrg4Nth,ymoAF;m5n;!tE;!ie,y;lFmEnti2Gq59ul;!ke5KmDu4;ik,vato7P;aZeVhe9WiRoIuFyE;an,ou;b7EdFf5pe7LssE;!elBJ;ol3Gy;an,bLc63dJel,geIh0landBmHnGry,sFyE;!ce;coe,s;!aA2nD;an,eo;l46r;er79g3n8olfo,riE;go;bDeAR;cEl8;ar6Jc6IhFkEo;!ey,ie,y;a8Wie;gFid,ubCyEza;an1KnZ;g9TiE;na9Ps;ch6Rfa4lImHndGpha4sFul,wi2IyE;an,mo6V;h7Km5;alAXol2Vy;iADon;f,ph;ent2inE;cy,t1;aJeHhilGier6UrE;aka18eE;m,st1;!ip,lip;dA5rcy,tE;ar,e3Fr1Z;b4Idra74tr6KulE;!o19;ctav3Ei3liv3m9Zndrej,rIsFtEum7wC;is,to;aFc7k7m0vE;al5T;ma;i,vM;aMeKiGoEu39;aEel,j5l0ma0r3J;h,m;cFg4i47kE;!au,h7Hola;holAkEolA;!olA;al,d,il,ls1vE;il8K;hom,tE;e,hE;anEy;!a4i4;a00eXiNoIuFyE;l2Hr1;hamFr6LstaE;fa,p55;ed,mI;di0Xe,hamGis2DntFsEussa;es,he;e,y;ad,ed,mE;ad,ed;cJgu4hai,kHlGnFtchE;!e9;a7Vik;house,o0Ct1;ae5Pe9NolE;aj;ah,hE;aFeE;al,l;el,l;hFlv2rE;le,ri9v2;di,met;ay0hUjd,ks2BlSmadXnRrLs1tGuricFxE;imilianBwe9;e,io;eHhFiAtEus,yA;!eo,hew,ia;eEis;us,w;j,o;cIio,kHlGqu6Zsha9tEv2;iEy;!m,n;in,on;el,oQus;!el91oPus;iHu4;achEcolm,ik;ai,y;amFdi,eEmoud;sh;adEm5H;ou;aXeRiPlo3AoLuFyE;le,nd1;cHiGkEth3uk;aEe;!s;gi,s,z;as,iaE;no;g0nn7CrenGuEv82we9;!iE;e,s;!zo;am,oE;n4r;a7Vevi,la4BnIonHst3thaGvE;eEi;nte;bo;!a6Eel;!ny;mGnFrEur55wr55;ry,s;ce,d1;ar,o4Y;aMeIhal7GiFristEu4Ky6J;i0o54;er0p,rE;k,ollE;os;en0iGnErmit,v3U;!dr3XnEt1;e18y;r,th;cp3j5m5Sna6OrFsp7them,uE;ri;im,l;a01eViToHuE;an,lEst2;en,iE;an,en,o,us;aOeMhnLkubAnJrHsE;eFhEi7Vue;!ua;!ph;dEge;i,on;!aEny;h,s,th55;!ath54ie,nD;!l,sEy;ph;o,qu2;an,mE;!mD;d,ffHrEs5;a5YemFmai6oEry;me,ni0Y;i7Fy;!e5OrE;ey,y;cLdCkJmIrGsFvi3yE;dCs1;on,p3;ed,od,rEv4V;e5Bod;al,es4Mis1;a,e,oEub;b,v;ob,quE;es;aXbRchiQgOkeNlija,nuMonut,rKsGtEv0;ai,suE;ki;aFha0i6ZmaEsac;el,il;ac,iaE;h,s;a,vinEw2;!g;k,nngu5F;!r;nacEor;io;ka;ai,rahE;im;aQeKoJuEyd7;be2FgHmber4KsE;eyFsE;a2e2;in,n;h,o;m3ra36sse2wa40;aIctHitHnrFrE;be28m0;iEy;!q0Z;or;th;bMlLmza,nKo,rGsFyE;a47dC;an,s0;lGo4Nry,uEv8;hi44ki,tE;a,o;an,ey;k,s;!im;ib;aWeSiQlenPoMrIuE;ilFsE;!tavo;herme,lerE;mo;aGegEov3;!g,orE;io,y;dy,h5J;nzaFrE;an,d1;lo;!n;lbe4Xno,oE;rg37van4X;oGrE;aEry;ld,rdB;ffr8rge;brFlCrEv2;la14r3Hth,y;e33ielE;!i5;aSePiNlLorrest,rE;anFedEitz;!dDer11r11;cGkE;!ie,lE;in,yn;esLisE;!co,z2W;etch3oE;yd;d4lEonn;ip;deriFliEng,rnan05;pe,x;co;bi0di,hd;dYfrXit0lSmLnIo2rGsteb0th0uge6vEymCzra;an,eE;ns,re2X;gi,i0AnErol,v2w2;estBie;oFriqEzo;ue;ch;aJerIiFmE;aIe2Q;lErh0;!iE;o,s;s1y;nu4;be0Bd1iGliFm3t1viEwood;n,s;ot1Ss;!as,j4EsE;ha;a2en;!d2Vg7mHoFuFwE;a26in;arE;do;oWuW;a02eRiPoHrag0uGwFylE;an,l0;ay6ight;a6dl8nc0st2;minHnFri0ugEvydAy29;!lA;!a2HnEov0;e9ie,y;go,iFykA;as;cEk;!k;armuEll1on,rk;id;andNj0lbeMmetri5nKon,rIsGvFwExt3;ay6ey;en,in;hawn,moE;nd;ek,rE;ick;is,nE;is,y;rt;re;an,le,mLnKrGvE;e,iE;!d;en,iGne9rEyl;eEin,yl;l35n;n,o,us;!i4ny;iEon;an,en,on;a08e06hYiar0lOoJrHuFyrE;il,us;rtE;!is;aEistob0S;ig;dy,lHnFrE;ey,neli5y;or,rE;ad;by,e,in,l2t1;aIeGiEyK;fEnt;fo0Et1;meEt5;nt;rGuFyE;!t1;de;enE;ce;aIeGrisE;!toE;ph3;st3;er;d,rEs;b4leE;s,y;cEdric,s7;il;lHmer1rE;ey,lFro9y;ll;!os,t1;eb,v2;a07eZiVlaUoSrFuEyr1;ddy,rtL;aMeHiGuFyE;an,ce,on;ce,no;an,ce;nFtE;!t;dFtE;!on;an,on;dFndE;en,on;!foEl8y;rd;bby,rEyd;is;i6ke;bGlFshE;al;al,lD;ek;nIrEshoi;at,nFtE;!r1B;aEie;rdB;!iFjam2nD;ie,y;to;kaNlazs,nIrE;n8rEt;eEy;tt;ey;dEeF;ar,iE;le;ar16b0Ud0Qf0Ogust2hm0Li0Ija0Hl03mZnSputsiRrIsaHugust5veFyEziz;a0kh0;ry;us;hi;aLchKiJjun,maInGon,tEy0;hEu09;ur;av,oE;ld;an,ndB;!el,ki;ie;ta;aq;as,dIgelBtE;hony,oE;i6nE;!iBy;ne;er,reEy;!as,i,s,w;iGmaEos;nu4r;el;ne,r,t;an,beQdCeKfIi,lHonGphYt1vE;aOin;on;so,zo;an,en;onUrE;ed;c,jaHksandGssaHxE;!andE;er,ru;ar,er;ndE;ro;rtB;ni;dCm7;ar;en;ad,eE;d,t;in;onE;so;aFi,olfBri0vik;!o;mEn;!a;dIeHraFuE;!bakr,lfazl;hEm;am;!l;allJelGoulaye,ulE;!lErG;ah,o;! rE;ahm0;an;ah;av,on\",\n  \"Person\": \"true¦ashton kutchUbTcOdMeKgastPhIinez,jHkGleFmDnettLoCpAr5s4t2va1w0;arrDoode;lentino rossi,n go4;a0heresa may,iger woods,yra banks;tum,ylor;addam hussain,carlett johanssKlobodan milosevic;ay romano,e3o1ush limbau0;gh;d stewart,nald0;inho,o;ese witherspoFilly;a0ipJ;lmIris hiltD;prah winfrFra;essia0itt romnEubarek;en;bron james,e;anye west,endall,iefer sutherland,obe bryant;aime,effers7k rowling;a0itlBulk hogan;lle berry,rris5;ff0meril lagasse,zekiel;ie;a0enzel washingt2ick wolf;lt1nte;ar1lint0;on;dinal wols1son0;! palm2;ey;arack obama,rock;er\",\n  \"Adjective\": \"true¦0:9O;1:8J;2:8F;3:9F;4:99;5:8D;6:8K;7:8P;8:9A;9:8W;A:81;B:66;C:9E;a81b7Ic70d6Je61f5Fg57h4Vi3Xjuni4Bk3Vl3Km38n2Yo2Jp21quart6Er1Qs0Tt0LuOvKwDye1M;ast5BeHholeGiFoD;man5oDrthwhi6u0H;dAzy;despr90s6Q;!sa6;ather15eDll o5Tste2V;!k5;aFeEiDola5N;b9Qce versa,gi2V;ng52rsa5L;ca0lu5D;lt08nJpFrEsDttermo9I;ef7Ku4;b6Jge0; Fb2FpEsDti8J;ca6et,ide dQ;er,i4S;f40to da3;aYbecom2cXdSeRfPiOknNmMpLrIsEtoHus1wD;a08iel4L;eAi2KoFpEuD;pervis1spect2;e0okA;ld;eDu5;cognSgul0NlDsolv1;at1ent2;a9recede00;arri1et;own;que,vers4;air,orD;eseAtun7R;mploy1nd2xpect1;eDue;cid1rD;!a75covBly2sHwD;aDei7W;tBy;heck1onvinc2;ppeal2ssum2tteEuthorD;iz1;nd1;im4Dra;aIeFhough5Lip 1UoErD;anspa7Ii3;gethBle8Op notch,rp9;ena6UmpErD;r3Ltia77;e8o75;leDst3X;nt1;a08c04e01h00iYkiXmug,nobbi49oRpOqueami49tIuDymb7L;bFi generis,pDr5;erDre67;! dupBb,viZ;du1p4FsDurb5C;eq7Otanda8A;atu6OeHi0ZrDy42;aDin4O;ightDy; fDfD;or6C;adfa82ri6;arEeDirit1lend9ot on;c34e3B;k5se; caIlub6mbBphisticHrGuEvD;erei5XiR;ndDth12;proof;d9ry;at1;ll1;g23nD;ce5Kg6;am37eB;at1co1Nem5lfEnDre7;so6D; suf47i3I;aEholDient2P;ar5;rlDth2;et;cr1me,tisfac5Y;aLeGheumato9iEoD;bu7FttAy4;ghtDv4;-w2f5G;b00cGdu76lFnown1sDtard1;is3LoD;lu3na0;e1Euc3J;e0ondi3;b9ciD;al,st;aPeNicayu7laMopuli75rEuD;bl6Dnjabi;eIiGoD;!b2WfEmi3JpDvAx22;er,ort6I;a7u6L;maDor,sti7va3;!ry;ci6Iexist2mDpa9;a1Si6L;c9id;ac2CrDti3;feCma3Ati3Av6D;i2CrEsD;s68t;allEtD;-4Ki4;el;bOffMkLld KnIrHthButGverD;!aEni5Qseas,t,wD;ei5Prou5P;ll;do10er,si4W;d32g1Q; bDbDgo2li7;oa6I;fashion1school;!ay; gua6FbDli7;eat;eEsD;ce7er0Fo0V;dia0se;aLeKiJoDuanc1; mo41nFrthDt21;!eD;rn;chaEdescri63prof2HsD;top;la0;ght5;arby,cessa4Qighbor5xt;k1usiat2;aKeJiHoEuD;d18ltip6;deEl17nDot,st;ochro3Rth5;rn,st;ddle ag1nD;dblUi;nac2re;cFgenta,in,j07keshift,mmEnDscu4W;da46y;ali2Roth;ab3Hho;aMeJiHoEuD;mber2sh;ngDuti1G;stand2tD;erm,i3E;ghtwei4LteraD;l,te;ft-w2gDssBth4;al,eDit0E;nda43;ngu9ps1st,te5;aput,ind5nD;ow2;gno5Ell06mYnFpso 2DrD;a3releD;va0; TaScoPdMe2HfLhibi3NiZnKoJsFtDvalu10;aCeD;n4Prdep22;a7iEolDuboG;ub6ve0;de,gD;nifica0;rdi4H;a3er;eriEluenQreq4D;eEiGoD;or;fini3p1Stermi4C;mpEnside8rD;reC;le3;ccu8deq4Dppropr3M;fDsitu,vitro;ro0;mHpD;arFeEl0YoDropB;li3r0V;nd2rfeC;ti4;aEeDi0Z;d3Dn42;tu2A;egEiD;c0Rte8;al,itD;ima3;aLelKiIoEumD;a7dr3Z;meFnErrDs0Aur5;if3H;e47o2W; ma2Jsick;ghfalut1RspD;an3D;liZpf26;i2SlEnDrd04tK;dy;f,low1;aiJener38iga2Flob4oIraFuD;ilDng ho;ty;cEtD;ef1Yis;ef1X;ldAod;nf1V;aUeRinQlOoGrD;aEeDozA;q35tf1S;gi6nt2X;oIrD; keeps,eFge0MmBtunDwa3O;ateD;!ly;go2i1JseeD;ab6;liD;sh;ag3KuD;e0oresce0;al,i3;dEmini7rD;ti6; up;bl1i0l2UmiliFr Dux;oDreach2;ff;ar;aRfQlOmLnJqu4reCthere4veryday,xD;aCem33plGquisi3traFuD;be38lD;ta0;!va1P;icD;it; Dti0S;rou3sui3;erEiD;ne0;ge0;dDe1H;er5;ficie0;gBsD;t,ygo2;er;aSeJiEoDrea1Due;mina0ne,rma0ubM;dact1Ufficult,m,sEverD;ge0se;creEeLjoi0pa8tD;a0inC;et,te; KadpJceIfiHgene8liFpEreliCspe8voD;id,ut;ende0;ca3ghD;tf0F;a0ni3;as1;an;facto;i5ngeroZ;arTeRivil,oGrEuD;nn2stoma0V;aDu0Rystal1A;vAz1;erMgniza0loLmKnFrEveD;rt;po8ru1Z;cGduJgr1FjFsEtraD;dic0Fry;eq1Dta0;oi0ug4;a17i1G;mensu8pass1B;ni4ss4;ci14;leba3rtaD;in;diac,efS;aSeLiHliQoErDuck nak1;and new,isk,on1R;gEldface,naD; fiYfiY;us;gEzarD;re;tiD;me;autifIhiHloGnEsDyoH;iRt;eZiDt;gn;v1w;nd;ul;ckEnkru17rD;e,rA;!wards; priori,b0Yc0Vd0Of0Ig0Gh0Fl08mp6nt04pWrPsNttracti0HuJvGwD;aEkD;wa15;ke,re;ant garEeraD;ge;de;diFtD;heDoimmu7;nt05;toL;hAleep;en;bitHchiv4roGtD;iDsy;fiD;ci4;ga0;raD;ry;pDt;aIetiz2roD;prFximD;ate5;ly;ia3;ing;re0;iquDsy;at1e;ed;le;cohHiLkaFl,oEriDterR;ght;ne,of;li7;ne;olD;ic;ead;ain01ed,gressiD;ve;fEra9;id;ectElD;ue0;ioD;na3; HeFvD;erD;se;pt,qD;ua3;hoc,infinitD;um;cu8tu4u3;al;ra3;erOlMoKrHsEuD;nda0;e0olu3traC;ct;te;eaEuD;pt;st;aDve;rd;aDe;ze;ra0;nt\",\n  \"Adj|Noun\": \"true¦0:0T;a0Sb0Nc0Dde0Ce07f01g00homel09iYjuXlWmQnPoOpMrJsBt7u4va2w1;atershed,elcome;gabo4nilla,ria1;b0Ent;ndergr1pstairs;adua0Kou1;nd;a3e1oken,ri0;en,r1;min0ror0C;boo,n;e6ist00o4qua3ta2u1well;bordina0Dper6;b04ndard;re,t;cial06l1;e,ve0H;cret,n1ri0;ior;e1outiJubbish;ar,laVnt0p1;resentaUublican;atie0Beriodic0otenti0r1;emiOincip0;ffiYpposi01v0;agging,ovel;aRe4in3o1;biQdernUr1;al,t0;iature,or;di1tr04;an,um;attFiber0;stice,veniK;de0mpressionNn1;cumbeYdividu0noXstaY;enious,old;a4e2i1luid;ne;llow,m1;aDinH;t,vo1;riJuriJ;l3pRx1;c1ecu7pM;ess;d1iF;er;mographMriva3;hiDlassLo1rude;m4n2opera1;tive;cre9stitueHtemporary,vertab1;le;m2p1;anion,lex;er2un1;ist;ci0;lank,o4r1;i2u1;te;ef;ttom,urgeois;cadem6d3l2nim0rab;al;ert;oles1ult;ce1;nt;ic\",\n  \"Adj|Past\": \"true¦0:2Z;1:2Q;2:2T;a2Ib2Cc1Td1Ae14f0Zgift0h0Wi0Pj0Oknown,l0Lm0Gn0Eo0Bp04qua03rUsEtAu7v5w3;arp0ea3or5;kIth2S;a3e0V;ri0;n3pd1s0;derstood,i3;fi0t0;ar5hreatCr3wi2Q;a3ou18;ck0in0pp0;get0ni1M;aGcaFeEhDimCm00oak0pAt6u3;bsid27gge2Ls3;pe3ta1R;ct0nd0;at0e5r3uU;ength3ip0;en0;am0reotyp0;eci3ik0ott0;al1Zfi0;pHul1;ar0ut;al0c1Ile2t1R;r0tt25;t3ut0;is1Jur1;aAe3;c7duc0f1Cg6l1new0qu5s3;pe2t3;or0ri2;e22ir0;ist1Xul1;eiv0o3;mme09rd0v1V;lli0ti1A;li19;arallel0l7o6r3ump0;e4o3;ce0Ilo0Hnou1Tpos0te2;fe0Loc8pY;i1Gli0R;a3e19;nn0;c4rgan1Bverlo3;ok0;cupi0;e3ot0;ed0gle2;a5e4ix0o3ut0;di0Vt0G;as0Qlt0;n3rk0;ag0ufact0O;eft,i4o3;ad0st;cens0mit0st0;agg0us0N;mp8n3sol1;br0debt0f6t3volv0;e3ox0F;gr1n3re18;d0si0J;e2l1oX;li0oLrov0;amm10e1o3;ok0r3;ri0E;aNe6i5lavo09oc05r3;a3i0;ct07g0Mm0;niXx0;ar0;duc1l1mbarraKn7quipp0stabliVx3;agger1p3te5;a4e3;ct0rie0S;nd0;ha0QsZ;aJeAi3;gni01miniOre2s3;a7c5grun05t3;o3reBurb0;rt0;iplSou3;nt0rE;bl0;cenVdOf8l7pre6ra5t3velop0;a3ermO;il0;ng0;ss0;ay0ight0;e4o3;rm0;rr0;m3t0;ag0;alcul1eHharg0lGo8r5u3;lt3stomS;iv1;a4owd0u3;sh0;ck0mp0;d0lo9m6n3ok0vX;centr1f4s3troll0;idVolid1;us0;b4pl3;ic1;in0;ur0;assi5os0;lebr1n5r3;ti3;fi0;tralB;a7i6o4roken,urn3;ed,t;il0r0t3und;tl0;as0;k0laIs0;bandon0cJdGffe2lDnBpp9ss7u3ward0;g4thor3;iz0;me3;nt0;o5u3;m0r0;li0re3;ci1;im1ticip1;at0;leg0t3;er0;ct0;ju4o6va3;nc0;st0;ce3knowledg0;pt0;ed\",\n  \"Determiner\": \"true¦aBboth,d9e6few,l4mu8neiDplenty,s3th2various,wh0;at0ich0;evC;at,e4is,ose;everal,ome;a,e0;!ast,s;a1i6l0very;!se;ch;e0u;!s;!n0;!o0y;th0;er\",\n  \"Adverb\": \"true¦a08b05d01eXfRhPinOjustNkinda,likewi00mLnIoDpBquite,r8s4t1up0very,well; to,wards5;h1iny bit,o0wiO;o,t6;en,us;eldom,o0uch;!me1rt0; of;hZtimes,w0A;a1e0;alT;ndomSthN;ar excellDer0oint blank; Nhaps;f3n0;ce0ly;! 0;ag03moX; courIten;ewKo0; longEt 0;onIwithstanding;aybe,eanwhiAore0;!ovB;! aboV;deed,steW;en0;ce;or2u0;lArther0;!moK; 0ev3;examp0good,suI;le;n1v0;er; mas0ough;se;e0irect1; 1finite0;ly;ju9trop;ackward,y 0;far,n0;ow; DbroCd nauseam,gBl6ny3part,s2t 0w4;be6l0mo6wor6;arge,ea5; soon,ide;mo1w0;ay;re;l 1mo0ready,so,ways;st;b1t0;hat;ut;ain;ad;lot,posteriori\",\n  \"Currency\": \"true¦$,aud,bQcOdJeurIfHgbp,hkd,iGjpy,kElDp8r7s3usd,x2y1z0¢,£,¥,ден,лв,руб,฿,₡,₨,€,₭,﷼;lotyQł;en,uanP;af,of;h0t5;e0il5;k0q0;elK;oubleJp,upeeJ;e2ound st0;er0;lingG;n0soF;ceEnies;empi7i7;n,r0wanzaCyatC;!onaBw;ls,nr;ori7ranc9;!os;en3i2kk,o0;b0ll2;ra5;me4n0rham4;ar3;e0ny;nt1;aht,itcoin0;!s\",\n  \"Adj|Present\": \"true¦a00bluZcRdMeKfHhollGidNlEmCnarrGoBp9qua8r7s4t2utt3w0;aIet,ound,ro0;ng,ug01;end0hin;er;e1l0mooth,our,pa8u8;i2ow;cu6daVlNpaJ;eplicaUigV;ck;aDr0;eseOime,ompt;bscu1pen,wn;atu0eLodeD;re;ay,eJi0;gNve;ow;i1r0;ee,inge;rm;l0mpty,xpress;abo4ic7;amp,e2i1oub0ry;le;ffu8r5;fu7libe0;raB;l4o0;mple9n2ol,rr1unterfe0;it;ect;juga6sum5;e1o0;se;an;nt;lig2pproxi0;ma0;te;ht\",\n  \"Comparable\": \"true¦0:3B;1:3Q;2:3F;3:2D;a3Ub3Cc30d2Qe2Jf27g1Vh1Li1Fj1Ek1Bl14m0Yn0To0Sp0Jqu0Hr08sJtEuDvBw5y4za0R;el11ou3A;a8e6hi1Hi4ry;ck0Dde,l4n1ry,se;d,y;a4i3T;k,ry;nti34ry;a4erda2ulgar;gue,in,st;g0pcomi31;a7en2Thi6i5ough,r4;anqu28en1ue;dy,g36me0ny,r03;ck,rs24;ll,me,rt,wd3I;aRcarQePhNiMkin0BlImGoEpDt7u5w4;eet,ift;b4dd0Vperfi1Wrre24;sta22t3;a8e7iff,r5u4;pUr1;a4ict,o2P;ig2Wn0N;a1ep,rn;le,rk,te0;e1Oi2Wright0;ci1Vft,l4on,re;emn,id;a4el0;ll,rt;e6i4y;g2Nm4;!y;ek,nd2T;ck,l0mp3;a4iRort,rill,y;dy,l01rp;ve0Ixy;ce,y;d,fe,int0l1Ev0U;a9e7i6o4ude;mantic,o16sy,u4;gh,nd;ch,pe,tzy;a4d,mo0A;dy,l;gg5ndom,p4re,w;id;ed;ai2i4;ck,et;hoBi1ClAo9r6u4;ny,r4;e,p3;egna2ic5o4;fouSud;ey,k0;liXor;ain,easa2;ny;dd,i0ld,ranL;aive,e6i5o4;b3isy,rm0Vsy;ce,mb3;a4w;r,t;ad,e6ild,o5u4;nda0Yte;ist,o1;a5ek,l4;low;s0ty;a8ewd,i7o4ucky;f0Gn5o12u4ve0w0Wy0K;d,sy;e0g;ke0tt3ve0;me,r4te;ge;e5i4;nd;en;ol0ui1B;cy,ll,n4;secu7t4;e4ima5;llege2rmedia4;te;re;aBe8i7o6u4;ge,m4ng1E;b3id;me0t;gh,l0;a4fVsita2;dy,v4;en0y;nd15ppy,r4;d,sh;aEenDhBiAl9oofy,r4;a7e6is0o4ue12;o4ss;vy;at,en,y;nd,y;ad,ib,ooE;a2d1;a4o4;st0;t3uiS;u1y;aDeeb3i9lat,o7r6u4;ll,n4r0S;!ny;aDesh,iend0;a4rmEul;my;erce5nan4;ciB;! ;le;ir,ke,n08r,st,ul4;ty;a7erie,sse5v4xtre0G;il;nti4;al;r5s4;tern,y;ly,th0;aCe9i6ru5u4;ll,mb;nk;r5vi4;ne;e,ty;a4ep,nB;d4f,r;!ly;ppVrk;aDhAl8o6r5u4;dd0r0te;isp,uel;ar4ld,mmon,st0ward0zy;se;e4ou1;ar,vO;e4il0;ap,e4;sy;gey,lm,ri4;ng;aJiHlEoCr6u4;r0sy;ly;a8i5o4;ad,wn;g5llia2;nt;ht;sh,ve;ld,un4;cy;a5o4ue;nd,o1;ck,nd;g,tt4;er;d,ld,w1;dy;bsu7ng6we4;so4;me;ry;rd\",\n  \"Infinitive\": \"true¦0:8W;1:8H;2:9E;3:7O;4:92;5:81;6:9A;7:83;8:9I;9:9H;A:93;B:8Y;C:7V;D:7L;E:7R;F:88;a81b7Hc6Rd5Je4Gf45g41h3Wi3Cj39k37l2Ym2Rnou3Vo2Mp25qu24r1As08tWuRvPwG;aMeLiJors3rG;eHiG;ng,te;ak,st5;d3e7FthG;draw,er;a2d,ep;i2ke,nGrn;d0t;aGie;li9Dni9ry;nGplift;cov0dHear7IlGplug,tie,ve84;ea9o3K;erGo;cut,go,sta9Fval95whelm;aPeNhKoJrG;aGemb5;ffi3Fmp5nsG;aCpi7;pp5ugh3;aHiHrGwaE;eat3i2;nk;aGll,m91;ch,se;ck5ilor,keGmp0r7M;! paE;a0Gc0Fe0Dh09i07l05m04n03o01pWquVtOuJwG;all70eeHiG;m,ng;p,t3;bIccumb,ffHggeBmm91p2ErG;mouFvi2;er,i4;li7YmerAsiGveE;de,st;aKe7RiIrG;ang5eGi2;ng20w;fGnW;f3le;gg0rG;t5ve;a3Ti9;a4BeJiIlHoGri6C;il,of;ay,it;ll,t;ak,nd;lGot6Kw;icDve;eak,i0K;a9ugg5;aGi8;m,y;ft,nGt;g,k;aIi5GoHriGun;nk,v5S;ot,rt3;ke,rp3tt0;eGll,nd,que7Jv0w;!k,m;avenAul7X;dd3tis17y;att5eHip3oG;am,ut;a05b03c01d00fXgroup,heaWiVlTmSnRpPq32sLtJvG;amp,eHiGo2R;sDve;l,rt;i7rG;ie2ofD;eFiItGurfa4;o1UrG;a5SiCuctu7;de,gn,st;el,hra1lGreseF;a4e65;d0ew,o02;a5Ne2Xo2;a6eFiGoad,y;e2nq3Hve;mbur1nf2Q;r1t;inHleCocus,re9uG;el,rbi9;an4e;aCu4;ei2k7Fla3KoGyc5;gni57nci5up,v0;oot,uG;ff;ct,liG;se,ze;a9en5Mit,o6;aUerSiRlumm0ToQrIuG;b3Lke,ni9rGt;poEs6T;eKoG;cId,fe35hibDnoHpo1sp0tru8vG;e,i8o4S;un4;la36u7;a5Dc1PdHf0occupy,sup0DvG;a5IeF;etermi43iC;a5Art4S;er4npoiF;cei2fo3Di9mea6plex,sGva8;eve7iB;mp0rGtrol,ve,y;a5Ot5K;bser2ccuJpIutHverGwe;lap,s16tu66u1;gr4Lnu1Ypa4;era6i3Tpo1;py,r;aKe07iHoGultiply;leBu61;micHnGspla4;ce,g5us;!k;iGke,naA;m,nta4F;aNeJiGo1u36;e,ke,ng0quGv3;eGi63;fy;aInGss3;d,gG;th3;rn,ve;ng22u1B;eep,nG;e3Now;o43uG;gg5xtaG;po1;gno7mUnG;cSdQfPgeBhOitia6ju7q11sMtIun5QvG;eGo0Q;nt,st;erHimi5NoxiOrG;odu4u8;aCn,prGru5N;et;iBpi7tGu7;il,ruC;abDibD;eBo28u1;iGulA;ca6;i6lu8;b59mer1pG;aEer44ly,oHrG;is5Ko2;rt,se,veG;ri9;aJeIiGoiBuE;de,jaGnd0;ck;ar,iO;mp0ng,pp3st3ve;ath0et,i2le1RoIrG;aGow;b,pp5ze;!ve4P;ast3er3Ii55lPorKrHuG;lf3Qr3M;eHiGolic;ght3;e2Xsh3;b3AeIfeDgGs48;eGi2;!t;clo1go,sGwa4G;had2V;ee,i2M;a0GdDl0Em09nRquip,rQsPt3AvNxG;cLeEha5iKpHtG;ing0Qol;eHi7lGo1unA;a2SoD;ct,di6;st,t;lu8;alua6oG;ke,l2;chew,pou1tab11;a1u4E;aWcTdRfQgOhan4joy,lNqMrLsuKtIvG;e0TisG;aAi4J;er,i4rG;a2Gen2UuB;e,re;i2Sol;ui7;arAiB;aAeGra2ulf;nd0;or4;ang0oGu7;r1w;lo1ou0ArHuG;mb0;oa2Iy3X;b5ct;bHerApG;hasi1Vow0;a0Sody,rG;a4oiG;d0l;ap1eCuG;ci3Nde;rGt;ma0Mn;a0Me01iIo,rGwind5;aw,edAoG;wn;agno1e,ff0g,mi26sJvG;eGulA;rGst;ge,t;ab5bTcNlodAmant5pLru3FsKtG;iGoEu2V;lHngG;ui9;!l;ol2ua8;eGla4o1ro2;n1r1;a2Me2VlJoHuG;ss;uGv0;raA;aGo1;im;a36ur1;af3bXcRduCep3fPliOmLnJpIra1Rta1LvG;eGol2;lop;aEiCoE;oGy;te,un4;eHoG;li9;an;mDv0;a4i03oGraud,y;rm;ei2iKoIrG;ee,yG;!pt;de,mGup5;missi2Spo1;de,ma6ph0;aHrief,uG;g,nk;rk;mp3rk3uF;a03ea1h01i00lZoHrGurta15;a2ea6ipp5;ales4eWhabDinci8llVmTnGrro8;cQdNfLju7no6qu0sJtIvG;eGin4;ne,rA;a0Fin23ribu6;er2iGoli25pi7titu6ult;d0st;iGroFu1;de,gu7rm;eHoG;ne;mn,n1;eGlu8ur;al,i2;buBe,men4pG;e6ly;eCi8u8;r4xiB;ean1iQ;rcumveFte;eGoo1;ri9w;ncGre3t0ulk;el;aWeQi8lNoMrJuG;iHrGy;st,y;ld;aHeastfeKiGoad3;ng;ke;il,l11mba0WrrLth0;aHeGow;ed;ze;!come,gKha2liJnd,queaIstHtGwild0;ray;ow;th;e2tt5;in;bysDckfi7ff5tG;he;it;b15c0Td0Kff0Igr0Hl0Dm09n03ppZrXsQttNuLvIwaG;it,k3;en;eEoG;id;rt;gGto06;meF;aHeBraC;ct;ch;pi7sHtoG;ni9;aIeGi03u7;mb5rt;le;il;re;g0Hi1ou1rG;anAi2;eaIly,oiFrG;ai1o2;nt;r,se;aKiOnHtG;icipa6;eHoGul;un4y;al;ly1;aHu1;se;lgaGze;ma6;iIlG;eAoGu8;t,w;gn;ee;ix,oG;rd;aZjLmiIoHsoG;rb;pt,rn;niGt;st0;er;ouHuB;st;rn;cJhie2knowledAquiGtiva6;es4re;ce;ge;eMomIrHusG;e,tom;ue;moHpG;any,li9;da6;te;pt;andMet,i8oIsG;coIol2;ve;li9rt,uG;nd;sh;de;on\",\n  \"Modal\": \"true¦c5lets,m4ought3sh1w0;ill,o5;a0o4;ll,nt;! to,a;ight,ust;an,o0;uld\",\n  \"Verb\": \"true¦born,cannot,gonna,has,keep tabs,msg\",\n  \"Participle\": \"true¦fl3g1s0writt2;e1h2;iv0one;en;own\",\n  \"Adj|Gerund\": \"true¦0:2D;1:2F;2:23;3:21;4:1Y;5:25;6:2B;7:20;a22b1Xc1Fd12e0Wf0Mg0Gh0Fi09jud1Vl06m03oZpVrPsEt9up8veYw0Nyiel4;lif0s01;aWeBhr9i3ouc7r8wis0;e01oub2us0yi1;ea0Li8;l2vi1;l2mp0;atisf6creec7hoc0Dkyrocke0lo12oGpFtBu9we8;e11l2;pp1Jr8;gi1pri5roun4;a9ea22i8ri09un1B;mula0r3;gge3r8;t2vi1;ark2ee4;a8ot7;ki1ri1;aCe9ive0o8us7;a3l2;defi12fres7ig12laEs0v8war4;ea2itali8ol0P;si1zi1;gi1ll6mb2vi1;a6erpleAier1Clun17r8un1I;e8o10;ce4s5vai2;xi1;ffsApMut9ver8wi1;arc7lap0Gp08ri4whel1K;goi1l6st0X;et0;eande3i9o0Eu8;mb2;s5tiga0;a9i8o0B;fesa0Ami0vi1;cJg0Us0;mCn8rri0B;cAs9te16vi8;go1Fti1;pi3ul0;orpo1Drea5;po5;arrowi1ea2orrif6umilia0;lCr8;a0ipZo9uel8;i1li1;undbrea8wi1;ki1;a3ea0Z;aGetc7it0lDoBr9ulf8;il2;ee0Yigh8ust12;te04;r8un4;ebo4th0H;a9o8;a0we3;mi1tte3;di1scina0;mBn9x8;ac0ci0is0plo4;ab2c8du3ga04sT;han0oura03;barras5er02p8;owe3;aJeCi8;s8zz6;appoin0gus0sen0t8;r8u0N;ac0es5;biliDcCfiMgra4mBpres5serAv8;asCelo8;pi1;vi1;an4eaI;a6liH;ta0;maOri1s7un0;aOhLlo5o8ripp2ut0;mEn8rrespon4;cerCfBspi3t8vinQ;in9r8;as0ibu0ol2;ui1;lic0u5;ni1;fCmBp8;e9ro8;mi5;l2ti1;an4;or0;a8ea0il2;llen8rQ;gi1;lOptiva0;eBin4lin4o9rui5u8;d4st2;i2oLri1un8;ci1;coJ;bsoQcLgonJlarImGppea2rEs8;pi3su3to8;n9un4;di1;is7;hi1;ri1;res0;li1;aBu5;si1;mi1;i8zi1;zi1;c8hi1;ele9ompan6;yi1;ra0;ti1;rbi1;ng\",\n  \"Person|Verb\": \"true¦b2ch1drew,grant,ja3ma0ollie,pat,rob,sue,wade;ck,rk;ase,u1;ob,u0;ck\",\n  \"Person|Noun\": \"true¦a04bYcVdOeMfLgJhGjCkitXlBm9olive,p6r3s2triniXv0wang;an,enus,iol0;a,et;ky,on5umm00;ay,e1o0uby;bin,d,se;ed,x;atNe0ol;aFn0;ny;a0eloQ;x,ya;a8eo,iD;a2e1o0;lDy;an,w3;de,smi4y;a0iKol8;ll,z0;el;ail,e0;ne;aith,ern,lo;a0dDmir,ula,ve;rl;a4e3i1ol0;ly;ck,x0;ie;an,ja;i0wn;sy;h0liff,rystal;ari0in,ristian;ty;ak4e3i2r0;an0ook;dy;ll;nedict,rg;er;l0rt;fredo,ma\",\n  \"Person|Place\": \"true¦a5darw6h3jordan,k2orlando,s0victo7;a0ydney;lvador,mara,ntiago;ent,obe;amil0ous0;ton;lexand1ust0;in;ria\",\n  \"Person|Date\": \"true¦a2j0sep;an0une;!uary;p0ugust,v0;ril\"\n}","const commonPrefix = function (w1, w2) {\n  let len = Math.min(w1.length, w2.length)\n  while (len > 0) {\n    const prefix = w1.slice(0, len)\n    if (prefix === w2.slice(0, len)) {\n      return prefix\n    }\n    len -= 1\n  }\n  return ''\n}\n\n/* Sort elements and remove duplicates from array (modified in place) */\nconst unique = function (a) {\n  a.sort()\n  for (let i = 1; i < a.length; i++) {\n    if (a[i - 1] === a[i]) {\n      a.splice(i, 1)\n    }\n  }\n}\n\nexport default {\n  commonPrefix,\n  unique\n}\n","const Histogram = function () {\n  this.counts = {}\n}\n\nconst methods = {\n  init: function (sym) {\n    if (this.counts[sym] === undefined) {\n      this.counts[sym] = 0\n    }\n  },\n  add: function (sym, n) {\n    if (n === undefined) {\n      n = 1\n    }\n    this.init(sym)\n    this.counts[sym] += n\n  },\n  countOf: function (sym) {\n    this.init(sym)\n    return this.counts[sym]\n  },\n  highest: function (top) {\n    let sorted = []\n    const keys = Object.keys(this.counts)\n    for (let i = 0; i < keys.length; i++) {\n      const sym = keys[i]\n      sorted.push([sym, this.counts[sym]])\n    }\n    sorted.sort(function (a, b) {\n      return b[1] - a[1]\n    })\n    if (top) {\n      sorted = sorted.slice(0, top)\n    }\n    return sorted\n  }\n}\n\nObject.keys(methods).forEach(function (k) {\n  Histogram.prototype[k] = methods[k]\n})\n\nexport default Histogram\n","const BASE = 36\nconst seq = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\nconst cache = seq.split('').reduce(function (h, c, i) {\n  h[c] = i\n  return h\n}, {})\n\n// 0, 1, 2, ..., A, B, C, ..., 00, 01, ... AA, AB, AC, ..., AAA, AAB, ...\nconst toAlphaCode = function (n) {\n  if (seq[n] !== undefined) {\n    return seq[n]\n  }\n  let places = 1\n  let range = BASE\n  let s = ''\n  for (; n >= range; n -= range, places++, range *= BASE) {}\n  while (places--) {\n    const d = n % BASE\n    s = String.fromCharCode((d < 10 ? 48 : 55) + d) + s\n    n = (n - d) / BASE\n  }\n  return s\n}\n\nconst fromAlphaCode = function (s) {\n  if (cache[s] !== undefined) {\n    return cache[s]\n  }\n  let n = 0\n  let places = 1\n  let range = BASE\n  let pow = 1\n  for (; places < s.length; n += range, places++, range *= BASE) {}\n  for (let i = s.length - 1; i >= 0; i--, pow *= BASE) {\n    let d = s.charCodeAt(i) - 48\n    if (d > 10) {\n      d -= 7\n    }\n    n += d * pow\n  }\n  return n\n}\n\nexport default {\n  toAlphaCode,\n  fromAlphaCode\n}\n","import Histogram from './histogram.js'\nimport encoding from '../encoding.js'\n\nconst config = {\n  NODE_SEP: ';',\n  KEY_VAL: ':',\n  STRING_SEP: ',',\n  TERMINAL_PREFIX: '!',\n  BASE: 36\n}\n// Return packed representation of Trie as a string.\n// Return packed representation of Trie as a string.\n//\n// Each node of the Trie is output on a single line.\n//\n// For example Trie(\"the them there thesis this\"):\n// {\n//    \"th\": {\n//      \"is\": 1,\n//      \"e\": {\n//        \"\": 1,\n//        \"m\": 1,\n//        \"re\": 1,\n//        \"sis\": 1\n//      }\n//    }\n//  }\n//\n// Would be reperesented as:\n//\n// th0\n// e0is\n// !m,re,sis\n//\n// The line begins with a '!' iff it is a terminal node of the Trie.\n// For each string property in a node, the string is listed, along\n// with a (relative!) line number of the node that string references.\n// Terminal strings (those without child node references) are\n// separated by ',' characters.\nconst nodeLine = function (self, node) {\n  let line = '',\n    sep = ''\n  if (self.isTerminal(node)) {\n    line += config.TERMINAL_PREFIX\n  }\n  const props = self.nodeProps(node)\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i]\n    if (typeof node[prop] === 'number') {\n      line += sep + prop\n      sep = config.STRING_SEP\n      continue\n    }\n    if (self.syms[node[prop]._n]) {\n      line += sep + prop + self.syms[node[prop]._n]\n      sep = ''\n      continue\n    }\n    let ref = encoding.toAlphaCode(node._n - node[prop]._n - 1 + self.symCount)\n    // Large reference to smaller string suffix -> duplicate suffix\n    if (node[prop]._g && ref.length >= node[prop]._g.length && node[node[prop]._g] === 1) {\n      ref = node[prop]._g\n      line += sep + prop + ref\n      sep = config.STRING_SEP\n      continue\n    }\n    line += sep + prop + ref\n    sep = ''\n  }\n  return line\n}\n\nconst analyzeRefs = function (self, node) {\n  if (self.visited(node)) {\n    return\n  }\n  const props = self.nodeProps(node, true)\n  for (let i = 0; i < props.length; i++) {\n    const prop = props[i]\n    const ref = node._n - node[prop]._n - 1\n    // Count the number of single-character relative refs\n    if (ref < config.BASE) {\n      self.histRel.add(ref)\n    }\n    // Count the number of characters saved by converting an absolute\n    // reference to a one-character symbol.\n    self.histAbs.add(node[prop]._n, encoding.toAlphaCode(ref).length - 1)\n    analyzeRefs(self, node[prop])\n  }\n}\n\nconst symbolCount = function (self) {\n  self.histAbs = self.histAbs.highest(config.BASE)\n  const savings = []\n  savings[-1] = 0\n  let best = 0,\n    sCount = 0\n  const defSize = 3 + encoding.toAlphaCode(self.nodeCount).length\n  for (let sym = 0; sym < config.BASE; sym++) {\n    if (self.histAbs[sym] === undefined) {\n      break\n    }\n    savings[sym] =\n      self.histAbs[sym][1] -\n      defSize -\n      self.histRel.countOf(config.BASE - sym - 1) +\n      savings[sym - 1]\n    if (savings[sym] >= best) {\n      best = savings[sym]\n      sCount = sym + 1\n    }\n  }\n  return sCount\n}\n\nconst numberNodes = function (self, node) {\n  // Topological sort into nodes array\n  if (node._n !== undefined) {\n    return\n  }\n  const props = self.nodeProps(node, true)\n  for (let i = 0; i < props.length; i++) {\n    numberNodes(self, node[props[i]]) //recursive\n  }\n  node._n = self.pos++\n  self.nodes.unshift(node)\n}\n\nconst pack = function (self) {\n  self.nodes = []\n  self.nodeCount = 0\n  self.syms = {}\n  self.symCount = 0\n  self.pos = 0\n  // Make sure we've combined all the common suffixes\n  self.optimize()\n  self.histAbs = new Histogram()\n  self.histRel = new Histogram()\n  numberNodes(self, self.root)\n  self.nodeCount = self.nodes.length\n  self.prepDFS()\n  analyzeRefs(self, self.root)\n  self.symCount = symbolCount(self)\n  for (let sym = 0; sym < self.symCount; sym++) {\n    self.syms[self.histAbs[sym][0]] = encoding.toAlphaCode(sym)\n  }\n  for (let i = 0; i < self.nodeCount; i++) {\n    self.nodes[i] = nodeLine(self, self.nodes[i])\n  }\n  // Prepend symbols\n  for (let sym = self.symCount - 1; sym >= 0; sym--) {\n    self.nodes.unshift(\n      encoding.toAlphaCode(sym) +\n        config.KEY_VAL +\n        encoding.toAlphaCode(self.nodeCount - self.histAbs[sym][0] - 1)\n    )\n  }\n  return self.nodes.join(config.NODE_SEP)\n}\n\nexport default pack\n","import fns from './fns.js'\nimport pack from './pack.js'\nconst NOT_ALLOWED = new RegExp('[0-9A-Z,;!:|¦]') //characters banned from entering the trie\n// reserved propery names\nconst internal = {\n  _d: true,\n  _v: true,\n  _c: true,\n  _g: true,\n  _n: true,\n}\n\nconst methods = {\n  // Insert words from one big string, or from an array.\n  insertWords: function (words) {\n    if (words === undefined) {\n      return\n    }\n    if (typeof words === 'string') {\n      words = words.split(/[^a-zA-Z]+/)\n    }\n    for (let i = 0; i < words.length; i++) {\n      words[i] = words[i].toLowerCase()\n    }\n    fns.unique(words)\n    for (let i = 0; i < words.length; i++) {\n      if (words[i].match(NOT_ALLOWED) === null) {\n        this.insert(words[i])\n      }\n    }\n  },\n\n  insert: function (word) {\n    this._insert(word, this.root)\n    const lastWord = this.lastWord\n    this.lastWord = word\n\n    const prefix = fns.commonPrefix(word, lastWord)\n    if (prefix === lastWord) {\n      return\n    }\n\n    const freeze = this.uniqueNode(lastWord, word, this.root)\n    if (freeze) {\n      this.combineSuffixNode(freeze)\n    }\n  },\n\n  _insert: function (word, node) {\n    let prefix, next\n\n    // Duplicate word entry - ignore\n    if (word.length === 0) {\n      return\n    }\n\n    // Do any existing props share a common prefix?\n    const keys = Object.keys(node)\n    for (let i = 0; i < keys.length; i++) {\n      const prop = keys[i]\n      prefix = fns.commonPrefix(word, prop)\n      if (prefix.length === 0) {\n        continue\n      }\n      // Prop is a proper prefix - recurse to child node\n      if (prop === prefix && typeof node[prop] === 'object') {\n        this._insert(word.slice(prefix.length), node[prop])\n        return\n      }\n      // Duplicate terminal string - ignore\n      if (prop === word && typeof node[prop] === 'number') {\n        return\n      }\n      next = {}\n      next[prop.slice(prefix.length)] = node[prop]\n      this.addTerminal(next, word = word.slice(prefix.length))\n      delete node[prop]\n      node[prefix] = next\n      this.wordCount++\n      return\n    }\n\n    // No shared prefix.  Enter the word here as a terminal string.\n    this.addTerminal(node, word)\n    this.wordCount++\n  },\n\n  // Add a terminal string to node.\n  // If 2 characters or less, just add with value == 1.\n  // If more than 2 characters, point to shared node\n  // Note - don't prematurely share suffixes - these\n  // terminals may become split and joined with other\n  // nodes in this part of the tree.\n  addTerminal: function (node, prop) {\n    if (prop.length <= 1) {\n      node[prop] = 1\n      return\n    }\n    const next = {}\n    node[prop[0]] = next\n    this.addTerminal(next, prop.slice(1))\n  },\n\n  // Well ordered list of properties in a node (string or object properties)\n  // Use nodesOnly==true to return only properties of child nodes (not\n  // terminal strings.\n  nodeProps: function (node, nodesOnly) {\n    const props = []\n    for (const prop in node) {\n      // is it a usuable prop, or a special reserved one?\n      if (prop !== '' && !internal.hasOwnProperty(prop)) {\n        if (!nodesOnly || typeof node[prop] === 'object') {\n          props.push(prop)\n        }\n      }\n    }\n    props.sort()\n    return props\n  },\n\n  optimize: function () {\n    this.combineSuffixNode(this.root)\n    this.prepDFS()\n    this.countDegree(this.root)\n    this.prepDFS()\n    this.collapseChains(this.root)\n  },\n\n  // Convert Trie to a DAWG by sharing identical nodes\n  combineSuffixNode: function (node) {\n    // Frozen node - can't change.\n    if (node._c) {\n      return node\n    }\n    // Make sure all children are combined and generate unique node\n    // signature for this node.\n    let sig = []\n    if (this.isTerminal(node)) {\n      sig.push('!')\n    }\n    const props = this.nodeProps(node)\n    for (let i = 0; i < props.length; i++) {\n      const prop = props[i]\n      if (typeof node[prop] === 'object') {\n        node[prop] = this.combineSuffixNode(node[prop])\n        sig.push(prop)\n        sig.push(node[prop]._c)\n      } else {\n        sig.push(prop)\n      }\n    }\n    sig = sig.join('-')\n\n    const shared = this.suffixes[sig]\n    if (shared) {\n      return shared\n    }\n    this.suffixes[sig] = node\n    node._c = this.cNext++\n    return node\n  },\n\n  prepDFS: function () {\n    this.vCur++\n  },\n\n  visited: function (node) {\n    if (node._v === this.vCur) {\n      return true\n    }\n    node._v = this.vCur\n    return false\n  },\n\n  countDegree: function (node) {\n    if (node._d === undefined) {\n      node._d = 0\n    }\n    node._d++\n    if (this.visited(node)) {\n      return\n    }\n    const props = this.nodeProps(node, true)\n    for (let i = 0; i < props.length; i++) {\n      this.countDegree(node[props[i]])\n    }\n  },\n\n  // Remove intermediate singleton nodes by hoisting into their parent\n  collapseChains: function (node) {\n    let prop, child, i\n    if (this.visited(node)) {\n      return\n    }\n    const props = this.nodeProps(node)\n    for (i = 0; i < props.length; i++) {\n      prop = props[i]\n      child = node[prop]\n      if (typeof child !== 'object') {\n        continue\n      }\n      this.collapseChains(child)\n      // Hoist the singleton child's single property to the parent\n      if (child._g !== undefined && (child._d === 1 || child._g.length === 1)) {\n        delete node[prop]\n        prop += child._g\n        node[prop] = child[child._g]\n      }\n    }\n    // Identify singleton nodes\n    if (props.length === 1 && !this.isTerminal(node)) {\n      node._g = prop\n    }\n  },\n\n  isTerminal: function (node) {\n    return !!node['']\n  },\n\n  // Find highest node in Trie that is on the path to word\n  // and that is NOT on the path to other.\n  uniqueNode: function (word, other, node) {\n    const props = this.nodeProps(node, true)\n    for (let i = 0; i < props.length; i++) {\n      const prop = props[i]\n      if (prop === word.slice(0, prop.length)) {\n        if (prop !== other.slice(0, prop.length)) {\n          return node[prop]\n        }\n        return this.uniqueNode(word.slice(prop.length), other.slice(prop.length), node[prop])\n      }\n    }\n    return undefined\n  },\n\n  pack: function () {\n    return pack(this)\n  }\n}\nexport default methods\n","import methods from './methods.js'\n/*\n A JavaScript implementation of a Trie search datastructure.\nEach node of the Trie is an Object that can contain the following properties:\n      '' - If present (with value == 1), the node is a Terminal Node - the prefix\n          leading to this node is a word in the dictionary.\n      numeric properties (value == 1) - the property name is a terminal string\n          so that the prefix + string is a word in the dictionary.\n      Object properties - the property name is one or more characters to be consumed\n          from the prefix of the test string, with the remainder to be checked in\n          the child node.\n      '_c': A unique name for the node (starting from 1), used in combining Suffixes.\n      '_n': Created when packing the Trie, the sequential node number\n          (in pre-order traversal).\n      '_d': The number of times a node is shared (it's in-degree from other nodes).\n      '_v': Visited in DFS.\n      '_g': For singleton nodes, the name of it's single property.\n */\nconst Trie = function (words) {\n  this.root = {}\n  this.lastWord = ''\n  this.suffixes = {}\n  this.suffixCounts = {}\n  this.cNext = 1\n  this.wordCount = 0\n  this.insertWords(words)\n  this.vCur = 0\n}\n\nObject.keys(methods).forEach(function (k) {\n  Trie.prototype[k] = methods[k]\n})\n\nexport default Trie\n","import encoding from '../encoding.js'\n\nconst symbols = function (t) {\n  //... process these lines\n  const reSymbol = new RegExp('([0-9A-Z]+):([0-9A-Z]+)')\n  for (let i = 0; i < t.nodes.length; i++) {\n    const m = reSymbol.exec(t.nodes[i])\n    if (!m) {\n      t.symCount = i\n      break\n    }\n    t.syms[encoding.fromAlphaCode(m[1])] = encoding.fromAlphaCode(m[2])\n  }\n  //remove from main node list\n  t.nodes = t.nodes.slice(t.symCount, t.nodes.length)\n}\nexport default symbols\n","import parseSymbols from './symbols.js'\nimport encoding from '../encoding.js'\n\n// References are either absolute (symbol) or relative (1 - based)\nconst indexFromRef = function (trie, ref, index) {\n  const dnode = encoding.fromAlphaCode(ref)\n  if (dnode < trie.symCount) {\n    return trie.syms[dnode]\n  }\n  return index + dnode + 1 - trie.symCount\n}\n\nconst toArray = function (trie) {\n  const all = []\n  const crawl = (index, pref) => {\n    let node = trie.nodes[index]\n    if (node[0] === '!') {\n      all.push(pref)\n      node = node.slice(1) //ok, we tried. remove it.\n    }\n    const matches = node.split(/([A-Z0-9,]+)/g)\n    for (let i = 0; i < matches.length; i += 2) {\n      const str = matches[i]\n      const ref = matches[i + 1]\n      if (!str) {\n        continue\n      }\n      const have = pref + str\n      //branch's end\n      if (ref === ',' || ref === undefined) {\n        all.push(have)\n        continue\n      }\n      const newIndex = indexFromRef(trie, ref, index)\n      crawl(newIndex, have)\n    }\n  }\n  crawl(0, '')\n  return all\n}\n\n//PackedTrie - Trie traversal of the Trie packed-string representation.\nconst unpack = function (str) {\n  const trie = {\n    nodes: str.split(';'),\n    syms: [],\n    symCount: 0\n  }\n  //process symbols, if they have them\n  if (str.match(':')) {\n    parseSymbols(trie)\n  }\n  return toArray(trie)\n}\n\nexport default unpack\n","/** patterns for turning 'bus' to 'buses'*/\nconst suffixes = {\n  a: [\n    [/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'],\n    [/ia$/i, 'ia'],\n  ],\n  e: [\n    [/(kn|l|w)ife$/i, '$1ives'],\n    [/(hive)$/i, '$1s'],\n    [/([m|l])ouse$/i, '$1ice'],\n    [/([m|l])ice$/i, '$1ice'],\n  ],\n  f: [\n    [/^(dwar|handkerchie|hoo|scar|whar)f$/i, '$1ves'],\n    [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i, '$1ves'],\n  ],\n  i: [[/(octop|vir)i$/i, '$1i']],\n  m: [[/([ti])um$/i, '$1a']],\n  n: [[/^(oxen)$/i, '$1']],\n  o: [[/(al|ad|at|er|et|ed)o$/i, '$1oes']],\n  s: [\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|status)$/i, '$1es'],\n    [/sis$/i, 'ses'],\n    [/(bu)s$/i, '$1ses'],\n    [/(sis)$/i, 'ses'],\n    [/^(?!talis|.*hu)(.*)man$/i, '$1men'],\n    [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i'],\n  ],\n  x: [\n    [/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'],\n    [/^(ox)$/i, '$1en'],\n  ],\n  y: [[/([^aeiouy]|qu)y$/i, '$1ies']],\n  z: [[/(quiz)$/i, '$1zes']],\n}\nexport default suffixes\n","import rules from './_rules.js'\nconst addE = /([xsz]|ch|sh)$/\n\nconst trySuffix = function (str) {\n  let c = str[str.length - 1]\n  if (rules.hasOwnProperty(c) === true) {\n    for (let i = 0; i < rules[c].length; i += 1) {\n      let reg = rules[c][i][0]\n      if (reg.test(str) === true) {\n        return str.replace(reg, rules[c][i][1])\n      }\n    }\n  }\n  return null\n}\n/** Turn a singular noun into a plural\n * assume the given string is singular\n */\nconst pluralize = function (str = '', model) {\n  let { irregularPlurals, uncountable } = model.two\n  // is it a word without a plural form?\n  if (uncountable.hasOwnProperty(str)) {\n    return str\n  }\n  // check irregulars list\n  if (irregularPlurals.hasOwnProperty(str)) {\n    return irregularPlurals[str]\n  }\n  //we have some rules to try-out\n  let plural = trySuffix(str)\n  if (plural !== null) {\n    return plural\n  }\n  //like 'church'\n  if (addE.test(str)) {\n    return str + 'es'\n  }\n  // ¯\\_(ツ)_/¯\n  return str + 's'\n}\nexport default pluralize\n","import lexData from './_data.js'\nimport { unpack } from 'efrt'\nimport misc from './misc.js'\nimport emoticons from './emoticons.js'\nimport toPlural from '../../methods/transform/nouns/toPlural/index.js'\nimport irregularPlurals from '../irregulars/plurals.js'\n\n// unpack our lexicon of words\n// (found in ./lexicon/)\n\n// more clever things are done on the data later\n//  - once the plugin is applied\nconst hasSwitch = /\\|/\nlet lexicon = misc\nlet switches = {}\n\nconst tmpModel = { two: { irregularPlurals, uncountable: {} } }\n\nObject.keys(lexData).forEach(tag => {\n  let wordsObj = unpack(lexData[tag])\n  // POS tag, or something fancier?\n  if (!hasSwitch.test(tag)) {\n    // set them as simple word key-value lookup\n    Object.keys(wordsObj).forEach(w => {\n      lexicon[w] = tag\n    })\n    return\n  }\n  // add them as seperate key-val object\n  Object.keys(wordsObj).forEach(w => {\n    switches[w] = tag\n    // pluralize Noun|Verb switches\n    if (tag === 'Noun|Verb') {\n      let plural = toPlural(w, tmpModel)\n      switches[plural] = 'Plural|Verb'\n    }\n  })\n})\n// add ':)'\nemoticons.forEach(str => lexicon[str] = 'Emoticon')\n\n// misc cleanup\ndelete lexicon['']\ndelete lexicon[null]\ndelete lexicon[' ']\nexport { lexicon, switches }\n","//words that can't be compressed, for whatever reason\nlet misc = {\n  // numbers\n  '20th century fox': 'Organization',\n  '7 eleven': 'Organization',\n  'motel 6': 'Organization',\n  g8: 'Organization',\n  vh1: 'Organization',\n\n  'km2': 'Unit',\n  'm2': 'Unit',\n  'dm2': 'Unit',\n  'cm2': 'Unit',\n  'mm2': 'Unit',\n  'mile2': 'Unit',\n  'in2': 'Unit',\n  'yd2': 'Unit',\n  'ft2': 'Unit',\n  'm3': 'Unit',\n  'dm3': 'Unit',\n  'cm3': 'Unit',\n  'in3': 'Unit',\n  'ft3': 'Unit',\n  'yd3': 'Unit',\n\n\n  // ampersands\n  'at&t': 'Organization',\n  'black & decker': 'Organization',\n  'h & m': 'Organization',\n  'johnson & johnson': 'Organization',\n  'procter & gamble': 'Organization',\n  \"ben & jerry's\": 'Organization',\n  '&': 'Conjunction',\n\n  //pronouns\n  i: ['Pronoun', 'Singular'],\n  he: ['Pronoun', 'Singular'],\n  she: ['Pronoun', 'Singular'],\n  it: ['Pronoun', 'Singular'],\n  they: ['Pronoun', 'Plural'],\n  we: ['Pronoun', 'Plural'],\n  was: ['Copula', 'PastTense'],\n  is: ['Copula', 'PresentTense'],\n  are: ['Copula', 'PresentTense'],\n  am: ['Copula', 'PresentTense'],\n  were: ['Copula', 'PastTense'],\n  her: ['Possessive', 'Pronoun'],\n  his: ['Possessive', 'Pronoun'],\n  hers: ['Possessive', 'Pronoun'],\n  their: ['Possessive', 'Pronoun'],\n  themselves: ['Possessive', 'Pronoun'],\n  your: ['Possessive', 'Pronoun'],\n  our: ['Possessive', 'Pronoun'],\n  my: ['Possessive', 'Pronoun'],\n  its: ['Possessive', 'Pronoun'],\n\n  // misc\n  vs: ['Conjunction', 'Abbreviation'],\n  if: ['Condition', 'Preposition'],\n  closer: 'Comparative',\n  closest: 'Superlative',\n  much: 'Adverb',\n  may: 'Modal',\n\n\n  // irregular conjugations with two forms\n  babysat: 'PastTense',\n  blew: 'PastTense',\n  drank: 'PastTense',\n  drove: 'PastTense',\n  forgave: 'PastTense',\n  skiied: 'PastTense',\n  spilt: 'PastTense',\n  stung: 'PastTense',\n  swam: 'PastTense',\n  swung: 'PastTense',\n  guaranteed: 'PastTense',\n  shrunk: 'PastTense',\n\n  // support 'near', 'nears', 'nearing'\n  nears: 'PresentTense',\n  nearing: 'Gerund',\n  neared: 'PastTense',\n\n  no: ['Negative', 'Expression'],\n\n  // there: 'There'\n}\nexport default misc\n","import traverse from './traverse.js'\n\nconst unpack = function (str) {\n  if (!str) {\n    return {}\n  }\n  //turn the weird string into a key-value object again\n  const obj = str.split('|').reduce((h, s) => {\n    const arr = s.split('¦')\n    h[arr[0]] = arr[1]\n    return h\n  }, {})\n  const all = {}\n  Object.keys(obj).forEach(function (cat) {\n    const arr = traverse(obj[cat])\n    //special case, for botched-boolean\n    if (cat === 'true') {\n      cat = true\n    }\n    for (let i = 0; i < arr.length; i++) {\n      const k = arr[i]\n      if (all.hasOwnProperty(k) === true) {\n        if (Array.isArray(all[k]) === false) {\n          all[k] = [all[k], cat]\n        } else {\n          all[k].push(cat)\n        }\n      } else {\n        all[k] = cat\n      }\n    }\n  })\n  return all\n}\n\nexport default unpack\n","//just some of the most common emoticons\n//faster than\n//http://stackoverflow.com/questions/28077049/regex-matching-emoticons\nexport default [\n  ':(',\n  ':)',\n  ':P',\n  ':p',\n  ':O',\n  ';(',\n  ';)',\n  ';P',\n  ';p',\n  ';O',\n  ':3',\n  ':|',\n  ':/',\n  ':\\\\',\n  ':$',\n  ':*',\n  ':@',\n  ':-(',\n  ':-)',\n  ':-P',\n  ':-p',\n  ':-O',\n  ':-3',\n  ':-|',\n  ':-/',\n  ':-\\\\',\n  ':-$',\n  ':-*',\n  ':-@',\n  ':^(',\n  ':^)',\n  ':^P',\n  ':^p',\n  ':^O',\n  ':^3',\n  ':^|',\n  ':^/',\n  ':^\\\\',\n  ':^$',\n  ':^*',\n  ':^@',\n  '):',\n  '(:',\n  '$:',\n  '*:',\n  ')-:',\n  '(-:',\n  '$-:',\n  '*-:',\n  ')^:',\n  '(^:',\n  '$^:',\n  '*^:',\n  '<3',\n  '</3',\n  '<\\\\3',\n  '=('\n]","const jj = 'Adjective'\n\nexport default {\n  beforeTags: {\n    Determiner: jj, //the detailed\n    // Copula: jj, //is detailed\n    Possessive: jj, //spencer's detailed\n  },\n\n  afterTags: {\n    // Noun: jj, //detailed plan, overwhelming evidence\n    Adjective: jj, //intoxicated little\n  },\n\n  beforeWords: {\n    seem: jj, //seem prepared\n    seemed: jj,\n    seems: jj,\n    feel: jj, //feel prepared\n    feels: jj,\n    felt: jj,\n    appear: jj,\n    appears: jj,\n    appeared: jj,\n    also: jj,\n    over: jj, //over cooked\n    under: jj,\n    too: jj, //too insulting\n    it: jj, //find it insulting\n    but: jj, //nothing but frustrating\n    still: jj, //still scared\n    // adverbs that are adjective-ish\n    really: jj, //really damaged\n    quite: jj,\n    well: jj,\n    very: jj,\n    how: jj,//how slow\n    deeply: jj,\n    // always: jj,\n    // never: jj,\n    profoundly: jj,\n    extremely: jj,\n    so: jj,\n    badly: jj,\n    mostly: jj,\n    totally: jj,\n    awfully: jj,\n    rather: jj,\n    nothing: jj, //nothing secret, \n    something: jj,//something wrong\n    anything: jj,\n    not: jj,//not swell\n    me: jj,//called me swell\n    is: jj,\n  },\n  afterWords: {\n    too: jj, //insulting too\n    also: jj, //insulting too\n    or: jj, //insulting or\n  },\n}\n","const g = 'Gerund'\n\n// Adj|Gerund\n// Noun|Gerund\n\nexport default {\n  beforeTags: {\n    // Verb: g, // loves shocking\n    Adverb: g, //quickly shocking\n    Preposition: g, //by insulting\n    Conjunction: g, //to insulting\n  },\n  afterTags: {\n    Adverb: g, //shocking quickly\n    Possessive: g, //shocking spencer's\n    Person: g, //telling spencer\n    Pronoun: g, //shocking him\n    Determiner: g, //shocking the\n    Copula: g, //shocking is\n    Preposition: g, //dashing by, swimming in\n    Conjunction: g, //insulting to\n    Comparative: g, //growing shorter\n  },\n  beforeWords: {\n    been: g,\n    keep: g,//keep going\n    continue: g,//\n    stop: g,//\n    am: g,//am watching\n    be: g,//be timing\n    me: g,//got me thinking\n    // action-words\n    began: g,\n    start: g,\n    starts: g,\n    started: g,\n    stops: g,\n    stopped: g,\n    help: g,\n    helps: g,\n    avoid: g,\n    avoids: g,\n    love: g,//love painting\n    loves: g,\n    loved: g,\n    hate: g,\n    hates: g,\n    hated: g,\n    // was:g,//was working\n    // is:g,\n    // be:g,\n  },\n  afterWords: {\n    you: g, //telling you\n    me: g, //\n    her: g, //\n    him: g, //\n    them: g, //\n    their: g, // fighting their\n    it: g, //dumping it\n    this: g, //running this\n    there: g, // swimming there\n    on: g, // landing on\n    about: g, // talking about\n    for: g, // paying for\n  },\n}\n","import adj from './_adj.js'\nimport gerund from './_gerund.js'\n\n// rallying the troops\n// her rallying cry\nconst clue = {\n  beforeTags: Object.assign({}, adj.beforeTags, gerund.beforeTags, {\n    // Copula: 'Adjective', \n    Imperative: 'Gerund',//recommend living in\n    Infinitive: 'Adjective',//say charming things\n    PresentTense: 'Gerund',\n    Plural: 'Gerund'//kids cutting\n  }),\n\n  afterTags: Object.assign({}, adj.afterTags, gerund.afterTags, {\n    Singular: 'Adjective'//shocking ignorance\n  }),\n\n  beforeWords: Object.assign({}, adj.beforeWords, gerund.beforeWords, {\n    is: 'Adjective',\n    was: 'Adjective',\n    suggest: 'Gerund',\n    recommend: 'Gerund',\n  }),\n\n  afterWords: Object.assign({}, adj.afterWords, gerund.afterWords, {\n    to: 'Gerund',\n    not: 'Gerund',//trying not to car\n    the: 'Gerund' //sweeping the country\n  }),\n}\n// console.log(clue)\nexport default clue","const n = 'Singular'\nexport default {\n  beforeTags: {\n    Determiner: n, //the date\n    Possessive: n, //his date\n    Acronym: n,//u.s. state\n    // ProperNoun:n,\n    Noun: n, //nasa funding\n    Adjective: n, //whole bottles\n    // Verb:true, //save storm victims\n    PresentTense: n, //loves hiking\n    Gerund: n, //uplifting victims\n    PastTense: n, //saved storm victims\n    Infinitive: n, //profess love\n    Date: n,//9pm show\n    Ordinal: n,//first date\n    Demonym: n//dutch map\n  },\n  afterTags: {\n    Value: n, //date nine  -?\n    Modal: n, //date would\n    Copula: n, //fear is\n    PresentTense: n, //babysitting sucks\n    PastTense: n, //babysitting sucked\n    // Noun:n, //talking therapy, planning process\n    Demonym: n//american touch\n  },\n  // ownTags: { ProperNoun: n },\n  beforeWords: {\n    the: n,//the brands\n    with: n,//with cakes\n    without: n,//\n    // was:n, //was time  -- was working\n    // is:n, //\n    of: n, //of power\n    for: n, //for rats\n    any: n, //any rats\n    all: n, //all tips\n    on: n, //on time\n    // thing-ish verbs\n    cut: n,//cut spending\n    cuts: n,//cut spending\n    increase: n,// increase funding\n    decrease: n,//\n    raise: n,// \n    drop: n,//\n    // give: n,//give parents\n    save: n,//\n    saved: n,//\n    saves: n,//\n    make: n,//\n    makes: n,//\n    made: n,//\n    minus: n,//minus laughing\n    plus: n,//\n    than: n,//more than age\n    another: n,//\n    versus: n,//\n    neither: n,//\n    // strong adjectives\n    favorite: n,//\n    best: n,//\n    daily: n,//\n    weekly: n,//\n    linear: n,//\n    binary: n,//\n    mobile: n,//\n    lexical: n,//\n    technical: n,//\n    computer: n,//\n    scientific: n,//\n    formal: n,\n    no: n,//no worries\n    more: n//more details\n  },\n  afterWords: {\n    of: n, //date of birth (preposition)\n    system: n,\n    aid: n,\n    method: n,\n    utility: n,\n    tool: n,\n    reform: n,\n    therapy: n,\n    philosophy: n,\n    room: n,\n    authority: n,\n    says: n,\n    said: n,\n    wants: n,\n    wanted: n,\n    is: n,\n    can: n,//parents can\n  },\n}\n","import adj from './_adj.js'\nimport noun from './_noun.js'\n// the commercial market\n// watching the commercial\n\nconst misc = {\n  beforeTags: {\n    Determiner: undefined, //the premier university\n    Cardinal: 'Noun',//1950 convertable\n    PhrasalVerb: 'Adjective'//starts out fine\n  }\n}\nconst clue = {\n  beforeTags: Object.assign({}, adj.beforeTags, noun.beforeTags, misc.beforeTags),\n  afterTags: Object.assign({}, adj.afterTags, noun.afterTags),\n  beforeWords: Object.assign({}, adj.beforeWords, noun.beforeWords, {\n    // are representative\n    are: 'Adjective', is: 'Adjective', was: 'Adjective', be: 'Adjective',\n    // phrasals\n    off: 'Adjective',//start off fine\n    out: 'Adjective',//comes out fine\n  }),\n  afterWords: Object.assign({}, adj.afterWords, noun.afterWords),\n}\nexport default clue","import adj from './_adj.js'\n\n// the boiled egg\n// boiled the water\nlet past = 'PastTense'\n\nconst adjPast = {\n  beforeTags: {\n    Adverb: past, //quickly detailed\n    Pronoun: past, //he detailed\n    ProperNoun: past, //toronto closed\n    Auxiliary: past,\n    Noun: past, //eye closed  -- i guess.\n  },\n  afterTags: {\n    Possessive: past, //hooked him\n    Pronoun: past, //hooked me\n    Determiner: past, //hooked the\n    Adverb: past, //cooked perfectly\n    Comparative: past,//closed higher\n    Date: past,// alleged thursday\n  },\n  beforeWords: {\n    be: past,//be hooked vs be embarrassed\n    who: past,//who lost\n    get: 'Adjective',//get charged\n    had: past,\n    has: past,\n    have: past,\n    been: past,\n    it: past,//it intoxicated him\n    as: past,//as requested\n    for: 'Adjective',//for discounted items\n  },\n  afterWords: {\n    by: past, //damaged by\n    back: past, //charged back\n    out: past, //charged out\n    in: past, //crowded in\n    up: past, //heated up\n    down: past, //hammered down\n    for: past, //settled for\n    the: past, //settled the\n    with: past, //obsessed with\n    as: past, //known as\n    on: past, //focused on\n    at: past, //recorded at\n    between: past,//settled between\n  },\n}\n\nexport default {\n  beforeTags: Object.assign({}, adj.beforeTags, adjPast.beforeTags),\n  afterTags: Object.assign({}, adj.afterTags, adjPast.afterTags),\n  beforeWords: Object.assign({}, adj.beforeWords, adjPast.beforeWords),\n  afterWords: Object.assign({}, adj.afterWords, adjPast.afterWords),\n}","const v = 'Infinitive'\n\nexport default {\n  beforeTags: {\n    Modal: v, //would date\n    Adverb: v, //quickly date\n    Negative: v, //not date\n    Plural: v, //characters drink\n    // ProperNoun: vb,//google thought\n  },\n  afterTags: {\n    Determiner: v, //flash the\n    Adverb: v, //date quickly\n    Possessive: v, //date his\n    Reflexive: v,//resolve yourself\n    // Noun:true, //date spencer\n    Preposition: v, //date around, dump onto, grumble about\n    // Conjunction: v, // dip to, dip through\n  },\n  beforeWords: {\n    i: v, //i date\n    we: v, //we date\n    you: v, //you date\n    they: v, //they date\n    to: v, //to date\n    please: v, //please check\n    will: v, //will check\n    have: v,\n    had: v,\n    would: v,\n    could: v,\n    should: v,\n    do: v,\n    did: v,\n    does: v,\n    can: v,\n    must: v,\n    us: v,\n    me: v,\n    let: v,\n    even: v,\n    when: v,\n    // them: v,\n    he: v,\n    she: v,\n    it: v,\n    being: v,\n    // prefixes\n    bi: v,\n    co: v,\n    contra: v,\n    de: v,\n    inter: v,\n    intra: v,\n    mis: v,\n    pre: v,\n    out: v,\n    counter: v,\n    // un: v,\n    // over: v,\n    // under: v,\n  },\n  afterWords: {\n    the: v, //echo the\n    me: v, //date me\n    you: v, //date you\n    him: v, //loves him\n    her: v, //\n    them: v, //\n    it: v, //hope it\n    a: v, //covers a\n    an: v, //covers an\n    // from: v, //ranges from\n    up: v,//serves up\n    down: v,//serves up\n    by: v,\n    // in: v, //bob in\n    out: v,\n    // on: v,\n    off: v,\n    under: v,\n    when: v,//starts when\n    // for:true, //settled for\n    all: v,//shiver all night\n    // conjunctions\n    to: v,//dip to\n    because: v,//\n    although: v,//\n    before: v,//\n    how: v,//\n    otherwise: v,//\n    together: v,//fit together\n    though: v,//\n    into: v,//\n    yet: v,//\n    more: v,//kill more\n  },\n}\n","import adj from './_adj.js'\nimport verb from './_verb.js'\n\n// 'would mean' vs 'is mean'\nconst misc = {\n  afterTags: {\n    Noun: 'Adjective',//ruling party\n    Conjunction: undefined //clean and excellent\n  }\n}\nconst clue = {\n  beforeTags: Object.assign({}, adj.beforeTags, verb.beforeTags, {\n    // always clean\n    Adverb: undefined, Negative: undefined\n  }),\n  afterTags: Object.assign({}, adj.afterTags, verb.afterTags, misc.afterTags),\n  beforeWords: Object.assign({}, adj.beforeWords, verb.beforeWords, {\n    // have seperate contracts\n    have: undefined, had: undefined, not: undefined,\n    //went wrong, got wrong\n    went: 'Adjective', goes: 'Adjective', got: 'Adjective',\n    // be sure\n    be: 'Adjective'\n  }),\n  afterWords: Object.assign({}, adj.afterWords, verb.afterWords, {\n    to: undefined,//slick to the touch\n    as: 'Adjective',//pale as\n  }),\n}\n// console.log(clue.beforeWords)\n// console.log(clue)\nexport default clue","import noun from './_noun.js'\nimport gerund from './_gerund.js'\n\n// 'operating the crane', or 'operating room'\nconst misc = {\n  beforeTags: {\n    Copula: 'Gerund', PastTense: 'Gerund', PresentTense: 'Gerund', Infinitive: 'Gerund'\n  },\n  afterTags: {},\n  beforeWords: {\n    are: 'Gerund', were: 'Gerund', be: 'Gerund', no: 'Gerund', without: 'Gerund',\n    //are you playing\n    you: 'Gerund', we: 'Gerund', they: 'Gerund', he: 'Gerund', she: 'Gerund',\n    //stop us playing\n    us: 'Gerund', them: 'Gerund'\n  },\n  afterWords: {\n    // offering the\n    the: 'Gerund', this: 'Gerund', that: 'Gerund',\n    //got me thinking\n    me: 'Gerund', us: 'Gerund', them: 'Gerund',\n  },\n}\nconst clue = {\n  beforeTags: Object.assign({}, gerund.beforeTags, noun.beforeTags, misc.beforeTags),\n  afterTags: Object.assign({}, gerund.afterTags, noun.afterTags, misc.afterTags),\n  beforeWords: Object.assign({}, gerund.beforeWords, noun.beforeWords, misc.beforeWords),\n  afterWords: Object.assign({}, gerund.afterWords, noun.afterWords, misc.afterWords),\n}\nexport default clue","import noun from './_noun.js'\nimport verb from './_verb.js'\n\n// 'boot the ball'   -  'the red boot'\n// 'boots the ball'  -   'the red boots'\nconst clue = {\n  beforeTags: Object.assign({}, verb.beforeTags, noun.beforeTags, {\n    // Noun: undefined\n    Adjective: 'Singular',//great name\n  }),\n  afterTags: Object.assign({}, verb.afterTags, noun.afterTags, {\n    ProperNoun: 'Infinitive', Gerund: 'Infinitive', Adjective: 'Infinitive',\n    Copula: 'Singular',\n  }),\n  beforeWords: Object.assign({}, verb.beforeWords, noun.beforeWords, {\n    // is time\n    is: 'Singular', was: 'Singular',\n    //balance of power\n    of: 'Singular'\n  }),\n  afterWords: Object.assign({}, verb.afterWords, noun.afterWords, {\n    // for: 'Infinitive',//work for\n    instead: 'Infinitive',\n    // that: 'Singular',//subject that was\n    // for: 'Infinitive',//work for\n    about: 'Infinitive',//talk about\n    to: null,\n    by: null,\n    in: null\n  }),\n}\n\nexport default clue","const p = 'Person'\n\nexport default {\n  beforeTags: {\n    Honorific: p,\n    Person: p,\n    Preposition: p, //with sue\n  },\n  afterTags: {\n    Person: p,\n    ProperNoun: p,\n    Verb: p, //bob could\n    // Modal:true, //bob could\n    // Copula:true, //bob is\n    // PresentTense:true, //bob seems\n  },\n  ownTags: {\n    ProperNoun: p, //capital letter\n  },\n  beforeWords: {\n    hi: p,\n    hey: p,\n    yo: p,\n    dear: p,\n    hello: p,\n  },\n  afterWords: {\n    // person-usually verbs\n    said: p,\n    says: p,\n    told: p,\n    tells: p,\n    feels: p,\n    felt: p,\n    seems: p,\n    thinks: p,\n    thought: p,\n    spends: p,\n    spendt: p,\n    plays: p,\n    played: p,\n    sing: p,\n    sang: p,\n    learn: p,\n    learned: p,\n    wants: p,\n    wanted: p\n    // and:true, //sue and jeff\n  },\n}\n","import person from './_person.js'\n\n// 'april o'neil'  -  'april 1st'\n\nconst m = 'Month'\nconst month = {\n  beforeTags: {\n    Date: m,\n    Value: m,\n  },\n  afterTags: {\n    Date: m,\n    Value: m,\n  },\n  beforeWords: {\n    by: m,\n    in: m,\n    on: m,\n    during: m,\n    after: m,\n    before: m,\n    between: m,\n    until: m,\n    til: m,\n    sometime: m,\n    of: m, //5th of april\n    this: m, //this april\n    next: m,\n    last: m,\n    previous: m,\n    following: m,\n  },\n  afterWords: {\n    sometime: m,\n    in: m,\n    of: m,\n    until: m,\n    the: m, //june the 4th\n  },\n}\nexport default {\n  beforeTags: Object.assign({}, person.beforeTags, month.beforeTags),\n  afterTags: Object.assign({}, person.afterTags, month.afterTags),\n  beforeWords: Object.assign({}, person.beforeWords, month.beforeWords),\n  afterWords: Object.assign({}, person.afterWords, month.afterWords),\n}","import person from './_person.js'\nimport noun from './_noun.js'\n\n// 'babling brook' vs 'brook sheilds'\n\nconst clue = {\n  beforeTags: Object.assign({}, noun.beforeTags, person.beforeTags),\n  afterTags: Object.assign({}, noun.afterTags, person.afterTags),\n  beforeWords: Object.assign({}, noun.beforeWords, person.beforeWords, { i: 'Infinitive', we: 'Infinitive' }),\n  afterWords: Object.assign({}, noun.afterWords, person.afterWords),\n}\nexport default clue","import person from './_person.js'\nconst p = 'Place'\n\n// 'paris hilton' vs 'paris france'\nconst place = {\n  beforeTags: {\n    Place: p\n  },\n  afterTags: {\n    Place: p,\n    Abbreviation: p\n  },\n  beforeWords: {\n    in: p,\n    by: p,\n    near: p,\n    from: p,\n    to: p,\n  },\n  afterWords: {\n    in: p,\n    by: p,\n    near: p,\n    from: p,\n    to: p,\n    government: p,\n    council: p,\n    region: p,\n    city: p,\n  },\n}\n\nconst clue = {\n  beforeTags: Object.assign({}, place.beforeTags, person.beforeTags),\n  afterTags: Object.assign({}, place.afterTags, person.afterTags),\n  beforeWords: Object.assign({}, place.beforeWords, person.beforeWords),\n  afterWords: Object.assign({}, place.afterWords, person.afterWords),\n}\nexport default clue","// '5 oz'   -  'dr oz'\nlet un = 'Unit'\nconst clues = {\n  beforeTags: { Value: un },\n  afterTags: {},\n  beforeWords: {\n    per: un,\n    every: un,\n    each: un,\n    square: un, //square km\n    cubic: un,\n    sq: un,\n    metric: un //metric ton\n  },\n  afterWords: {\n    per: un,\n    squared: un,\n    cubed: un,\n    long: un //foot long\n  },\n}\nexport default clues","const h = 'Honorific'\n\n// repeating honorific words\nlet r = {\n  first: h,\n  general: h,\n  royal: h,\n  vice: h,\n  rear: h,\n  major: h,\n}\n\nexport default {\n  beforeTags: {\n    Honorific: h,\n    ProperNoun: h, //Foo jr \n    Ordinal: h //second admiral\n  },\n  afterTags: {\n    Person: h,\n    ProperNoun: h //captain Foo\n  },\n  beforeWords: Object.assign({}, r, {\n    honorable: h,\n    honourable: h,\n    worship: h,\n    excellency: h,\n    majesty: h,\n    right: h,\n  }),\n  afterWords: r,\n}","import adjGerund from './adj-gerund.js'\nimport adjNoun from './adj-noun.js'\nimport adjPast from './adj-past.js'\nimport adjPresent from './adj-present.js'\nimport nounGerund from './noun-gerund.js'\nimport nounVerb from './noun-verb.js'\nimport personDate from './person-date.js'\nimport personNoun from './person-noun.js'\nimport personVerb from './person-verb.js'\nimport personPlace from './person-place.js'\nimport unitNoun from './unit-noun.js'\nimport honorificNoun from './honorific-noun.js'\n\nconst clues = {\n  'Adj|Gerund': adjGerund,\n  'Adj|Noun': adjNoun,\n  'Adj|Past': adjPast,\n  'Adj|Present': adjPresent,\n  'Noun|Verb': nounVerb,\n  'Noun|Gerund': nounGerund,\n  'Person|Noun': personNoun,\n  'Person|Date': personDate,\n  'Person|Verb': personVerb,\n  'Person|Place': personPlace,\n  'Unit|Noun': unitNoun,\n  'Honorific|Noun': honorificNoun\n}\n\nconst copy = (obj, more) => {\n  let res = Object.keys(obj).reduce((h, k) => {\n    h[k] = obj[k] === 'Infinitive' ? 'PresentTense' : 'Plural'\n    return h\n  }, {})\n  return Object.assign(res, more)\n}\n\n// make a copy of this one\nclues['Plural|Verb'] = {\n  beforeWords: copy(clues['Noun|Verb'].beforeWords, {\n    had: 'Plural', //had tears\n    have: 'Plural',\n  }),\n  afterWords: copy(clues['Noun|Verb'].afterWords, {\n    his: 'PresentTense', her: 'PresentTense', its: 'PresentTense',\n    in: null, to: null,\n  }),\n  beforeTags: copy(clues['Noun|Verb'].beforeTags, {\n    Conjunction: 'PresentTense', //and changes\n    Noun: undefined, //the century demands\n    ProperNoun: 'PresentTense'//john plays\n  }),\n  afterTags: copy(clues['Noun|Verb'].afterTags, {\n    Gerund: 'Plural',//ice caps disappearing\n    Noun: 'PresentTense', //changes gears\n    Value: 'PresentTense' //changes seven gears\n  }),\n}\n// add some custom plural clues\nexport default clues","import person from './_person.js'\nimport verb from './_verb.js'\n\n// 'rob the store'   -  'rob lowe'\nconst clues = {\n  beforeTags: Object.assign({}, person.beforeTags, verb.beforeTags),\n  afterTags: Object.assign({}, person.afterTags, verb.afterTags),\n  beforeWords: Object.assign({}, person.beforeWords, verb.beforeWords),\n  afterWords: Object.assign({}, person.afterWords, verb.afterWords),\n}\nexport default clues","//just a foolish lookup of known suffixes\nconst Adj = 'Adjective'\nconst Inf = 'Infinitive'\nconst Pres = 'PresentTense'\nconst Sing = 'Singular'\nconst Past = 'PastTense'\nconst Avb = 'Adverb'\nconst Plrl = 'Plural'\nconst Actor = 'Actor'\nconst Vb = 'Verb'\nconst Noun = 'Noun'\nconst Last = 'LastName'\nconst Modal = 'Modal'\nconst Place = 'Place'\nconst Prt = 'Participle'\n\nexport default [\n  null,\n  null,\n  {\n    //2-letter\n    ea: Sing,\n    ia: Noun,\n    ic: Adj,\n    ly: Avb,\n    \"'n\": Vb,\n    \"'t\": Vb,\n  },\n  {\n    //3-letter\n    oed: Past,\n    ued: Past,\n    xed: Past,\n    ' so': Avb,\n    \"'ll\": Modal,\n    \"'re\": 'Copula',\n    azy: Adj,\n    eer: Noun,\n    end: Vb,\n    ped: Past,\n    ffy: Adj,\n    ify: Inf,\n    ing: 'Gerund',\n    ize: Inf,\n    ibe: Inf,\n    lar: Adj,\n    mum: Adj,\n    nes: Pres,\n    nny: Adj,\n    // oid: Adj,\n    ous: Adj,\n    que: Adj,\n    rol: Sing,\n    sis: Sing,\n    ogy: Sing,\n    oid: Sing,\n    ian: Sing,\n    zes: Pres,\n    eld: Past,\n    ken: Prt,//awoken\n    ven: Prt,//woven\n    ten: Prt,//brighten\n    ect: Inf,\n    ict: Inf,\n    // ide: Inf,\n    ign: Inf,\n    ful: Adj,\n    bal: Adj,\n  },\n  {\n    //4-letter\n    amed: Past,\n    aped: Past,\n    ched: Past,\n    lked: Past,\n    rked: Past,\n    reed: Past,\n    nded: Past,\n    mned: Adj,\n    cted: Past,\n    dged: Past,\n    ield: Sing,\n    akis: Last,\n    cede: Inf,\n    chuk: Last,\n    czyk: Last,\n    ects: Pres,\n    ends: Vb,\n    enko: Last,\n    ette: Sing,\n    wner: Sing,//owner\n    fies: Pres,\n    fore: Avb,\n    gate: Inf,\n    gone: Adj,\n    ices: Plrl,\n    ints: Plrl,\n    ruct: Inf,\n    ines: Plrl,\n    ions: Plrl,\n    ners: Plrl,\n    pers: Plrl,\n    lers: Plrl,\n    less: Adj,\n    llen: Adj,\n    made: Adj,\n    nsen: Last,\n    oses: Pres,\n    ould: Modal,\n    some: Adj,\n    sson: Last,\n    // tage: Inf,\n    tion: Sing,\n    tage: Noun,\n    ique: Sing,\n    tive: Adj,\n    tors: Noun,\n    vice: Sing,\n    lier: Sing,\n    fier: Sing,\n    wned: Past,\n    gent: Sing,\n    tist: Sing,\n    pist: Sing,\n    rist: Sing,\n    mist: Sing,\n    yist: Sing,\n    vist: Sing,\n    lite: Sing,\n    site: Sing,\n    rite: Sing,\n    mite: Sing,\n    bite: Sing,\n    mate: Sing,\n    date: Sing,\n    ndal: Sing,\n    vent: Sing,\n    uist: Sing,\n    gist: Sing,\n    note: Sing,\n    cide: Sing,//homicide\n    ence: Sing,//absence\n    wide: Adj,//nationwide\n    // side: Adj,//alongside\n    vide: Inf,//provide\n    ract: Inf,\n    duce: Inf,\n    pose: Inf,\n    eive: Inf,\n    lyze: Inf,\n    lyse: Inf,\n    iant: Adj,\n    nary: Adj,\n  },\n  {\n    //5-letter\n    elist: Sing,\n    holic: Sing,\n    phite: Sing,\n    tized: Past,\n    urned: Past,\n    eased: Past,\n    ances: Plrl,\n    bound: Adj,\n    ettes: Plrl,\n    fully: Avb,\n    ishes: Pres,\n    ities: Plrl,\n    marek: Last,\n    nssen: Last,\n    ology: Noun,\n    osome: Sing,\n    tment: Sing,\n    ports: Plrl,\n    rough: Adj,\n    tches: Pres,\n    tieth: 'Ordinal',\n    tures: Plrl,\n    wards: Avb,\n    where: Avb,\n    archy: Noun,\n    pathy: Noun,\n    opoly: Noun,\n    embly: Noun,\n    phate: Noun,\n    ndent: Sing,\n    scent: Sing,\n    onist: Sing,\n    anist: Sing,\n    alist: Sing,\n    olist: Sing,\n    icist: Sing,\n    ounce: Inf,\n    iable: Adj,\n    borne: Adj,\n    gnant: Adj,\n    inant: Adj,\n    igent: Adj,\n    atory: Adj,\n    // ctory: Adj,\n    rient: Sing,\n    dient: Sing,\n  },\n  {\n    //6-letter\n    auskas: Last,\n    parent: Sing,\n    cedent: Sing,\n    ionary: Sing,\n    cklist: Sing,\n    keeper: Actor,\n    logist: Actor,\n    teenth: 'Value',\n  },\n  {\n    //7-letter\n    opoulos: Last,\n    borough: Place,\n    sdottir: Last, //swedish female\n  },\n]\n","//prefixes give very-little away, in general.\n// more-often for scientific terms, etc.\nconst Adj = 'Adjective'\nconst Noun = 'Noun'\nconst Verb = 'Verb'\n\nexport default [\n  null,\n  null,\n  {\n    // 2-letter\n  },\n  {\n    // 3-letter\n    neo: Noun,\n    bio: Noun,\n    // pre: Noun,\n    'de-': Verb,\n    're-': Verb,\n    'un-': Verb,\n  },\n  {\n    // 4-letter\n    anti: Noun,\n    auto: Noun,\n    faux: Adj,\n    hexa: Noun,\n    kilo: Noun,\n    mono: Noun,\n    nano: Noun,\n    octa: Noun,\n    poly: Noun,\n    semi: Adj,\n    tele: Noun,\n    'pro-': Adj,\n    'mis-': Verb,\n    'dis-': Verb,\n    'pre-': Adj, //hmm\n  },\n  {\n    // 5-letter\n    anglo: Noun,\n    centi: Noun,\n    ethno: Noun,\n    ferro: Noun,\n    grand: Noun,\n    hepta: Noun,\n    hydro: Noun,\n    intro: Noun,\n    macro: Noun,\n    micro: Noun,\n    milli: Noun,\n    nitro: Noun,\n    penta: Noun,\n    quasi: Adj,\n    radio: Noun,\n    tetra: Noun,\n    'omni-': Adj,\n    'post-': Adj,\n  },\n  {\n    // 6-letter\n    pseudo: Adj,\n    'extra-': Adj,\n    'hyper-': Adj,\n    'inter-': Adj,\n    'intra-': Adj,\n    'deca-': Adj,\n    // 'trans-': Noun,\n  },\n  {\n    // 7-letter\n    electro: Noun,\n  },\n]","//regex suffix patterns and their most common parts of speech,\n//built using wordnet, by spencer kelly.\n//this mapping shrinks-down the uglified build\nconst Adj = 'Adjective'\nconst Inf = 'Infinitive'\nconst Pres = 'PresentTense'\nconst Sing = 'Singular'\nconst Past = 'PastTense'\nconst Adverb = 'Adverb'\nconst Exp = 'Expression'\nconst Actor = 'Actor'\nconst Verb = 'Verb'\nconst Noun = 'Noun'\nconst Last = 'LastName'\n\nexport default {\n  a: [\n    [/.[aeiou]na$/, Noun, 'tuna'],\n    [/.[oau][wvl]ska$/, Last],\n    [/.[^aeiou]ica$/, Sing, 'harmonica'],\n    [/^([hyj]a+)+$/, Exp, 'haha'], //hahah\n  ],\n  c: [[/.[^aeiou]ic$/, Adj]],\n  d: [\n    //==-ed==\n    //double-consonant\n    [/[aeiou](pp|ll|ss|ff|gg|tt|rr|bb|nn|mm)ed$/, Past, 'popped'],\n    //double-vowel\n    [/.[aeo]{2}[bdgmnprvz]ed$/, Past, 'rammed'],\n    //-hed\n    [/.[aeiou][sg]hed$/, Past, 'gushed'],\n    //-rd\n    [/.[aeiou]red$/, Past, 'hired'],\n    [/.[aeiou]r?ried$/, Past, 'hurried'],\n    // ard\n    [/[^aeiou]ard$/, Sing, 'steward'],\n    // id\n    [/[aeiou][^aeiou]id$/, Adj, ''],\n    [/.[vrl]id$/, Adj, 'livid'],\n\n    // ===== -ed ======\n    //-led\n    [/..led$/, Past, 'hurled'],\n    //-sed\n    [/.[iao]sed$/, Past, ''],\n    [/[aeiou]n?[cs]ed$/, Past, ''],\n    //-med\n    [/[aeiou][rl]?[mnf]ed$/, Past, ''],\n    //-ked\n    [/[aeiou][ns]?c?ked$/, Past, 'bunked'],\n    //-gned\n    [/[aeiou]gned$/, Past],\n    //-ged\n    [/[aeiou][nl]?ged$/, Past],\n    //-ted\n    [/.[tdbwxyz]ed$/, Past],\n    [/[^aeiou][aeiou][tvx]ed$/, Past],\n    //-ied\n    [/.[cdflmnprstv]ied$/, Past, 'emptied'],\n  ],\n  e: [\n    [/.[lnr]ize$/, Inf, 'antagonize'],\n    [/.[^aeiou]ise$/, Inf, 'antagonise'],\n    [/.[aeiou]te$/, Inf, 'bite'],\n    [/.[^aeiou][ai]ble$/, Adj, 'fixable'],\n    [/.[^aeiou]eable$/, Adj, 'maleable'],\n    [/.[ts]ive$/, Adj, 'festive'],\n    [/[a-z]-like$/, Adj, 'woman-like'],\n  ],\n  h: [\n    [/.[^aeiouf]ish$/, Adj, 'cornish'],\n    [/.v[iy]ch$/, Last, '..ovich'],\n    [/^ug?h+$/, Exp, 'ughh'],\n    [/^uh[ -]?oh$/, Exp, 'uhoh'],\n    [/[a-z]-ish$/, Adj, 'cartoon-ish'],\n  ],\n  i: [[/.[oau][wvl]ski$/, Last, 'polish-male']],\n  k: [\n    [/^(k){2}$/, Exp, 'kkkk'], //kkkk\n  ],\n  l: [\n    [/.[gl]ial$/, Adj, 'familial'],\n    [/.[^aeiou]ful$/, Adj, 'fitful'],\n    [/.[nrtumcd]al$/, Adj, 'natal'],\n    [/.[^aeiou][ei]al$/, Adj, 'familial'],\n  ],\n  m: [\n    [/.[^aeiou]ium$/, Sing, 'magnesium'],\n    [/[^aeiou]ism$/, Sing, 'schism'],\n    [/^[hu]m+$/, Exp, 'hmm'],\n    [/^\\d+ ?[ap]m$/, 'Date', '3am'],\n  ],\n  n: [\n    [/.[lsrnpb]ian$/, Adj, 'republican'],\n    [/[^aeiou]ician$/, Actor, 'musician'],\n    [/[aeiou][ktrp]in'$/, 'Gerund', \"cookin'\"], // 'cookin', 'hootin'\n  ],\n  o: [\n    [/^no+$/, Exp, 'noooo'],\n    [/^(yo)+$/, Exp, 'yoo'],\n    [/^wo{2,}[pt]?$/, Exp, 'woop'], //woo\n  ],\n  r: [\n    [/.[bdfklmst]ler$/, 'Noun'],\n    [/[aeiou][pns]er$/, Sing],\n    [/[^i]fer$/, Inf],\n    [/.[^aeiou][ao]pher$/, Actor],\n    [/.[lk]er$/, 'Noun'],\n    [/.ier$/, 'Comparative'],\n  ],\n  t: [\n    [/.[di]est$/, 'Superlative'],\n    [/.[icldtgrv]ent$/, Adj],\n    [/[aeiou].*ist$/, Adj],\n    [/^[a-z]et$/, Verb],\n  ],\n  s: [\n    [/.[^aeiou]ises$/, Pres],\n    [/.[rln]ates$/, Pres],\n    [/.[^z]ens$/, Verb],\n    [/.[lstrn]us$/, Sing],\n    [/.[aeiou]sks$/, Pres],\n    [/.[aeiou]kes$/, Pres],\n    [/[aeiou][^aeiou]is$/, Sing],\n    [/[a-z]'s$/, Noun],\n    [/^yes+$/, Exp], //yessss\n  ],\n  v: [\n    [/.[^aeiou][ai][kln]ov$/, Last], //east-europe\n  ],\n  y: [\n    [/.[cts]hy$/, Adj],\n    [/.[st]ty$/, Adj],\n    [/.[tnl]ary$/, Adj],\n    [/.[oe]ry$/, Sing],\n    [/[rdntkbhs]ly$/, Adverb],\n    [/.(gg|bb|zz)ly$/, Adj],\n    [/...lly$/, Adverb],\n    [/.[gk]y$/, Adj],\n    [/[bszmp]{2}y$/, Adj],\n    [/.[ai]my$/, Adj],\n    [/[ea]{2}zy$/, Adj],\n    [/.[^aeiou]ity$/, Sing],\n  ],\n}\n","const vb = 'Verb'\nconst nn = 'Noun'\n\nexport default {\n  // looking at the previous word's tags:\n  leftTags: [\n    ['Adjective', nn],\n    ['Possessive', nn],\n    ['Determiner', nn],\n    ['Adverb', vb],\n    ['Pronoun', vb],\n    ['Value', nn],\n    ['Ordinal', nn],\n    ['Modal', vb],\n    ['Superlative', nn],\n    ['Demonym', nn],\n    ['Honorific', 'Person'], //dr. Smith\n  ],\n  // looking at the previous word:\n  leftWords: [\n    ['i', vb],\n    ['first', nn],\n    ['it', vb],\n    ['there', vb],\n    ['not', vb],\n    ['because', nn],\n    ['if', nn],\n    ['but', nn],\n    ['who', vb],\n    ['this', nn],\n    ['his', nn],\n    ['when', nn],\n    ['you', vb],\n    ['very', 'Adjective'],\n    ['old', nn],\n    ['never', vb],\n    ['before', nn],\n    ['a', 'Singular'],\n    ['the', nn],\n    ['been', vb],\n  ],\n\n  // looking at the next word's tags:\n  rightTags: [\n    ['Copula', nn],\n    ['PastTense', nn],\n    ['Conjunction', nn],\n    ['Modal', nn],\n  ],\n  // looking at the next word:\n  rightWords: [\n    ['there', vb],\n    ['me', vb],\n    ['man', 'Adjective'],\n    ['only', vb],\n    ['him', vb],\n    ['it', vb],//relaunch it\n    ['were', nn],\n    ['took', nn],\n    ['himself', vb],\n    ['went', nn],\n    ['who', nn],\n    ['jr', 'Person'],\n  ],\n}\n","// generated in ./lib/pairs\nexport default {\n  \"Comparative\": {\n    \"rules\": \"ig|2ger,ng|2er,hin|3ner,n|1er,ot|2ter,lat|3ter,t|1er,ray|3er,y|ier,ross|4er,im|2mer,m|1er,f|1er,b|1er,er|2,r|1er,p|1er,h|1er,w|1er,k|1er,l|1er,d|1er,e|1r\",\n    \"exceptions\": \"good|better,bad|worse,wet|3ter,lay|3er,neat|4ter,fat|3ter,mad|3der,sad|3der,wide|4r,late|4r,safe|4r,fine|4r,dire|4r,fake|4r,pale|4r,rare|4r,rude|4r,sore|4r\",\n    \"rev\": \"arger|4,esser|5,igger|2,impler|5,reer|3,hinner|3,remier|6,urer|3,aucher|5,almer|3,raver|4,uter|3,iviner|5,erier|4,enuiner|6,rosser|4,uger|3,andomer|5,emoter|5,quarer|5,taler|4,iper|3,hiter|4,rther|5,rmer|2,ayer|2,immer|2,somer|4,amer|3,adder|2,nger|2,fer|1,tler|3,cer|2,ber|1,uer|2,bler|3,tter|1,rer|1,ser|2,per|1,her|1,wer|1,ker|1,ner|1,ler|1,ter|1,der|1,ier|y\"\n  },\n  \"Gerund\": {\n    \"rules\": \"omoting|4e,haring|3e,ploring|4e,mbining|4e,nviting|4e,belling|3,ntoring|4e,uiding|3e,orging|3e,dhering|4e,alysing|4e,nciling|4e,mpeding|4e,uoting|3e,evoting|4e,nsating|4e,gnoring|4e,roding|3e,iaising|4e,esaling|4e,rowsing|4e,rfering|4e,kating|3e,robing|3e,tponing|4e,mmuting|4e,laning|3e,moking|3e,nfining|4e,nduring|4e,nciting|4e,busing|3e,eleting|4e,esiring|4e,rbating|4e,larging|4e,ploding|4e,haking|3e,hading|3e,biding|3e,udding|2,neating|4e,craping|4e,efuting|4e,thoring|4e,eusing|3e,agining|4e,rekking|3,suading|4e,ubating|4e,ronzing|4e,euvring|4e,bliging|4e,laking|3e,riming|3e,asising|4e,lunging|4e,cilling|3,pinging|4e,hoking|3e,creting|4e,ralling|3,miling|3e,wathing|4e,edoring|4e,odding|2,aloging|4e,rseding|4e,xcusing|4e,halling|3,ialling|3,inuting|4e,xciting|4e,chuting|4e,hrining|4e,eciting|4e,xuding|3e,isusing|4e,uizzing|3,ithing|3e,izzling|4e,haling|3e,dmiring|4e,rsaking|4e,parging|4e,ixating|4e,anuring|4e,iecing|3e,erusing|4e,eething|4e,entring|4e,goating|4e,langing|4e,stining|4e,lescing|4e,erlying|3ie,pleting|4e,ausing|3e,ciding|3e,enging|3e,casing|3e,cising|3e,esiding|4e,uning|2e,delling|3,storing|4e,tiring|3e,leging|3e,piling|3e,tising|3e,ecuting|4e,eduling|4e,uelling|3,liding|3e,uging|2e,celling|3,ubing|2e,laming|3e,ebating|4e,njuring|4e,scaping|4e,truding|4e,chising|4e,vading|3e,shaping|4e,iping|2e,naming|3e,ulging|3e,raking|3e,fling|2e,taping|3e,noting|3e,lading|3e,scaling|4e,riding|3e,rasing|3e,coping|3e,ruling|3e,wining|3e,viding|3e,quiring|4e,velling|3,alyzing|4e,laring|3e,coring|3e,ranging|4e,ousing|3e,puting|3e,vening|3e,idding|2,hining|3e,urging|3e,coding|3e,niting|3e,nelling|3,dising|3e,uising|3e,caring|3e,lapsing|4e,erging|3e,pating|3e,mining|3e,ibuting|4e,coming|3e,paring|3e,taking|3e,hasing|3e,vising|3e,ituting|4e,writing|4e,eezing|3e,piring|3e,luting|3e,voking|3e,iguring|4e,uming|2e,curing|3e,mising|3e,iking|2e,edding|2,luding|3e,suring|3e,rising|3e,ribing|3e,rading|3e,ceding|3e,nsing|2e,kling|2e,fusing|3e,azing|2e,cling|2e,nising|3e,ducing|3e,rcing|2e,gling|2e,easing|3e,uating|3e,lising|3e,lining|3e,mating|3e,mming|1,pling|2e,bbing|1,vating|3e,dling|2e,dating|3e,rsing|2e,dging|2e,tling|2e,turing|3e,icing|2e,acing|2e,gating|3e,gging|1,tating|3e,rring|1,nning|1,uing|1e,bling|2e,iating|3e,cating|3e,aging|2e,osing|2e,ncing|2e,nating|3e,pping|1,lating|3e,tting|1,rating|3e,ving|1e,izing|2e,ing|\",\n    \"exceptions\": \"being|is,using|2e,making|3e,creating|5e,changing|5e,owing|2e,raising|4e,competing|6e,defining|5e,counselling|7,hiring|3e,filing|3e,controlling|7,totalling|5,infringing|7e,citing|3e,dying|1ie,doping|3e,baking|3e,hoping|3e,refining|5e,exchanging|7e,charging|5e,stereotyping|9e,voting|3e,tying|1ie,discharging|8e,basing|3e,lying|1ie,expediting|7e,typing|3e,breathing|6e,framing|4e,boring|3e,dining|3e,firing|3e,hiding|3e,appraising|7e,tasting|4e,waning|3e,distilling|6,baling|3e,boning|3e,faring|3e,honing|3e,wasting|4e,phoning|4e,luring|3e,propelling|6,timing|3e,wading|3e,abating|4e,compelling|6,vying|1ie,fading|3e,biting|3e,zoning|3e,dispelling|6,pasting|4e,praising|5e,telephoning|8e,daring|3e,waking|3e,shoring|4e,gaming|3e,padding|3,rerouting|6e,fringing|5e,braising|5e,coking|3e,recreating|7e,sloping|4e,sunbathing|7e,overcharging|9e,everchanging|9e,patrolling|6,joking|3e,extolling|5,expelling|5,reappraising|9e,wadding|3,gaping|3e,poking|3e,persevering|8e,pining|3e,recordkeeping|10e,landfilling|7,liming|3e,interchanging|10e,toting|3e,roping|3e,wiring|3e,aching|3e,gassing|3,getting|3,travelling|6,putting|3,sitting|3,betting|3,mapping|3,tapping|3,letting|3,hitting|3,tanning|3,netting|3,popping|3,fitting|3,deterring|5,barring|3,banning|3,vetting|3,omitting|4,wetting|3,plotting|4,budding|3,clotting|4,hemming|3,slotting|4,singeing|5,reprogramming|9,jetting|3,kidding|3,befitting|5,podding|3,wedding|3,donning|3,warring|3,penning|3,gutting|3,cueing|3,refitting|5,petting|3,cramming|4,napping|3,tinning|3\",\n    \"rev\": \"lan|3ning,egin|4ning,can|3ning,pan|3ning,hin|3ning,kin|3ning,win|3ning,un|2ning,pin|3ning,n|1ing,ounsel|6ling,otal|4ling,abel|4ling,evel|4ling,ancel|5ling,istil|5ling,xcel|4ling,tencil|6ling,piral|5ling,arshal|6ling,nitial|6ling,hrivel|6ling,xtol|4ling,andfil|6ling,trol|4ling,fuel|4ling,model|5ling,nnel|4ling,pel|3ling,l|1ing,ransfer|7ring,lur|3ring,tir|3ring,tar|3ring,pur|3ring,car|3ring,nfer|4ring,efer|4ring,cur|3ring,r|1ing,ermit|5ting,ransmit|7ting,ommit|5ting,nit|3ting,orget|5ting,abysit|6ting,dmit|4ting,hut|3ting,hat|3ting,utfit|5ting,but|3ting,egret|5ting,llot|4ting,mat|3ting,pot|3ting,lit|3ting,emit|4ting,submit|6ting,pit|3ting,rot|3ting,quit|4ting,cut|3ting,set|3ting,t|1ing,tem|3ming,wim|3ming,kim|3ming,um|2ming,rim|3ming,m|1ing,tep|3ping,wap|3ping,top|3ping,hop|3ping,cap|3ping,rop|3ping,rap|3ping,lap|3ping,ip|2ping,p|1ing,ye|2ing,oe|2ing,ie|ying,ee|2ing,e|ing,hed|3ding,hred|4ding,bed|3ding,bid|3ding,d|1ing,ki|2ing,rek|3king,k|1ing,isc|3ing,echarg|6ing,ng|2ing,g|1ging,uiz|3zing,z|1ing,mb|2ing,rb|2ing,b|1bing,o|1ing,x|1ing,f|1ing,s|1ing,w|1ing,y|1ing,h|1ing\"\n  },\n  \"Participle\": {\n    \"rules\": \"roken|1ake,hosen|2ose,allen|3,rozen|1eeze,asten|4,engthen|5,essen|3,hrunken|2ink,lain|2y,poken|1eak,tolen|1eal,eaten|3,un|in,itten|2e,gotten|1et,ighten|4,idden|2e,worn|1ear,sen|2,aken|3,ven|2,wn|1,rought|1ing,uilt|3d,urst|4,ealt|3,reamt|4,urt|3,nelt|2el,eapt|3,eft|1ave,eant|3,hot|2ot,pat|1it,et|2,ut|2,it|2,ent|2d,ept|1ep,urned|3,reated|5,eard|3,eld|old,ead|3,lid|3e,old|ell,ped|2ed,pilled|4,ound|ind,ved|2,aid|1y,ug|ig,ung|ing,ade|1ke,hone|1ine,come|4,gone|2,nuck|1eak,unk|ink\",\n    \"exceptions\": \"been|2,bled|3ed,bought|1uy,fed|2ed,fled|3e,flown|2y,fought|1ight,had|2ve,hung|1ang,led|2ad,lit|2ght,met|2et,run|3,sat|1eat,seen|3,sought|1eek,woven|1eave,bet|3,brought|2ing,dealt|4,dived|4,heard|4,left|2ave,made|2ke,read|4,shaved|5,slain|3y\",\n    \"rev\": \"uy|ought,ly|1own,ay|1id,rake|1oken,hoose|2sen,reate|5d,lee|2d,reeze|1ozen,aste|4n,rove|4n,hine|1one,lide|3,hrive|5d,come|4,ite|2ten,ide|2den,se|2n,ake|3n,ive|3n,uild|3t,old|eld,ind|ound,eed|1d,end|2t,urn|3ed,ean|3t,un|2,in|un,urst|4,right|5en,eight|5en,urt|3,eet|1t,hoot|2t,pit|1at,eat|3en,get|1otten,set|3,ut|2,it|2,ream|4t,ig|ug,ang|ung,ing|ung,all|3en,neel|2lt,ell|old,pill|4ed,teal|1olen,eap|3t,eep|1pt,ength|5en,ess|3en,hrink|2unken,neak|1uck,eek|ought,peak|1oken,ink|unk,wear|1orn,go|2ne,w|1n\"\n  },\n  \"PastTense\": {\n    \"rules\": \"een|1,egan|2in,on|in,pun|1in,ewn|2,ave|ive,poke|1eak,hose|2ose,roke|1eak,roze|1eeze,ode|ide,orbade|3id,hone|1ine,tole|1eal,rose|1ise,woke|1ake,wrote|2ite,made|2ke,came|1ome,ove|ive,ore|ear,elped|3,elcomed|6,hared|4,nvited|5,eclared|6,eard|3,avelled|4,ombined|6,uided|4,etired|5,choed|3,ncelled|4,epeated|5,moked|4,entred|5,dhered|5,esired|5,ompeted|6,erseded|6,ramed|4,qualled|4,iloted|4,stponed|6,uelled|3,opelled|4,gnored|5,xtruded|6,caled|4,ndured|5,lamed|4,quared|5,mpeded|5,rouped|4,efeated|5,robed|4,lid|3e,magined|6,nselled|4,uthored|6,ebuted|4,shrined|6,tialled|4,erfered|6,eaped|3,yped|3,laked|4,tirred|3,ooted|3,leated|4,ncited|5,oubted|4,mpelled|4,nnulled|4,pined|4,ircled|5,ecited|5,reathed|6,nvaded|5,onfided|6,pedited|6,alcined|6,ycotted|5,dmired|5,xcreted|6,ubed|3,taked|4,onfined|6,heated|4,rimed|4,amelled|4,achined|6,litzed|4,xcited|5,xpelled|4,xtolled|4,ouled|3,imicked|4,ivalled|4,eeped|3,naked|4,tyled|4,iased|3,nhaled|5,oeuvred|6,grammed|6,kied|2,miled|4,pited|4,eterred|4,hoked|4,kidded|3,ollided|6,pleted|5,cided|4,plored|5,stored|5,longed|4,filed|4,rbed|2,suaded|5,ciled|4,edded|2,tined|4,phoned|5,fled|3,nited|4,iped|3,hauled|4,treated|5,nnelled|4,basted|5,njured|5,twined|5,uzzed|3,did|1o,odded|2,vided|4,old|ell,pared|4,mbed|2,stood|2and,pired|4,held|1old,vened|4,cored|4,read|4,piled|4,aped|3,gled|3,named|4,arred|2,oated|3,kled|3,ooled|3,uned|3,figured|6,bid|3,ound|ind,oped|2,ibed|3,quired|5,uled|3,oded|3,ceded|4,cured|4,sided|4,voked|4,rled|2,outed|3,mined|4,urred|2,ighted|4,umed|3,sured|4,iked|3,mmed|1,pled|3,fed|1,bbed|1,eled|2,luded|4,aid|1y,ferred|3,tled|3,dled|3,raded|4,oted|3,eed|2,aled|2,lined|4,mped|2,fted|2,lted|2,gged|1,eted|2,xed|1,bled|3,pted|2,tured|4,uted|3,ued|2,iled|2,nned|1,yed|1,rted|2,pped|1,tted|1,wed|1,lled|2,ited|2,med|1,sted|2,ssed|2,ged|2,ved|2,nted|2,ked|1,cted|2,ced|2,ied|y,hed|1,sed|2,ded|1,zed|2,ned|1,red|1,ated|3,ell|all,rought|1ing,hought|1ink,eft|1ave,eant|3,ealt|3,eat|3,hot|2ot,urt|3,eapt|3,elt|1el,went|go,built|4d,at|it,got|1et,ut|2,it|2,et|2,ent|2d,ept|1ep,st|2,truck|2ike,nuck|1eak,tunk|1ink,ank|ink,ook|ake,ug|ig,ang|ing,ung|ing,nderlay|5ie,dezvous|7,wam|1im,drew|2aw,saw|1ee,ew|ow\",\n    \"exceptions\": \"was|is,were|are,had|2ve,led|2ad,met|2et,cited|4,focused|5,sought|1eek,lost|3e,defined|6,died|3,hired|4,bought|1uy,ran|1un,controlled|7,taught|1each,hoped|4,shed|4,refined|6,caught|2tch,flew|2y,owed|3,fought|1ight,fired|4,fed|2ed,pied|3,fared|4,tied|3,fled|3e,cared|4,ate|eat,dyed|3,lit|2ght,winged|4,bred|3ed,pent|3,wired|4,persevered|9,baked|4,dined|4,fined|4,shored|5,hid|3e,padded|3,waned|4,wove|1eave,lied|3,wasted|5,sloped|5,joked|4,ached|4,baled|4,bit|3e,bled|3ed,boned|4,caned|4,dispelled|6,egged|3,hung|1ang,patrolled|6,tasted|5,faked|4,bored|4,eyed|3,gamed|4,gassed|3,pored|4,timed|4,toned|4,zoned|4,poked|4,dared|4,been|2,said|2y,found|1ind,took|1ake,came|1ome,gave|1ive,fell|1all,brought|2ing,rose|1ise,put|3,sent|3d,spent|4d,spoke|2eak,left|2ave,won|1in,told|1ell,meant|4,heard|4,got|1et,arose|2ise,read|4,let|3,hit|3,cost|4,dealt|4,laid|2y,drove|2ive,sat|1it,cast|4,beat|4,lent|3d,sang|1ing,banned|3,jarred|3,wound|1ind,omitted|4,quit|4,slid|4e,rang|1ing,fit|3,rent|3d,bet|3,sank|1ink,reaped|4,manned|3,rode|1ide,rebutted|5,bound|1ind,barred|3,recast|6,netted|3,tanned|3,plotted|4,tore|1ear,spun|2in,pitted|3,shone|2ine,donned|3,dove|1ive,spat|2it,bent|3d,leapt|4,seeped|4,sewn|3,twinned|4,wrung|2ing,deterred|5,blew|2ow\",\n    \"rev\": \"egin|2an,lan|3ned,nderpin|7ned,kin|3ned,hin|3ned,pan|3ned,can|3ned,un|2ned,n|1ed,ecome|2ame,hoose|2se,trike|2uck,lee|2d,trive|2ove,vercome|4ame,reeze|1oze,hake|1ook,nderlie|5ay,istake|3ook,etake|2ook,wake|1oke,write|2ote,make|2de,rtake|2ook,see|1aw,e|1d,elp|3ed,roup|4ed,oop|3ed,velop|5ed,eep|1pt,mp|2ed,p|1ped,hink|1ought,eek|ought,reak|1oke,neak|1uck,tink|1unk,rink|1ank,k|1ed,ommit|5ted,ermit|5ted,oadcast|7,dmit|4ted,hoot|2t,plit|4,hut|3,llot|4ted,nit|3ted,orget|3ot,egret|5ted,hrust|5,ormat|5ted,hat|3ted,lat|3ted,urt|3,cquit|5ted,urst|4,ransmit|7ted,emit|4ted,pot|3ted,cut|3,submit|6ted,set|3,t|1ed,now|1ew,trew|4n,draw|2ew,throw|3ew,grow|2ew,w|1ed,uy|ought,ey|2ed,pay|2id,oy|2ed,ay|2ed,y|ied,ravel|5led,ancel|5led,qual|4led,uel|3led,ounsel|6led,nitial|6led,nnul|4led,namel|5led,xtol|4led,ival|4led,teal|1ole,eel|1lt,trol|4led,sell|1old,nnel|4led,pel|3led,l|1ed,ransfer|7red,pur|3red,lur|3red,tir|3red,par|3red,nfer|4red,wear|1ore,bear|1ore,efer|4red,cur|3red,r|1ed,pread|5,hed|3,rind|1ound,mbed|4ded,reed|2d,hred|4ded,eread|5,orbid|3ade,leed|2d,kid|3ded,build|4t,od|2ded,stand|2ood,hold|1eld,bid|3,d|1ed,cho|3ed,go|went,do|1id,tem|3med,um|2med,rim|3med,kim|3med,wim|1am,lam|3med,m|1ed,lug|3ged,ig|ug,pring|2ang,gg|2ed,ang|ung,long|4ed,og|2ged,ling|1ung,ag|2ged,ub|2bed,ib|2bed,ob|2bed,rb|2ed,ab|2bed,mb|2ed,imic|4ked,dezvous|7,s|1ed,ki|2ed,z|1ed,f|1ed,x|1ed,h|1ed\"\n  },\n  \"PresentTense\": {\n    \"rules\": \"as|1ve,tudies|3y,mbodies|4y,evies|2y,arties|3y,emedies|4y,mpties|3y,eadies|3y,obbies|3y,ullies|3y,nesties|4y,zzes|2,pies|1y,nies|1y,oes|1,xes|1,plies|2y,ries|1y,shes|2,sses|2,ches|2,fies|1y,s|\",\n    \"exceptions\": \"are|is,focuses|5,relies|3y,flies|2y,gasses|3,has|2ve\",\n    \"rev\": \"uy|2s,oy|2s,ey|2s,ay|2s,y|ies,adio|4s,aboo|4s,o|1es,tograph|7s,erth|4s,gh|2s,h|1es,as|2ses,s|1es,ic|2s,zz|2es,x|1es,f|1s,b|1s,g|1s,m|1s,w|1s,p|1s,k|1s,l|1s,d|1s,n|1s,r|1s,t|1s,e|1s\"\n  },\n  \"Superlative\": {\n    \"rules\": \"east|4,uthwest|7,ot|2test,it|2test,lat|3test,weet|4test,t|1est,ig|2gest,ng|2est,hin|3nest,n|1est,nner|4most,uter|4most,r|1est,rey|3est,ricey|3iest,y|iest,ross|4est,f|1est,b|1est,m|1est,p|1est,h|1est,w|1est,k|1est,l|1est,d|1est,e|1st\",\n    \"exceptions\": \"good|best,bad|worst,wet|3test,far|1urthest,gay|3est,neat|4test,shy|3est,fat|3test,late|4st,wide|4st,fine|4st,severe|6st,fake|4st,pale|4st,rare|4st,rude|4st,sore|4st,dire|4st\",\n    \"rev\": \"east|4,argest|4,iggest|2,implest|5,afest|3,uthwest|7,hinnest|3,ncerest|5,urthest|ar,ravest|4,utest|3,eriest|4,rossest|4,dsomest|5,ugest|3,riciest|3ey,emotest|5,quarest|5,rangest|5,ipest|3,urest|3,cest|2,ermost|2,fest|1,best|1,amest|3,itest|3,ngest|2,uest|2,yest|1,tlest|3,mest|1,blest|3,sest|2,pest|1,hest|1,ttest|1,west|1,rest|1,kest|1,nest|1,lest|1,test|1,dest|1,iest|y\"\n  }\n}","const prefix = /^.([0-9]+)/\n\n// handle compressed form of key-value pair\nconst getKeyVal = function (word, model) {\n  let val = model.exceptions[word]\n  let m = val.match(prefix)\n  if (m === null) {\n    // return not compressed form\n    return model.exceptions[word]\n  }\n  // uncompress it\n  let num = Number(m[1]) || 0\n  let pre = word.substr(0, num)\n  return pre + val.replace(prefix, '')\n}\n\n// get suffix-rules according to last char of word\nconst getRules = function (word, rules = {}) {\n  let char = word[word.length - 1]\n  let list = rules[char] || []\n  // do we have a generic suffix?\n  if (rules['']) {\n    list = list.concat(rules[''])\n  }\n  return list\n}\n\nconst convert = function (word, model, debug) {\n  // check list of irregulars\n  if (model.exceptions.hasOwnProperty(word)) {\n    if (debug) {\n      console.log(\"exception, \", word, model.exceptions[word])\n    }\n    return getKeyVal(word, model)\n  }\n  // if model is reversed, try rev rules\n  let rules = model.rules\n  if (model.reversed) {\n    rules = model.rev\n  }\n  // try suffix rules\n  rules = getRules(word, rules)\n  for (let i = 0; i < rules.length; i += 1) {\n    let suffix = rules[i][0]\n    if (word.endsWith(suffix)) {\n      if (debug) {\n        console.log(\"rule, \", rules[i])\n      }\n      let reg = new RegExp(suffix + '$')\n      return word.replace(reg, rules[i][1])\n    }\n  }\n  if (debug) {\n    console.log(' x - ' + word)\n  }\n  // return the original word unchanged\n  return word\n}\nexport default convert\n","// index rules by last-char\nconst indexRules = function (rules) {\n  let byChar = {}\n  rules.forEach((a) => {\n    let suff = a[0] || ''\n    let char = suff[suff.length - 1] || ''\n    byChar[char] = byChar[char] || []\n    byChar[char].push(a)\n  })\n  return byChar\n}\n\nconst unIndex = function (byChar) {\n  let arr = []\n  Object.keys(byChar).forEach(k => {\n    arr = arr.concat(byChar[k])\n  })\n  return arr\n}\n\nconst sortRules = function (rules) {\n  rules = rules.sort((a, b) => {\n    if (a[0].length > b[0].length) {\n      return -1\n    } else if (a[0].length < b[0].length) {\n      return 1\n    }\n    return 0\n  })\n  return rules\n}\n\nexport {\n  indexRules, unIndex, sortRules\n}","const prefix = /^([0-9]+)/\nimport { indexRules } from '../_lib.js'\n\nconst expand = function (key = '', val = '') {\n  val = String(val)\n  let m = val.match(prefix)\n  if (m === null) {\n    return [key, val]\n  }\n  let num = Number(m[1]) || 0\n  let pre = key.substring(0, num)\n  let full = pre + val.replace(prefix, '')\n  return [key, full]\n}\n\nconst toArray = function (txt) {\n  const pipe = /\\|/\n  return txt.split(/,/).map(str => {\n    let a = str.split(pipe)\n    return expand(a[0], a[1])\n  })\n}\n\nconst uncompress = function (model = {}) {\n  model = Object.assign({}, model)\n\n  // compress fwd rules\n  model.rules = toArray(model.rules)\n  model.rules = indexRules(model.rules)\n\n  // compress reverse rules\n  if (model.rev) {\n    model.rev = toArray(model.rev)\n    model.rev = indexRules(model.rev)\n  }\n\n  // compress exceptions\n  model.exceptions = toArray(model.exceptions)\n  model.exceptions = model.exceptions.reduce((h, a) => {\n    h[a[0]] = a[1]\n    return h\n  }, {})\n  return model\n}\nexport default uncompress\n\n// console.log(expand('fixture', '6ing'))\n// console.log(toArray('heard|4'))","const reverseObj = function (obj) {\n  return Object.entries(obj).reduce((h, a) => {\n    h[a[1]] = a[0]\n    return h\n  }, {})\n}\n\nconst reverse = function (model) {\n  let { rules, exceptions, rev } = model\n  exceptions = reverseObj(exceptions)\n  return {\n    reversed: !Boolean(model.reversed),//toggle this\n    rules,\n    exceptions,\n    rev\n  }\n}\nexport default reverse","import data from './_data.js'\nimport { reverse, uncompress } from 'suffix-thumb'\n// import { reverse, uncompress } from '/Users/spencer/mountain/suffix-thumb'\n// const uncompress = function () { }\n// const reverse = function () { }\nconst fromPast = uncompress(data.PastTense)\nconst fromPresent = uncompress(data.PresentTense)\nconst fromGerund = uncompress(data.Gerund)\nconst fromParticiple = uncompress(data.Participle)\n\nconst toPast = reverse(fromPast)\nconst toPresent = reverse(fromPresent)\nconst toGerund = reverse(fromGerund)\nconst toParticiple = reverse(fromParticiple)\n\nconst toComparative = uncompress(data.Comparative)\nconst toSuperlative = uncompress(data.Superlative)\nconst fromComparative = reverse(toComparative)\nconst fromSuperlative = reverse(toSuperlative)\n\nexport default {\n  fromPast,\n  fromPresent,\n  fromGerund,\n  fromParticiple,\n  toPast,\n  toPresent,\n  toGerund,\n  toParticiple,\n  // adjectives\n  toComparative,\n  toSuperlative,\n  fromComparative,\n  fromSuperlative\n}\n// console.log(convert('collide', toPast))","//nouns that also signal the title of an unknown organization\n//todo remove/normalize plural forms\nexport default [\n  'academy',\n  'administration',\n  'agence',\n  'agences',\n  'agencies',\n  'agency',\n  'airlines',\n  'airways',\n  'army',\n  'assoc',\n  'associates',\n  'association',\n  'assurance',\n  'authority',\n  'autorite',\n  'aviation',\n  'bank',\n  'banque',\n  'board',\n  'boys',\n  'brands',\n  'brewery',\n  'brotherhood',\n  'brothers',\n  'bureau',\n  'cafe',\n  'co',\n  'caisse',\n  'capital',\n  'care',\n  'cathedral',\n  'center',\n  'centre',\n  'chemicals',\n  'choir',\n  'chronicle',\n  'church',\n  'circus',\n  'clinic',\n  'clinique',\n  'club',\n  'co',\n  'coalition',\n  'coffee',\n  'collective',\n  'college',\n  'commission',\n  'committee',\n  'communications',\n  'community',\n  'company',\n  'comprehensive',\n  'computers',\n  'confederation',\n  'conference',\n  'conseil',\n  'consulting',\n  'containers',\n  'corporation',\n  'corps',\n  'corp',\n  'council',\n  'crew',\n  'data',\n  'departement',\n  'department',\n  'departments',\n  'design',\n  'development',\n  'directorate',\n  'division',\n  'drilling',\n  'education',\n  'eglise',\n  'electric',\n  'electricity',\n  'energy',\n  'ensemble',\n  'enterprise',\n  'enterprises',\n  'entertainment',\n  'estate',\n  'etat',\n  'faculty',\n  'federation',\n  'financial',\n  'fm',\n  'foundation',\n  'fund',\n  'gas',\n  'gazette',\n  'girls',\n  'government',\n  'group',\n  'guild',\n  'herald',\n  'holdings',\n  'hospital',\n  'hotel',\n  'hotels',\n  'inc',\n  'industries',\n  'institut',\n  'institute',\n  'institutes',\n  'insurance',\n  'international',\n  'interstate',\n  'investment',\n  'investments',\n  'investors',\n  'journal',\n  'laboratory',\n  'labs',\n  'llc',\n  'ltd',\n  'limited',\n  'machines',\n  'magazine',\n  'management',\n  'marine',\n  'marketing',\n  'markets',\n  'media',\n  'memorial',\n  'ministere',\n  'ministry',\n  'military',\n  'mobile',\n  'motor',\n  'motors',\n  'musee',\n  'museum',\n  'news',\n  'observatory',\n  'office',\n  'oil',\n  'optical',\n  'orchestra',\n  'organization',\n  'partners',\n  'partnership',\n  'petrol',\n  'petroleum',\n  'pharmacare',\n  'pharmaceutical',\n  'pharmaceuticals',\n  'pizza',\n  'plc',\n  'police',\n  'polytechnic',\n  'post',\n  'power',\n  'press',\n  'productions',\n  'quartet',\n  'radio',\n  'reserve',\n  'resources',\n  'restaurant',\n  'restaurants',\n  'savings',\n  'school',\n  'securities',\n  'service',\n  'services',\n  'societe',\n  'society',\n  'sons',\n  // 'standard',\n  'subcommittee',\n  'syndicat',\n  'systems',\n  'telecommunications',\n  'telegraph',\n  'television',\n  'times',\n  'tribunal',\n  'tv',\n  'union',\n  'university',\n  'utilities',\n  'workers',\n].reduce((h, str) => {\n  h[str] = true\n  return h\n}, {})\n","export default [\n  [/([^v])ies$/i, '$1y'],\n  [/(ise)s$/i, '$1'],//promises\n  [/(kn|[^o]l|w)ives$/i, '$1ife'],\n  [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)ves$/i, '$1f'],\n  [/^(dwar|handkerchie|hoo|scar|whar)ves$/i, '$1f'],\n  [/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a'],\n  [/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, '$1us'],\n  [/(buffal|tomat|tornad)(oes)$/i, '$1o'],\n\n  [/(ause)s$/i, '$1'],//causes\n  [/(ease)s$/i, '$1'],//diseases\n  [/(ious)es$/i, '$1'],//geniouses\n  [/(ouse)s$/i, '$1'],//houses\n  [/(ose)s$/i, '$1'],//roses\n\n  [/(..[aeiu]s)es$/i, '$1'],\n  [/(vert|ind|cort)(ices)$/i, '$1ex'],\n  [/(matr|append)(ices)$/i, '$1ix'],\n  [/([xo]|ch|ss|sh)es$/i, '$1'],\n  [/men$/i, 'man'],\n  [/(n)ews$/i, '$1ews'],\n  [/([ti])a$/i, '$1um'],\n  [/([^aeiouy]|qu)ies$/i, '$1y'],\n  [/(s)eries$/i, '$1eries'],\n  [/(m)ovies$/i, '$1ovie'],\n  [/(cris|ax|test)es$/i, '$1is'],\n  [/(alias|status)es$/i, '$1'],\n  [/(ss)$/i, '$1'],\n  [/(ic)s$/i, '$1'],\n  [/s$/i, ''],\n]\n","import rules from './_rules.js'\nconst invertObj = function (obj) {\n  return Object.keys(obj).reduce((h, k) => {\n    h[obj[k]] = k\n    return h\n  }, {})\n}\n\nconst toSingular = function (str, model) {\n  const { irregularPlurals } = model.two\n  let invert = invertObj(irregularPlurals) //(not very efficient)\n  // check irregulars list\n  if (invert.hasOwnProperty(str)) {\n    return invert[str]\n  }\n  // go through our regexes\n  for (let i = 0; i < rules.length; i++) {\n    if (rules[i][0].test(str) === true) {\n      // console.log(rules[i])\n      str = str.replace(rules[i][0], rules[i][1])\n      return str\n    }\n  }\n  return str\n}\nexport default toSingular\n","import toPlural from './toPlural/index.js'\nimport toSingular from './toSingular/index.js'\n\nconst all = function (str, model) {\n  let arr = [str]\n  let p = toPlural(str, model)\n  if (p !== str) {\n    arr.push(p)\n  }\n  let s = toSingular(str, model)\n  if (s !== str) {\n    arr.push(s)\n  }\n  return arr\n}\n\nexport default { toPlural, toSingular, all }\n","let guessVerb = {\n  Gerund: ['ing'],\n  Actor: ['erer'],\n  Infinitive: [\n    'ate',\n    'ize',\n    'tion',\n    'rify',\n    'then',\n    'ress',\n    'ify',\n    'age',\n    'nce',\n    'ect',\n    'ise',\n    'ine',\n    'ish',\n    'ace',\n    'ash',\n    'ure',\n    'tch',\n    'end',\n    'ack',\n    'and',\n    'ute',\n    'ade',\n    'ock',\n    'ite',\n    'ase',\n    'ose',\n    'use',\n    'ive',\n    'int',\n    'nge',\n    'lay',\n    'est',\n    'ain',\n    'ant',\n    'ent',\n    'eed',\n    'er',\n    'le',\n    'unk',\n    'ung',\n    'upt',\n    'en',\n  ],\n  PastTense: ['ept', 'ed', 'lt', 'nt', 'ew', 'ld'],\n  PresentTense: [\n    'rks',\n    'cks',\n    'nks',\n    'ngs',\n    'mps',\n    'tes',\n    'zes',\n    'ers',\n    'les',\n    'acks',\n    'ends',\n    'ands',\n    'ocks',\n    'lays',\n    'eads',\n    'lls',\n    'els',\n    'ils',\n    'ows',\n    'nds',\n    'ays',\n    'ams',\n    'ars',\n    'ops',\n    'ffs',\n    'als',\n    'urs',\n    'lds',\n    'ews',\n    'ips',\n    'es',\n    'ts',\n    'ns',\n  ],\n  Participle: ['ken', 'wn']\n}\n//flip it into a lookup object\nguessVerb = Object.keys(guessVerb).reduce((h, k) => {\n  guessVerb[k].forEach(a => (h[a] = k))\n  return h\n}, {})\nexport default guessVerb\n","import guess from './_guess.js'\n\n/** it helps to know what we're conjugating from */\nconst getTense = function (str) {\n  let three = str.substring(str.length - 3)\n  if (guess.hasOwnProperty(three) === true) {\n    return guess[three]\n  }\n  let two = str.substring(str.length - 2)\n  if (guess.hasOwnProperty(two) === true) {\n    return guess[two]\n  }\n  let one = str.substring(str.length - 1)\n  if (one === 's') {\n    return 'PresentTense'\n  }\n  return null\n}\nexport default getTense","import { convert } from 'suffix-thumb'\nimport getTense from '../getTense/index.js'\n\nconst toParts = function (str, model) {\n  let prefix = ''\n  let prefixes = {}\n  if (model.one && model.one.prefixes) {\n    prefixes = model.one.prefixes\n  }\n  // pull-apart phrasal verb 'fall over'\n  let [verb, particle] = str.split(/ /)\n  // support 'over cleaned'\n  if (particle && prefixes[verb] === true) {\n    prefix = verb\n    verb = particle\n    particle = ''\n  }\n  return {\n    prefix, verb, particle\n  }\n}\n\n\n// dunno about these..\nconst copulaMap = {\n  are: 'be',\n  were: 'be',\n  been: 'be',\n  is: 'be',\n  am: 'be',\n  was: 'be',\n  be: 'be',\n  being: 'be',\n}\n\nconst toInfinitive = function (str, model, tense) {\n  const { fromPast, fromPresent, fromGerund, fromParticiple } = model.two.models\n  let { prefix, verb, particle } = toParts(str, model)\n  let inf = ''\n  if (!tense) {\n    tense = getTense(str)\n  }\n  if (copulaMap.hasOwnProperty(str)) {\n    inf = copulaMap[str]\n  } else if (tense === 'Participle') {\n    inf = convert(verb, fromParticiple)\n  } else if (tense === 'PastTense') {\n    inf = convert(verb, fromPast)\n  } else if (tense === 'PresentTense') {\n    inf = convert(verb, fromPresent)\n  } else if (tense === 'Gerund') {\n    inf = convert(verb, fromGerund)\n  } else {\n    return str\n  }\n\n  // stitch phrasal back on\n  if (particle) {\n    inf += ' ' + particle\n  }\n  // stitch prefix back on\n  if (prefix) {\n    inf = prefix + ' ' + inf\n  }\n  return inf\n}\nexport default toInfinitive\n\n// console.log(toInfinitive('snarled', { one: {} }))\n// console.log(convert('snarled', fromPast))","// import { toPast, toPresent, toGerund, toParticiple } from '../../../../model/models/index.js'\nimport { convert } from 'suffix-thumb'\n\n// pull-apart phrasal verb 'fall over'\nconst parse = (inf) => {\n  if (/ /.test(inf)) {\n    return inf.split(/ /)\n  }\n  return [inf, '']\n}\n\n//we run this on every verb in the lexicon, so please keep it fast\n//we assume the input word is a proper infinitive\nconst conjugate = function (inf, model) {\n  const { toPast, toPresent, toGerund, toParticiple } = model.two.models\n  // ad-hoc Copula response\n  if (inf === 'be') {\n    return {\n      Infinitive: inf,\n      Gerund: 'being',\n      PastTense: 'was',\n      PresentTense: 'is',\n    }\n  }\n  let [str, particle] = parse(inf)\n  let found = {\n    Infinitive: inf,\n    PastTense: convert(str, toPast),\n    PresentTense: convert(str, toPresent),\n    Gerund: convert(str, toGerund),\n    FutureTense: 'will ' + inf\n  }\n  // add past-participle if it's interesting\n  // drive -> driven (not drove)\n  let pastPrt = convert(str, toParticiple)\n  if (pastPrt !== inf && pastPrt !== found.PastTense) {\n    found.Participle = pastPrt\n  }\n  // put phrasal-verbs back together again\n  if (particle) {\n    Object.keys(found).forEach(k => {\n      found[k] += ' ' + particle\n    })\n  }\n  return found\n}\n\n\nexport default conjugate\n\n// console.log(toPresent.rules.y)\n// console.log(convert('buy', toPresent))\n\n","import toInfinitive from './toInfinitive/index.js'\nimport conjugate from './conjugate/index.js'\n\nconst all = function (str, model) {\n  let res = conjugate(str, model)\n  delete res.FutureTense\n  return Object.values(res).filter(s => s)\n}\nexport default {\n  toInfinitive, conjugate, all\n}\n","import { convert } from 'suffix-thumb'\n// import toAdverb from './adverbs/toAdverb.js'\n\n\nconst toSuperlative = function (adj, model) {\n  const mod = model.two.models.toSuperlative\n  return convert(adj, mod)\n}\nconst toComparative = function (adj, model) {\n  const mod = model.two.models.toComparative\n  return convert(adj, mod)\n}\nconst fromComparative = function (adj, model) {\n  const mod = model.two.models.fromComparative\n  return convert(adj, mod)\n}\nconst fromSuperlative = function (adj, model) {\n  const mod = model.two.models.fromSuperlative\n  return convert(adj, mod)\n}\n\n\nexport {\n  toSuperlative, toComparative, fromComparative, fromSuperlative\n}\n","//sweep-through all suffixes\nconst suffixLoop = function (str = '', suffixes = []) {\n  const len = str.length\n  let max = len <= 6 ? len - 1 : 6\n  for (let i = max; i >= 1; i -= 1) {\n    let suffix = str.substring(len - i, str.length)\n    if (suffixes[suffix.length].hasOwnProperty(suffix) === true) {\n      let pre = str.slice(0, len - i)\n      let post = suffixes[suffix.length][suffix]\n      return pre + post\n    }\n  }\n  return null\n}\nexport default suffixLoop","import doRules from './lib.js'\n\nconst s = 'ically'\nconst ical = new Set([\n  'analyt' + s, //analytical\n  'chem' + s,// chemical\n  'class' + s, //classical\n  'clin' + s, // clinical\n  'crit' + s,// critical\n  'ecolog' + s,// ecological\n  'electr' + s,// electrical\n  'empir' + s, // empirical\n  'frant' + s, // frantical\n  'grammat' + s,// grammatical\n  'ident' + s, // identical\n  'ideolog' + s, // ideological\n  'log' + s, // logical\n  'mag' + s, //magical\n  'mathemat' + s,// mathematical\n  'mechan' + s,// mechanical\n  'med' + s,// medical\n  'method' + s, // methodical\n  'method' + s,// methodical\n  'mus' + s, // musical\n  'phys' + s, // physical\n  'phys' + s,// physical\n  'polit' + s,// political\n  'pract' + s,// practical\n  'rad' + s, //radical\n  'satir' + s, // satirical\n  'statist' + s, // statistical\n  'techn' + s,// technical\n  'technolog' + s, // technological\n  'theoret' + s,// theoretical\n  'typ' + s,// typical\n  'vert' + s,// vertical\n  'whims' + s,// whimsical\n])\n\nconst suffixes = [\n  null,\n  {},\n  { 'ly': '' },\n  {\n    'ily': 'y',\n    'bly': 'ble',\n    'ply': 'ple',\n  },\n  {\n    'ally': 'al',\n    'rply': 'rp',\n  },\n  {\n    'ually': 'ual',\n    'ially': 'ial',\n    'cally': 'cal',\n    'eally': 'eal',\n    'rally': 'ral',\n    'nally': 'nal',\n    'mally': 'mal',\n    'eeply': 'eep',\n    'eaply': 'eap',\n  },\n  {\n    ically: 'ic',\n  }\n]\n\nconst noAdj = new Set([\n  'early',\n  'only',\n  'hourly',\n  'daily',\n  'weekly',\n  'monthly',\n  'yearly',\n  'mostly',\n  'duly',\n  'unduly',\n  'especially',\n  'undoubtedly',\n  'conversely',\n  'namely',\n  'exceedingly',\n  'presumably',\n  'accordingly',\n  'overly',\n  'best',\n  'latter',\n  'little',\n  'long',\n  'low'\n])\n\n// exceptions to rules\nconst exceptions = {\n  wholly: 'whole',\n  fully: 'full',\n  truly: 'true',\n  gently: 'gentle',\n  singly: 'single',\n  customarily: 'customary',\n  idly: 'idle',\n  publically: 'public',\n  quickly: 'fast',\n\n  well: 'good',// -?\n}\n\n\nconst toAdjective = function (str) {\n  if (!str.endsWith('ly')) {\n    return null\n  }\n  // 'electronic' vs 'electronical'\n  if (ical.has(str)) {\n    return str.replace(/ically/, 'ical')\n  }\n  if (noAdj.has(str)) {\n    return null\n  }\n  if (exceptions.hasOwnProperty(str)) {\n    return exceptions[str]\n  }\n  return doRules(str, suffixes) || str\n}\nexport default toAdjective\n\n// console.log(toAdjective('emphatically'))\n// console.log(toAdjective('usually'))\n// console.log(toAdjective('mechanically'))\n// console.log(toAdjective('vertically'))","import doRules from './lib.js'\n\nconst suffixes = [\n  null,\n  {\n    y: 'ily'\n  },\n  {\n    ly: 'ly',//unchanged\n    ic: 'ically'\n  },\n  {\n    ial: 'ially',\n    ual: 'ually',\n    tle: 'tly',\n    ble: 'bly',\n    ple: 'ply',\n    ary: 'arily',\n  },\n  {},\n  {},\n  {},\n]\n\nconst exceptions = {\n  cool: 'cooly',\n  whole: 'wholly',\n  full: 'fully',\n  good: 'well',\n  idle: 'idly',\n  public: 'publicly',\n  single: 'singly',\n  special: 'especially',\n}\n\n// a lot of adjectives *don't really* have a adverb\n// 'roomy' -> 'roomily'\n// but here, conjugate what it would be, if it made sense to\nconst toAdverb = function (str) {\n  if (exceptions.hasOwnProperty(str)) {\n    return exceptions[str]\n  }\n  let res = doRules(str, suffixes)\n  if (res) {\n    return res\n  }\n  return str + 'ly'\n}\nexport default toAdverb\n// console.log(toAdverb('unsightly'))","import doRules from './lib.js'\n\nconst suffixes = [\n  null,\n  {\n    'y': 'iness',\n  },\n  {\n    'le': 'ility',\n    'al': 'ality',\n    'ay': 'ayness',\n  },\n  {\n    'ial': 'y',\n    'ing': 'ment',\n    'ess': 'essness',\n    'ous': 'ousness',\n    'ive': 'ivity',\n    'ect': 'ection'\n  },\n  {\n    'ting': 'ting',\n    'ring': 'ring',\n    'cial': 'ciality',\n    'nate': 'nation',\n    'rate': 'ration',\n    'bing': 'bingness',\n    'atic': 'acy',//democratic\n    'sing': 'se',\n    'iful': 'y',//beautify, merciful\n    'ible': 'ibility'//credible\n  },\n  {\n    'erate': 'eration'\n\n  },\n  {\n    'ionate': 'ion'\n  },\n]\n\nconst exceptions = {\n  clean: 'cleanliness',\n  naive: 'naivety',\n  dramatic: 'drama',\n  ironic: 'irony',\n  deep: 'depth',\n  automatic: 'automation',\n  simple: 'simplicity',\n  boring: 'boredom',\n  free: 'freedom',\n  wise: 'wisdom',\n  fortunate: 'fortune',\n  gentle: 'gentleness',\n  quiet: 'quiet',\n  expensive: 'expense',\n  offensive: 'offence'\n}\n\nconst dontDo = new Set([\n  'terrible',\n  'annoying',\n])\n\n// a lot of adjectives *don't really* have a noun-form\n// 'broken' -> 'brokeness'?\n// 'surreal' -> 'surrealness'?\n// but here, conjugate what it would be, if it made sense to\nconst toNoun = function (str) {\n  if (exceptions.hasOwnProperty(str)) {\n    return exceptions[str]\n  }\n  if (dontDo.has(str)) {\n    return null\n  }\n  let res = doRules(str, suffixes)\n  if (res) {\n    return res\n  }\n  return str + 'ness'\n}\nexport default toNoun\n// console.log(toNoun('clever'))","import { toSuperlative, toComparative, fromSuperlative, fromComparative } from './inflect.js'\nimport fromAdverb from './adverbs/toAdjective.js'\nimport toAdverb from './adverbs/toAdverb.js'\nimport toNoun from './adverbs/toNoun.js'\n\nconst all = function (str, model) {\n  let arr = [str]\n  arr.push(toSuperlative(str, model))\n  arr.push(toComparative(str, model))\n  arr.push(toAdverb(str))\n  arr = arr.filter(s => s)\n  arr = new Set(arr)\n  return Array.from(arr)\n}\n\nexport default {\n  toSuperlative, toComparative, toAdverb, toNoun,\n  fromAdverb, fromSuperlative, fromComparative,\n  all,\n}","import nouns from './nouns/index.js'\nimport verbs from './verbs/index.js'\nimport adjectives from './adjectives/index.js'\n\nexport default {\n  noun: nouns,\n  verb: verbs,\n  adjective: adjectives\n\n}\n","// transformations to make on our lexicon\nexport default {\n  // add plural forms of singular nouns\n  Singular: (word, lex, methods, model) => {\n    let already = model.one.lexicon\n    let plural = methods.two.transform.noun.toPlural(word, model)\n    if (!already[plural]) {\n      lex[plural] = lex[plural] || 'Plural'\n    }\n  },\n\n  // superlative/ comparative forms for adjectives\n  Comparable: (word, lex, methods, model) => {\n    let already = model.one.lexicon\n    let { toSuperlative, toComparative } = methods.two.transform.adjective\n    // fast -> fastest\n    let sup = toSuperlative(word, model)\n    if (!already[sup]) {\n      lex[sup] = lex[sup] || 'Superlative'\n    }\n    // fast -> faster\n    let comp = toComparative(word, model)\n    if (!already[comp]) {\n      lex[comp] = lex[comp] || 'Comparative'\n    }\n    // overwrite\n    lex[word] = 'Adjective'\n  },\n\n  // 'german' -> 'germans'\n  Demonym: (word, lex, methods, model) => {\n    let plural = methods.two.transform.noun.toPlural(word, model)\n    lex[plural] = lex[plural] || ['Demonym', 'Plural']\n  },\n\n  // conjugate all forms of these verbs\n  Infinitive: (word, lex, methods, model) => {\n    let already = model.one.lexicon\n    let all = methods.two.transform.verb.conjugate(word, model)\n    Object.entries(all).forEach(a => {\n      if (!already[a[1]] && !lex[a[1]]) {\n        lex[a[1]] = a[0]\n      }\n    })\n  },\n\n  // 'walk up' should conjugate, too\n  PhrasalVerb: (word, lex, methods, model) => {\n    let already = model.one.lexicon\n    lex[word] = ['PhrasalVerb', 'Infinitive']\n    let _multi = model.one._multiCache\n    let [inf, rest] = word.split(' ')\n    // add root verb\n    if (!already[inf]) {\n      lex[inf] = lex[inf] || 'Infinitive'\n    }\n    // conjugate it\n    let all = methods.two.transform.verb.conjugate(inf, model)\n    Object.entries(all).forEach(a => {\n      // not 'walker up', or 'had taken up'\n      if (a[0] === 'Actor' || a[1] === '') {\n        return\n      }\n      // add the root verb, alone\n      if (!lex[a[1]] && !already[a[1]]) {\n        lex[a[1]] = a[0]\n      }\n      _multi[a[1]] = true\n      let str = a[1] + ' ' + rest\n      lex[str] = lex[str] || [a[0], 'PhrasalVerb']\n    })\n  },\n\n  // expand 'million'\n  Multiple: (word, lex) => {\n    lex[word] = ['Multiple', 'Cardinal']\n    // 'millionth'\n    lex[word + 'th'] = ['Multiple', 'Ordinal']\n    // 'millionths'\n    lex[word + 'ths'] = ['Multiple', 'Fraction']\n  },\n  // expand number-words\n  Cardinal: (word, lex) => {\n    lex[word] = ['TextValue', 'Cardinal']\n  },\n\n  // 'millionth'\n  Ordinal: (word, lex) => {\n    lex[word] = ['TextValue', 'Ordinal']\n    lex[word + 's'] = ['TextValue', 'Fraction']\n  },\n}\n","import fancyThings from './byTag.js'\n\n// derive clever things from our lexicon key-value pairs\n// this method runs as the pre-tagger plugin gets loaded\nconst expand = function (words, world) {\n  const { methods, model } = world\n  let lex = {}\n  // console.log('start:', Object.keys(lex).length)\n  let _multi = {}\n  // go through each word in this key-value obj:\n  Object.keys(words).forEach(word => {\n    let tag = words[word]\n    // normalize lexicon a little bit\n    word = word.toLowerCase().trim()\n    word = word.replace(/'s\\b/, '')\n    // cache multi-word terms\n    let split = word.split(/ /)\n    if (split.length > 1) {\n      _multi[split[0]] = true\n    }\n    // do any clever-business, by it's tag\n    if (fancyThings.hasOwnProperty(tag) === true) {\n      fancyThings[tag](word, lex, methods, model)\n    }\n    lex[word] = lex[word] || tag\n  })\n  // cleanup\n  delete lex['']\n  delete lex[null]\n  delete lex[' ']\n  return { lex, _multi }\n}\nexport default expand\n","//similar to plural/singularize rules, but not the same\nconst isPlural = {\n  e: [\n    'mice',\n    'louse',\n    'antennae',\n    'formulae',\n    'nebulae',\n    'vertebrae',\n    'vitae',\n  ],\n  i: [\n    'tia',\n    'octopi',\n    'viri',\n    'radii',\n    'nuclei',\n    'fungi',\n    'cacti',\n    'stimuli',\n  ],\n  n: [\n    'men',\n  ],\n  t: [\n    'feet'\n  ]\n}\n// plural words as exceptions to suffix-rules\nconst exceptions = new Set([\n  'formulas',\n  'koalas',\n  'israelis',\n  'menus',\n])\n\nconst notPlural = [\n  'bus',\n  'mas',//christmas\n  'was',\n  'las',\n  'ias',//alias\n  'xas',\n  'vas',\n  'cis',//probocis\n  'lis',\n  'nis',//tennis\n  'ois',\n  'ris',\n  'sis',//thesis\n  'tis',//mantis, testis\n  'xis',\n  'aus',\n  'cus',\n  'eus',//nucleus\n  'fus',//doofus\n  'gus',//fungus\n  'ius',//radius\n  'lus',//stimulus\n  'nus',\n  'ous',\n  'pus',//octopus\n  'rus',//virus\n  'sus',//census\n  'tus',//status,cactus\n  'xus',\n  '\\'s',\n  'ss',\n]\n\nconst looksPlural = function (str) {\n  // not long enough to be plural\n  if (!str || str.length <= 3) {\n    return false\n  }\n  // 'menus' etc\n  if (exceptions.has(str)) {\n    return true\n  }\n  let end = str[str.length - 1]\n  // look at 'firemen'\n  if (isPlural.hasOwnProperty(end)) {\n    return isPlural[end].find(suff => str.endsWith(suff))\n  }\n  if (end !== 's') {\n    return false\n  }\n  // look for 'virus'\n  if (notPlural.find(suff => str.endsWith(suff))) {\n    return false\n  }\n  // ends with an s, seems plural i guess.\n  return true\n}\nexport default looksPlural\n","import transform from './transform/index.js'\nimport expandLexicon from './expand/index.js'\nimport quickSplit from './quickSplit.js'\nimport looksPlural from './looksPlural.js'\n\n\nexport default {\n  two: {\n    quickSplit,\n    expandLexicon,\n    transform,\n    looksPlural\n  },\n}\n","// roughly, split a document by comma or semicolon\n\nconst splitOn = function (terms, i) {\n  const isNum = /^[0-9]+$/\n  let term = terms[i]\n  // early on, these may not be dates yet:\n  if (!term) {\n    return false\n  }\n  const maybeDate = new Set(['may', 'april', 'august', 'jan'])\n  // veggies, like figs\n  if (term.normal === 'like' || maybeDate.has(term.normal)) {\n    return false\n  }\n  // toronto, canada  - tuesday, march\n  if (term.tags.has('Place') || term.tags.has('Date')) {\n    return false\n  }\n  if (terms[i - 1]) {\n    if (terms[i - 1].tags.has('Date') || maybeDate.has(terms[i - 1].normal)) {\n      return false\n    }\n  }\n  // don't split numbers, yet\n  let str = term.normal\n  if (str.length === 1 || str.length === 2 || str.length === 4) {\n    if (isNum.test(str)) {\n      return false\n    }\n  }\n  return true\n}\n\n// kind-of a dirty sentence chunker\nconst quickSplit = function (document) {\n  const splitHere = /[,:;]/\n  let arr = []\n  document.forEach(terms => {\n    let start = 0\n    terms.forEach((term, i) => {\n      // does it have a comma/semicolon ?\n      if (splitHere.test(term.post) && splitOn(terms, i + 1)) {\n        arr.push(terms.slice(start, i + 1))\n        start = i + 1\n      }\n    })\n    if (start < terms.length) {\n      arr.push(terms.slice(start, terms.length))\n    }\n  })\n  return arr\n}\n\nexport default quickSplit","// import irregularVerbs from './conjugations.js'\n// harvest list of irregulars for any juicy word-data\nconst expandIrregulars = function (model) {\n  const { irregularPlurals } = model.two\n  const { lexicon } = model.one\n  Object.entries(irregularPlurals).forEach(a => {\n    lexicon[a[0]] = lexicon[a[0]] || 'Singular'\n    lexicon[a[1]] = lexicon[a[1]] || 'Plural'\n  })\n  return model\n}\nexport default expandIrregulars\n","\nconst getWords = function (model, left, right) {\n  return Object.entries(model.exceptions).reduce((h, a) => {\n    if (left) {\n      h[a[0]] = left\n    }\n    h[a[1]] = right\n    return h\n  }, {})\n}\n\n\nconst expandModels = function (model) {\n  let { lexicon } = model.one\n  const { toPast, toPresent, toGerund, toSuperlative, toComparative } = model.two.models\n  let res = {}\n  let words = {}\n  // past-tense\n  words = getWords(toPast, 'Infinitive', 'PastTense')\n  Object.assign(res, words)\n  // present-tense\n  words = getWords(toPresent, 'Infinitive', 'Verb')\n  Object.assign(res, words)\n  // gerund-form\n  words = getWords(toGerund, 'Infinitive', 'Gerund')\n  Object.assign(res, words)\n  // superlative\n  words = getWords(toSuperlative, 'Adjective', 'Superlative')\n  Object.assign(res, words)\n  // comparative\n  words = getWords(toComparative, 'Adjective', 'Comparative')\n  Object.assign(res, words)\n\n  model.one.lexicon = Object.assign(res, lexicon)\n\n  return model\n}\nexport default expandModels","import methods from '../../methods/index.js'\nimport expandIrregulars from './irregulars.js'\nimport expandModels from './models.js'\nimport conjugate from '../../methods/transform/verbs/conjugate/index.js'\nimport { toSuperlative, toComparative } from '../../methods/transform/adjectives/inflect.js'\nimport toInfinitive from '../../methods/transform/verbs/toInfinitive/index.js'\nimport models from '../models/index.js'\nlet tmpModel = {\n  two: { models }\n}\n\n// defaults for switches\nconst switchDefaults = {\n  // 'amusing'\n  'Adj|Gerund': 'Adjective', //+conjugations\n  // 'standard'\n  'Adj|Noun': 'Adjective',\n  // 'boiled'\n  'Adj|Past': 'Adjective', //+conjugations\n  // 'smooth'\n  'Adj|Present': 'Adjective',//+conjugations\n  // 'box'\n  'Noun|Verb': 'Singular', //+conjugations (no-present)\n  //'singing'\n  'Noun|Gerund': 'Gerund', //+conjugations\n  // 'hope'\n  'Person|Noun': 'Noun',\n  // 'April'\n  'Person|Date': 'Month',\n  // 'rob'\n  'Person|Verb': 'Person',//+conjugations\n  // 'victoria'\n  'Person|Place': 'Person',\n  // 'boxes'\n  'Plural|Verb': 'Plural', //(these are already derivative)\n  // 'miles'\n  'Unit|Noun': 'Noun',\n  // 'captain'\n  'Honorific|Noun': 'Noun',\n}\n\nconst expandLexicon = function (words, model) {\n  // do clever tricks to grow the words\n  const world = { model, methods }\n  let { lex, _multi } = methods.two.expandLexicon(words, world)\n  // store multiple-word terms in a cache\n  Object.assign(model.one.lexicon, lex)\n  Object.assign(model.one._multiCache, _multi)\n  return model\n}\n\n// these words have no singular/plural conjugation\nconst addUncountables = function (words, model) {\n  Object.keys(words).forEach(k => {\n    if (words[k] === 'Uncountable') {\n      model.two.uncountable[k] = true\n      words[k] = 'Uncountable'\n    }\n  })\n  return model\n}\n\nconst expandVerb = function (str, words, doPresent) {\n  let obj = conjugate(str, tmpModel)\n  words[obj.PastTense] = words[obj.PastTense] || 'PastTense'\n  words[obj.Gerund] = words[obj.Gerund] || 'Gerund'\n  if (doPresent === true) {\n    // is this plural noun, or present-tense?\n    words[obj.PresentTense] = words[obj.PresentTense] || 'PresentTense'\n  }\n}\n\nconst expandAdjective = function (str, words, model) {\n  let sup = toSuperlative(str, model)\n  words[sup] = words[sup] || 'Superlative'\n  let comp = toComparative(str, model)\n  words[comp] = words[comp] || 'Comparative'\n}\n\n// harvest ambiguous words for any conjugations\nconst expandVariable = function (switchWords, model) {\n  let words = {}\n  const lex = model.one.lexicon\n  //add first tag as an assumption for each variable word\n  Object.keys(switchWords).forEach(w => {\n    const name = switchWords[w]\n    words[w] = switchDefaults[name]\n    // conjugate some verbs\n    if (name === 'Noun|Verb' || name === 'Person|Verb') {\n      expandVerb(w, lex, false)\n    }\n    if (name === 'Adj|Present') {\n      expandVerb(w, lex, true)\n      expandAdjective(w, lex, model)\n    }\n    if (name === 'Adj|Gerund' || name === 'Noun|Gerund') {\n      let inf = toInfinitive(w, tmpModel, 'Gerund')\n      if (!lex[inf]) {\n        words[inf] = 'Infinitive' //expand it later\n      }\n    }\n    if (name === 'Adj|Past') {\n      let inf = toInfinitive(w, tmpModel, 'PastTense')\n      if (!lex[inf]) {\n        words[inf] = 'Infinitive' //expand it later\n      }\n    }\n  })\n  // add conjugations\n  model = expandLexicon(words, model)\n  return model\n}\n\nconst expand = function (model) {\n  model = expandLexicon(model.one.lexicon, model)\n  model = addUncountables(model.one.lexicon, model)\n  model = expandVariable(model.two.switches, model)\n  model = expandModels(model)\n  model = expandIrregulars(model)\n  return model\n}\nexport default expand\n","import irregularPlurals from './irregulars/plurals.js'\nimport { lexicon, switches } from './lexicon/index.js'\nimport clues from './clues/index.js'\nimport suffixPatterns from './patterns/suffixes.js'\nimport prefixPatterns from './patterns/prefixes.js'\nimport endsWith from './patterns/endsWith.js'\nimport neighbours from './patterns/neighbours.js'\nimport models from './models/index.js'\nimport regexNormal from './regex/regex-normal.js'\nimport regexText from './regex/regex-text.js'\nimport regexNumbers from './regex/regex-numbers.js'\nimport orgWords from './orgWords.js'\nimport expandLexicon from './_expand/index.js'\n\nlet model = {\n  one: {\n    _multiCache: {},\n    lexicon,\n  },\n  two: {\n    irregularPlurals,\n    models,\n\n    suffixPatterns,\n    prefixPatterns,\n    endsWith,\n    neighbours,\n\n    regexNormal,\n    regexText,\n    regexNumbers,\n\n    switches,\n    clues,\n\n    uncountable: {},\n\n    orgWords,\n  },\n\n}\nmodel = expandLexicon(model)\nexport default model\n\n// console.log(model.one.lexicon.see)","export default [\n  //web tags\n  [/^[\\w.]+@[\\w.]+\\.[a-z]{2,3}$/, 'Email'],\n  [/^(https?:\\/\\/|www\\.)+\\w+\\.[a-z]{2,3}/, 'Url', 'http..'],\n  [/^[a-z0-9./].+\\.(com|net|gov|org|ly|edu|info|biz|dev|ru|jp|de|in|uk|br|io|ai)/, 'Url', '.com'],\n\n  // timezones\n  [/^[PMCE]ST$/, 'Timezone', 'EST'],\n\n  //names\n  [/^ma?c'.*/, 'LastName', \"mc'neil\"],\n  [/^o'[drlkn].*/, 'LastName', \"o'connor\"],\n  [/^ma?cd[aeiou]/, 'LastName', 'mcdonald'],\n\n  //slang things\n  [/^(lol)+[sz]$/, 'Expression', 'lol'],\n  [/^wo{2,}a*h?$/, 'Expression', 'wooah'],\n  [/^(hee?){2,}h?$/, 'Expression', 'hehe'],\n  [/^(un|de|re)\\\\-[a-z\\u00C0-\\u00FF]{2}/, 'Verb', 'un-vite'],\n\n  // m/h\n  [/^(m|k|cm|km)\\/(s|h|hr)$/, 'Unit', '5 k/m'],\n  // μg/g\n  [/^(ug|ng|mg)\\/(l|m3|ft3)$/, 'Unit', 'ug/L'],\n]\n","export default [\n  // #coolguy\n  [/^#[\\p{Number}_]*\\p{Letter}/u, 'HashTag'],// can't be all numbers\n\n  // @spencermountain\n  [/^@\\w{2,}$/, 'AtMention'],\n\n  // period-ones acronyms - f.b.i.\n  [/^([A-Z]\\.){2}[A-Z]?/i, ['Acronym', 'Noun'], 'F.B.I'], //ascii-only\n\n  // ending-apostrophes\n  [/.{3}[lkmnp]in['‘’‛‵′`´]$/, 'Gerund', \"chillin'\"],\n  [/.{4}s['‘’‛‵′`´]$/, 'Possessive', \"flanders'\"],\n\n  //from https://www.regextester.com/106421\n  // [/^([\\u00a9\\u00ae\\u2319-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/, 'Emoji', 'emoji-range']\n  // unicode character range\n  [/^[\\p{Emoji_Presentation}\\p{Extended_Pictographic}]/u, 'Emoji', 'emoji-class']\n]\n","export default [\n\n  [/^@1?[0-9](am|pm)$/i, 'Time', '3pm'],\n  [/^@1?[0-9]:[0-9]{2}(am|pm)?$/i, 'Time', '3:30pm'],\n  [/^'[0-9]{2}$/, 'Year'],\n  // times\n  [/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])$/, 'Time', '3:12:31'],\n  [/^[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)$/i, 'Time', '1:12pm'],\n  [/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?$/i, 'Time', '1:12:31pm'], //can remove?\n\n  // iso-dates\n  [/^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}/i, 'Date', 'iso-date'],\n  [/^[0-9]{1,4}-[0-9]{1,2}-[0-9]{1,4}$/, 'Date', 'iso-dash'],\n  [/^[0-9]{1,4}\\/[0-9]{1,2}\\/([0-9]{4}|[0-9]{2})$/, 'Date', 'iso-slash'],\n  [/^[0-9]{1,4}\\.[0-9]{1,2}\\.[0-9]{1,4}$/, 'Date', 'iso-dot'],\n  [/^[0-9]{1,4}-[a-z]{2,9}-[0-9]{1,4}$/i, 'Date', '12-dec-2019'],\n\n  // timezones\n  [/^utc ?[+-]?[0-9]+$/, 'Timezone', 'utc-9'],\n  [/^(gmt|utc)[+-][0-9]{1,2}$/i, 'Timezone', 'gmt-3'],\n\n  //phone numbers\n  [/^[0-9]{3}-[0-9]{4}$/, 'PhoneNumber', '421-0029'],\n  [/^(\\+?[0-9][ -])?[0-9]{3}[ -]?[0-9]{3}-[0-9]{4}$/, 'PhoneNumber', '1-800-'],\n\n\n  //money\n  //like $5.30\n  [\n    /^[-+]?\\p{Currency_Symbol}[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?([kmb]|bn)?\\+?$/u,\n    ['Money', 'Value'],\n    '$5.30',\n  ],\n  //like 5.30$\n  [\n    /^[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?\\p{Currency_Symbol}\\+?$/u,\n    ['Money', 'Value'],\n    '5.30£',\n  ],\n  //like\n  [/^[-+]?[$£]?[0-9]([0-9,.])+(usd|eur|jpy|gbp|cad|aud|chf|cny|hkd|nzd|kr|rub)$/i, ['Money', 'Value'], '$400usd'],\n\n  //numbers\n  // 50 | -50 | 3.23  | 5,999.0  | 10+\n  [/^[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?\\+?$/, ['Cardinal', 'NumericValue'], '5,999'],\n  [/^[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?(st|nd|rd|r?th)$/, ['Ordinal', 'NumericValue'], '53rd'],\n  // .73th\n  [/^\\.[0-9]+\\+?$/, ['Cardinal', 'NumericValue'], '.73th'],\n  //percent\n  [/^[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?%\\+?$/, ['Percent', 'Cardinal', 'NumericValue'], '-4%'],\n  [/^\\.[0-9]+%$/, ['Percent', 'Cardinal', 'NumericValue'], '.3%'],\n  //fraction\n  [/^[0-9]{1,4}\\/[0-9]{1,4}(st|nd|rd|th)?s?$/, ['Fraction', 'NumericValue'], '2/3rds'],\n  //range\n  [/^[0-9.]{1,3}[a-z]{0,2}[-–—][0-9]{1,3}[a-z]{0,2}$/, ['Value', 'NumberRange'], '3-4'],\n  //time-range\n  [/^[0-9]{1,2}(:[0-9][0-9])?(am|pm)? ?[-–—] ?[0-9]{1,2}(:[0-9][0-9])?(am|pm)$/, ['Time', 'NumberRange'], '3-4pm'],\n  //number with unit\n  [/^[0-9.]+([a-z°]{1,4})$/, 'NumericValue', '9km'],\n]","const prefix = /^(under|over|mis|re|un|dis|semi)-?/\n\nconst tagSwitch = function (terms, i, model) {\n  const switches = model.two.switches\n  let term = terms[i]\n  if (switches.hasOwnProperty(term.normal)) {\n    term.switch = switches[term.normal]\n    return\n  }\n  // support 'restrike' -> 'strike'\n  if (prefix.test(term.normal)) {\n    let stem = term.normal.replace(prefix, '')\n    if (stem.length > 3 && switches.hasOwnProperty(stem)) {\n      term.switch = switches[stem]\n    }\n  }\n}\nexport default tagSwitch","// verbose-mode tagger debuging\nconst log = (term, tag, reason = '') => {\n  const yellow = str => '\\x1b[33m\\x1b[3m' + str + '\\x1b[0m'\n  const i = str => '\\x1b[3m' + str + '\\x1b[0m'\n  let word = term.text || '[' + term.implicit + ']'\n  if (typeof tag !== 'string' && tag.length > 2) {\n    tag = tag.slice(0, 2).join(', #') + ' +' //truncate the list of tags\n  }\n  tag = typeof tag !== 'string' ? tag.join(', #') : tag\n  console.log(` ${yellow(word).padEnd(24)} \\x1b[32m→\\x1b[0m #${tag.padEnd(22)}  ${i(reason)}`) // eslint-disable-line\n}\n\n// a faster version than the user-facing one in ./methods\nconst setTag = function (term, tag, reason) {\n  if (!tag || tag.length === 0) {\n    return\n  }\n  // some logging for debugging\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env\n  if (env && env.DEBUG_TAGS) {\n    log(term, tag, reason)\n  }\n  term.tags = term.tags || new Set()\n  if (typeof tag === 'string') {\n    term.tags.add(tag)\n  } else {\n    tag.forEach(tg => term.tags.add(tg))\n  }\n}\n\nexport default setTag\n","import fastTag from '../_fastTag.js'\nimport looksPlural from '../../../methods/looksPlural.js'\nimport getTense from '../../../methods/transform/verbs/getTense/index.js'\n// tags that are neither plural or singular\nconst uncountable = [\n  'Acronym',\n  'Abbreviation',\n  'ProperNoun',\n  'Uncountable',\n  'Possessive',\n  'Pronoun',\n  'Activity',\n  'Honorific',\n]\n// try to guess if each noun is a plural/singular\nconst setPluralSingular = function (term) {\n  if (!term.tags.has('Noun') || term.tags.has('Plural') || term.tags.has('Singular') || term.tags.has('Date')) {\n    return\n  }\n  if (uncountable.find(tag => term.tags.has(tag))) {\n    return\n  }\n  if (looksPlural(term.normal)) {\n    fastTag(term, 'Plural', '3-plural-guess')\n  } else {\n    fastTag(term, 'Singular', '3-singular-guess')\n  }\n}\n\n// try to guess the tense of a naked verb\nconst setTense = function (term) {\n  let tags = term.tags\n  if (tags.has('Verb') && tags.size === 1) {\n    let guess = getTense(term.normal)\n    if (guess) {\n      fastTag(term, guess, '3-verb-tense-guess')\n    }\n  }\n}\n\n//add deduced parent tags to our terms\nconst fillTags = function (terms, i, model) {\n  let term = terms[i]\n  //there is probably just one tag, but we'll allow more\n  let tags = Array.from(term.tags)\n  for (let k = 0; k < tags.length; k += 1) {\n    if (model.one.tagSet[tags[k]]) {\n      let toAdd = model.one.tagSet[tags[k]].parents\n      fastTag(term, toAdd, ` -inferred by #${tags[k]}`)\n    }\n  }\n  // turn 'Noun' into Plural/Singular\n  setPluralSingular(term)\n  // turn 'Verb' into Present/PastTense\n  setTense(term, model)\n}\nexport default fillTags\n","import fastTag from '../_fastTag.js'\n\nimport fillTags from '../3rd-pass/_fillTags.js'\nconst titleCase = /^\\p{Lu}[\\p{Ll}'’]/u\nconst hasNumber = /[0-9]/\n\nconst notProper = ['Date', 'Month', 'WeekDay', 'Unit']\n\n// https://stackoverflow.com/a/267405/168877\nconst romanNumeral = /^[IVXLCDM]{2,}$/\nconst romanNumValid = /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/\nconst nope = {\n  li: true,\n  dc: true,\n  md: true,\n  dm: true,\n  ml: true,\n}\n\n// 'Buy Our Affordable Cars!'\n// const isAllTitleCase = function (terms) {\n//   if (terms.length <= 3) {\n//     return false\n//   }\n//   let count = 0\n//   terms.forEach(term => {\n//     if (titleCase.test(term.text)) {\n//       count += 1\n//     }\n//   })\n//   if (count >= terms.length - 2) {\n//     return true\n//   }\n//   return false\n// }\n\n// if it's a unknown titlecase word, it's a propernoun\nconst checkCase = function (terms, i, model) {\n  let term = terms[i]\n  // assume terms are already indexed\n  term.index = term.index || [0, 0]\n  let index = term.index[1]\n  let str = term.text || '' //need case info\n  // titlecase and not first word of sentence\n  if (index !== 0 && titleCase.test(str) === true && hasNumber.test(str) === false) {\n    if (notProper.find(tag => term.tags.has(tag))) {\n      return null\n    }\n    // ignore 'Buy Our Affordable Cars!'\n    // if (isAllTitleCase(terms)) {\n    //   return null\n    // }\n    fillTags(terms, i, model)\n    if (!term.tags.has('Noun')) {\n      term.tags.clear()\n    }\n    fastTag(term, 'ProperNoun', '2-titlecase')\n    return true\n  }\n  //roman numberals - XVII\n  if (str.length >= 2 && romanNumeral.test(str) && romanNumValid.test(str) && !nope[term.normal]) {\n    fastTag(term, 'RomanNumeral', '2-xvii')\n    return true\n  }\n\n  return null\n}\nexport default checkCase\n","import fastTag from '../_fastTag.js'\n\n//sweep-through all suffixes\nconst suffixLoop = function (str = '', suffixes = []) {\n  const len = str.length\n  let max = 7\n  if (len <= max) {\n    max = len - 1\n  }\n  for (let i = max; i > 1; i -= 1) {\n    let suffix = str.substring(len - i, len)\n    if (suffixes[suffix.length].hasOwnProperty(suffix) === true) {\n      // console.log(suffix)\n      let tag = suffixes[suffix.length][suffix]\n      return tag\n    }\n  }\n  return null\n}\n\n// decide tag from the ending of the word\nconst tagBySuffix = function (terms, i, model) {\n  let term = terms[i]\n  if (term.tags.size === 0) {\n    let tag = suffixLoop(term.normal, model.two.suffixPatterns)\n    if (tag !== null) {\n      fastTag(term, tag, '2-suffix')\n      term.confidence = 0.7\n      return true\n    }\n    // try implicit form of word, too\n    if (term.implicit) {\n      tag = suffixLoop(term.implicit, model.two.suffixPatterns)\n      if (tag !== null) {\n        fastTag(term, tag, '2-implicit-suffix')\n        term.confidence = 0.7\n        return true\n      }\n    }\n    // Infinitive suffix + 's' can be PresentTense\n    // if (term.normal[term.normal.length - 1] === 's') {\n    //   let str = term.normal.replace(/s$/, '')\n    //   if (suffixLoop(str, model.two.suffixPatterns) === 'Infinitive') {\n    //     console.log(str)\n    //     fastTag(term, 'PresentTense', '2-implied-present')\n    //     term.confidence = 0.5\n    //     return true\n    //   }\n    // }\n  }\n  return null\n}\nexport default tagBySuffix\n","const hasApostrophe = /['‘’‛‵′`´]/\n\n// normal regexes\nconst doRegs = function (str, regs) {\n  for (let i = 0; i < regs.length; i += 1) {\n    if (regs[i][0].test(str) === true) {\n      return regs[i]\n    }\n  }\n  return null\n}\n// suffix-regexes, indexed by last-character\nconst doEndsWith = function (str = '', byEnd) {\n  let char = str[str.length - 1]\n  if (byEnd.hasOwnProperty(char) === true) {\n    let regs = byEnd[char] || []\n    for (let r = 0; r < regs.length; r += 1) {\n      if (regs[r][0].test(str) === true) {\n        return regs[r]\n      }\n    }\n  }\n  return null\n}\n\nconst checkRegex = function (terms, i, model, world) {\n  const setTag = world.methods.one.setTag\n  let { regexText, regexNormal, regexNumbers, endsWith } = model.two\n  let term = terms[i]\n  let normal = term.machine || term.normal\n  let text = term.text\n  // keep dangling apostrophe?\n  if (hasApostrophe.test(term.post) && !hasApostrophe.test(term.pre)) {\n    text += term.post.trim()\n  }\n  let arr = doRegs(text, regexText) || doRegs(normal, regexNormal)\n  // hide a bunch of number regexes behind this one\n  if (!arr && /[0-9]/.test(normal)) {\n    arr = doRegs(normal, regexNumbers)\n  }\n  // only run endsWith if we're desperate\n  if (!arr && term.tags.size === 0) {\n    arr = doEndsWith(normal, endsWith)\n  }\n  if (arr) {\n    setTag([term], arr[1], world, null, `2-regex-'${arr[2] || arr[0]}'`)\n    term.confidence = 0.6\n    return true\n  }\n  return null\n}\nexport default checkRegex\n","import fastTag from '../_fastTag.js'\nconst min = 1400\nconst max = 2100\n\nconst dateWords = new Set([\n  'in',\n  'on',\n  'by',\n  'until',\n  'for',\n  'to',\n  'during',\n  'throughout',\n  'through',\n  'within',\n  'before',\n  'after',\n  'of',\n  'this',\n  'next',\n  'last',\n  'circa',\n  'around',\n  'post',\n  'pre',\n  'budget',\n  'classic',\n  'plan',\n  'may'\n])\n\nconst seemsGood = function (term) {\n  if (!term) {\n    return false\n  }\n  let str = term.normal || term.implicit\n  if (dateWords.has(str)) {\n    return true\n  }\n  if (term.tags.has('Date') || term.tags.has('Month') || term.tags.has('WeekDay') || term.tags.has('Year')) {\n    return true\n  }\n  // 1999 Film Festival\n  if (term.tags.has('ProperNoun')) {\n    return true\n  }\n  return false\n}\n\nconst seemsOkay = function (term) {\n  if (!term) {\n    return false\n  }\n  if (term.tags.has('Ordinal')) {\n    return true\n  }\n  // untagged 'june 13 2007'\n  if (term.tags.has('Cardinal') && term.normal.length < 3) {\n    return true\n  }\n  // 2020 was ..\n  if (term.normal === 'is' || term.normal === 'was') {\n    return true\n  }\n  return false\n}\n\nconst seemsFine = function (term) {\n  return term && (term.tags.has('Date') || term.tags.has('Month') || term.tags.has('WeekDay') || term.tags.has('Year'))\n}\n\n// recognize '1993' as a year\nconst tagYear = function (terms, i) {\n  const term = terms[i]\n  if (term.tags.has('NumericValue') && term.tags.has('Cardinal') && term.normal.length === 4) {\n    let num = Number(term.normal)\n    // number between 1400 and 2100\n    if (num && !isNaN(num)) {\n      if (num > min && num < max) {\n        let lastTerm = terms[i - 1]\n        let nextTerm = terms[i + 1]\n        if (seemsGood(lastTerm) || seemsGood(nextTerm)) {\n          return fastTag(term, 'Year', '2-tagYear')\n        }\n        // or is it really-close to a year?\n        if (num >= 1920 && num < 2025) {\n          // look at neighbours\n          if (seemsOkay(lastTerm) || seemsOkay(nextTerm)) {\n            return fastTag(term, 'Year', '2-tagYear-close')\n          }\n          // look at far-neighbours\n          if (seemsFine(terms[i - 2]) || seemsFine(terms[i + 2])) {\n            return fastTag(term, 'Year', '2-tagYear-far')\n          }\n          // 'the 2002 hit', 'my 1950 convertable'\n          if (lastTerm && (lastTerm.tags.has('Determiner') || lastTerm.tags.has('Possessive'))) {\n            if (nextTerm && nextTerm.tags.has('Noun') && !nextTerm.tags.has('Plural')) {\n              return fastTag(term, 'Year', '2-tagYear-noun')\n            }\n          }\n        }\n      }\n    }\n  }\n  return null\n}\n\nexport default tagYear","import fastTag from '../_fastTag.js'\n\nconst oneLetterAcronym = /^[A-Z]('s|,)?$/\nconst isUpperCase = /^[A-Z-]+$/\nconst periodAcronym = /([A-Z]\\.)+[A-Z]?,?$/\nconst noPeriodAcronym = /[A-Z]{2,}('s|,)?$/\nconst lowerCaseAcronym = /([a-z]\\.)+[a-z]\\.?$/\n\nconst oneLetterWord = {\n  I: true,\n  A: true,\n}\n// just uppercase acronyms, no periods - 'UNOCHA'\nconst isNoPeriodAcronym = function (term, model) {\n  let str = term.text\n  // ensure it's all upper-case\n  if (isUpperCase.test(str) === false) {\n    return false\n  }\n  // long capitalized words are not usually either\n  if (str.length > 5) {\n    return false\n  }\n  // 'I' is not a acronym\n  if (oneLetterWord.hasOwnProperty(str)) {\n    return false\n  }\n  // known-words, like 'PIZZA' is not an acronym.\n  if (model.one.lexicon.hasOwnProperty(term.normal)) {\n    return false\n  }\n  //like N.D.A\n  if (periodAcronym.test(str) === true) {\n    return true\n  }\n  //like c.e.o\n  if (lowerCaseAcronym.test(str) === true) {\n    return true\n  }\n  //like 'F.'\n  if (oneLetterAcronym.test(str) === true) {\n    return true\n  }\n  //like NDA\n  if (noPeriodAcronym.test(str) === true) {\n    return true\n  }\n  return false\n}\n\nconst isAcronym = function (terms, i, model) {\n  let term = terms[i]\n  //these are not acronyms\n  if (term.tags.has('RomanNumeral') || term.tags.has('Acronym')) {\n    return null\n  }\n  //non-period ones are harder\n  if (isNoPeriodAcronym(term, model)) {\n    term.tags.clear()\n    fastTag(term, ['Acronym', 'Noun'], '3-no-period-acronym')\n    return true\n  }\n  // one-letter acronyms\n  if (!oneLetterWord.hasOwnProperty(term.text) && oneLetterAcronym.test(term.text)) {\n    term.tags.clear()\n    fastTag(term, ['Acronym', 'Noun'], '3-one-letter-acronym')\n    return true\n  }\n  //if it's a very-short organization?\n  if (term.tags.has('Organization') && term.text.length <= 3) {\n    fastTag(term, 'Acronym', '3-org-acronym')\n    return true\n  }\n  // upper-case org, like UNESCO\n  if (term.tags.has('Organization') && isUpperCase.test(term.text) && term.text.length <= 6) {\n    fastTag(term, 'Acronym', '3-titlecase-acronym')\n    return true\n  }\n  return null\n}\nexport default isAcronym\n","import fastTag from '../_fastTag.js'\nimport fillTag from './_fillTags.js'\n\nconst lookAtWord = function (term, words) {\n  if (!term) {\n    return null\n  }\n  // look at prev word <-\n  let found = words.find(a => term.normal === a[0])\n  if (found) {\n    return found[1]\n  }\n  return null\n}\n\nconst lookAtTag = function (term, tags) {\n  if (!term) {\n    return null\n  }\n  let found = tags.find(a => term.tags.has(a[0]))\n  if (found) {\n    return found[1]\n  }\n  return null\n}\n\n// look at neighbours for hints on unknown words\nconst neighbours = function (terms, i, model) {\n  const { leftTags, leftWords, rightWords, rightTags } = model.two.neighbours\n  let term = terms[i]\n  if (term.tags.size === 0) {\n    let tag = null\n    // look left <-\n    tag = tag || lookAtWord(terms[i - 1], leftWords)\n    // look right ->\n    tag = tag || lookAtWord(terms[i + 1], rightWords)\n    // look left <-\n    tag = tag || lookAtTag(terms[i - 1], leftTags)\n    // look right ->\n    tag = tag || lookAtTag(terms[i + 1], rightTags)\n    if (tag) {\n      fastTag(term, tag, '3-[neighbour]')\n      fillTag(terms, i, model)\n      terms[i].confidence = 0.2\n      return true\n    }\n  }\n  return null\n}\nexport default neighbours\n","const isTitleCase = (str) => /^\\p{Lu}[\\p{Ll}'’]/u.test(str)\n\nconst isOrg = function (term, i, yelling) {\n  if (!term) {\n    return false\n  }\n  if (term.tags.has('FirstName') || term.tags.has('Place')) {\n    return false\n  }\n  if (term.tags.has('ProperNoun') || term.tags.has('Organization') || term.tags.has('Acronym')) {\n    return true\n  }\n  // allow anything titlecased to be an org\n  if (!yelling && isTitleCase(term.text)) {\n    // only tag a titlecased first-word, if it checks-out\n    if (i === 0) {\n      return term.tags.has('Singular')\n    }\n    return true\n  }\n  return false\n}\n\nconst tagOrgs = function (terms, i, world, yelling) {\n  const orgWords = world.model.two.orgWords\n  const setTag = world.methods.one.setTag\n  let term = terms[i]\n  let str = term.machine || term.normal\n  if (orgWords[str] === true && isOrg(terms[i - 1], i - 1, yelling)) {\n    setTag([terms[i]], 'Organization', world, null, '3-[org-word]')\n    // loop backwards, tag organization-like things\n    for (let t = i; t >= 0; t -= 1) {\n      if (isOrg(terms[t], t, yelling)) {\n        setTag([terms[t]], 'Organization', world, null, '3-[org-word]')\n      } else {\n        break\n      }\n    }\n  }\n  return null\n}\nexport default tagOrgs","\nconst isCapital = (terms, i) => {\n  if (terms[i].tags.has('ProperNoun')) {// 'Comfort Inn'\n    return 'Noun'\n  }\n  return null\n}\nconst isAloneVerb = (terms, i, tag) => {\n  if (i === 0 && !terms[1]) {// 'Help'\n    return tag\n  }\n  return null\n}\n\n// 'a rental'\nconst isEndNoun = function (terms, i) {\n  if (!terms[i + 1] && terms[i - 1] && terms[i - 1].tags.has('Determiner')) {\n    return 'Noun'\n  }\n  return null\n}\n\nconst adhoc = {\n  'Adj|Gerund': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Adj|Noun': (terms, i) => {\n    return isCapital(terms, i) || isEndNoun(terms, i)\n  },\n  'Adj|Past': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Adj|Present': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Noun|Gerund': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Noun|Verb': (terms, i) => {\n    return isCapital(terms, i) || isAloneVerb(terms, i, 'Infinitive')\n  },\n  'Plural|Verb': (terms, i) => {\n    return isCapital(terms, i) || isAloneVerb(terms, i, 'PresentTense')\n  },\n  'Person|Noun': (terms, i) => {\n    return isCapital(terms, i)\n  },\n  'Person|Verb': (terms, i) => {\n    if (i !== 0) {\n      return isCapital(terms, i)\n    }\n    return null\n  },\n}\nexport default adhoc","import fillTags from './_fillTags.js'\nconst env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env // eslint-disable-line\nimport adhoc from './_adhoc.js'\nconst prefix = /^(under|over|mis|re|un|dis|semi)-?/\n\nconst checkWord = (term, obj) => {\n  if (!term || !obj) {\n    return null\n  }\n  let str = term.normal || term.implicit\n  let found = null\n  if (obj.hasOwnProperty(str)) {\n    found = obj[str]\n  }\n  if (found && env.DEBUG_TAGS) {\n    console.log(`\\n  \\x1b[2m\\x1b[3m     ↓ - '${str}' \\x1b[0m`)//eslint-disable-line\n  }\n  return found\n}\n\nconst checkTag = (term, obj = {}, tagSet) => {\n  if (!term || !obj) {\n    return null\n  }\n  // rough sort, so 'Noun' is after ProperNoun, etc\n  let tags = Array.from(term.tags).sort((a, b) => {\n    let numA = tagSet[a] ? tagSet[a].parents.length : 0\n    let numB = tagSet[b] ? tagSet[b].parents.length : 0\n    return numA > numB ? -1 : 1\n  })\n  let found = tags.find(tag => obj[tag])\n  if (found && env.DEBUG_TAGS) {\n    console.log(`  \\x1b[2m\\x1b[3m      ↓ - '${term.normal || term.implicit}' (#${found})  \\x1b[0m`)//eslint-disable-line\n  }\n  found = obj[found]\n  return found\n}\n\nconst pickTag = function (terms, i, clues, model) {\n  if (!clues) {\n    return null\n  }\n  const tagSet = model.one.tagSet\n  // look -> right word, first\n  let tag = checkWord(terms[i + 1], clues.afterWords)\n  // look <- left word, second\n  tag = tag || checkWord(terms[i - 1], clues.beforeWords)\n  // look <- left tag \n  tag = tag || checkTag(terms[i - 1], clues.beforeTags, tagSet)\n  // look -> right tag\n  tag = tag || checkTag(terms[i + 1], clues.afterTags, tagSet)\n  // console.log(clues)\n  return tag\n}\n\n// words like 'bob' that can change between two tags\nconst doSwitches = function (terms, i, world) {\n  const model = world.model\n  const setTag = world.methods.one.setTag\n  const { switches, clues } = model.two\n  const term = terms[i]\n  let str = term.normal || term.implicit || ''\n  // support prefixes for switching words\n  if (prefix.test(str) && !switches[str]) {\n    str = str.replace(prefix, '') // could use some guards, here\n  }\n  if (term.switch) {\n    let form = term.switch\n    // skip propernouns, acronyms, etc\n    if (term.tags.has('Acronym') || term.tags.has('PhrasalVerb')) {\n      return\n    }\n    let tag = pickTag(terms, i, clues[form], model)\n    // lean-harder on some variable forms\n    if (adhoc[form]) {\n      tag = adhoc[form](terms, i) || tag\n    }\n    // did we find anything?\n    if (tag) {\n      // tag it\n      setTag([term], tag, world, null, `3-[switch] (${form})`)\n      // add plural/singular etc.\n      fillTags(terms, i, model)\n    } else if (env.DEBUG_TAGS) {\n      console.log(`\\n -> X  - '${str}'  : (${form})  `)//eslint-disable-line\n    }\n  }\n}\nexport default doSwitches","\nimport tagSwitch from './2nd-pass/00-tagSwitch.js'\nimport checkCase from './2nd-pass/01-case.js'\nimport checkSuffix from './2nd-pass/02-suffix.js'\nimport checkRegex from './2nd-pass/03-regex.js'\nimport checkPrefix from './2nd-pass/04-prefix.js'\nimport checkYear from './2nd-pass/05-year.js'\n\nimport fillTags from './3rd-pass/_fillTags.js'\nimport checkAcronym from './3rd-pass/01-acronym.js'\nimport neighbours from './3rd-pass/02-neighbours.js'\nimport orgWords from './3rd-pass/03-orgWords.js'\nimport nounFallback from './3rd-pass/04-fallback.js'\nimport switches from './3rd-pass/06-switches.js'\n// import imperative from './3rd-pass/07-imperative.js'\n\nconst second = {\n  tagSwitch,\n  checkSuffix,\n  checkRegex,\n  checkCase,\n  checkPrefix,\n  checkYear,\n}\n\nconst third = {\n  checkAcronym,\n  neighbours,\n  orgWords,\n  nounFallback,\n  switches,\n  // imperative\n}\n\n// is it all yelling-case?\nconst ignoreCase = function (terms) {\n  // allow 'John F Kennedy'\n  if (terms.filter(t => !t.tags.has('ProperNoun')).length <= 3) {\n    return false\n  }\n  const lowerCase = /^[a-z]/\n  return terms.every(t => !lowerCase.test(t.text))\n}\n\n\n// these methods don't care about word-neighbours\nconst secondPass = function (terms, model, world, yelling) {\n  for (let i = 0; i < terms.length; i += 1) {\n    // mark Noun|Verb on term metadata\n    second.tagSwitch(terms, i, model)\n    //  is it titlecased?\n    if (yelling === false) {\n      second.checkCase(terms, i, model)\n    }\n    // look at word ending\n    second.checkSuffix(terms, i, model)\n    // try look-like rules\n    second.checkRegex(terms, i, model, world)\n    // check for recognized prefix, like 'micro-'\n    second.checkPrefix(terms, i, model)\n    // turn '1993' into a year\n    second.checkYear(terms, i, model)\n  }\n}\n\nconst thirdPass = function (terms, model, world, yelling) {\n  for (let i = 0; i < terms.length; i += 1) {\n    // let these tags get layered\n    let found = third.checkAcronym(terms, i, model)\n    // deduce parent tags\n    fillTags(terms, i, model)\n    // look left+right for hints\n    found = found || third.neighbours(terms, i, model)\n    //  ¯\\_(ツ)_/¯ - found nothing\n    found = found || third.nounFallback(terms, i, model)\n  }\n  for (let i = 0; i < terms.length; i += 1) {\n    // Johnson LLC\n    third.orgWords(terms, i, world, yelling)\n    // verb-noun disambiguation, etc\n    third.switches(terms, i, world)\n  }\n  // place tea bags\n  // third.imperative(terms, world)\n}\n\nconst preTagger = function (view) {\n  const { methods, model, world } = view\n  // roughly split sentences up by clause\n  let document = methods.two.quickSplit(view.docs)\n  // start with all terms\n  for (let n = 0; n < document.length; n += 1) {\n    let terms = document[n]\n    // is it all upper-case?\n    const yelling = ignoreCase(terms)\n    // guess by the letters\n    secondPass(terms, model, world, yelling)\n    // guess by the neighbours\n    thirdPass(terms, model, world, yelling)\n  }\n  return document\n}\n\nexport default preTagger\n","import fastTag from '../_fastTag.js'\n// const prefixes = /^(anti|re|un|non|extra|inter|intra|over)([a-z-]{3})/\n\n//sweep-through all prefixes\nconst prefixLoop = function (str = '', prefixes = []) {\n  const len = str.length\n  let max = 7\n  if (max > len - 3) {\n    max = len - 3\n  }\n  for (let i = max; i > 2; i -= 1) {\n    let prefix = str.substring(0, i)\n    if (prefixes[prefix.length].hasOwnProperty(prefix) === true) {\n      let tag = prefixes[prefix.length][prefix]\n      return tag\n    }\n  }\n  return null\n}\n\n// give 'overwork' the same tag as 'work'\nconst checkPrefix = function (terms, i, model) {\n  let term = terms[i]\n  if (term.tags.size === 0) {\n    let tag = prefixLoop(term.normal, model.two.prefixPatterns)\n    if (tag !== null) {\n      // console.log(term.normal, '->', tag)\n      fastTag(term, tag, '2-prefix')\n      term.confidence = 0.5\n      return true\n    }\n  }\n  return null\n}\nexport default checkPrefix\n","import fastTag from '../_fastTag.js'\nimport fillTag from './_fillTags.js'\n\n\nconst nounFallback = function (terms, i, model) {\n  if (terms[i].tags.size === 0) {\n    fastTag(terms[i], 'Noun', '3-[fallback]')\n    // try to give it singluar/plural tags, too\n    fillTag(terms, i, model)\n    terms[i].confidence = 0.1\n  }\n}\nexport default nounFallback\n","const toRoot = {\n  // 'spencer's' -> 'spencer'\n  'Possessive': (term) => {\n    let str = term.machine || term.normal || term.text\n    str = str.replace(/'s$/, '')\n    return str\n  },\n  // 'drinks' -> 'drink'\n  'Plural': (term, world) => {\n    let str = term.machine || term.normal || term.text\n    return world.methods.two.transform.noun.toSingular(str, world.model)\n  },\n  // ''\n  'Copula': () => {\n    return 'is'\n  },\n  // 'walked' -> 'walk'\n  'PastTense': (term, world) => {\n    let str = term.machine || term.normal || term.text\n    return world.methods.two.transform.verb.toInfinitive(str, world.model, 'PastTense')\n  },\n  // 'walking' -> 'walk'\n  'Gerund': (term, world) => {\n    let str = term.machine || term.normal || term.text\n    return world.methods.two.transform.verb.toInfinitive(str, world.model, 'Gerund')\n  },\n  // 'walks' -> 'walk'\n  'PresentTense': (term, world) => {\n    let str = term.machine || term.normal || term.text\n    if (term.tags.has('Infinitive')) {\n      return str\n    }\n    return world.methods.two.transform.verb.toInfinitive(str, world.model, 'PresentTense')\n  },\n  // 'quieter' -> 'quiet'\n  'Comparative': (term, world) => {\n    let str = term.machine || term.normal || term.text\n    return world.methods.two.transform.adjective.fromComparative(str, world.model)\n  },\n  // 'quietest' -> 'quiet'\n  'Superlative': (term, world) => {\n    let str = term.machine || term.normal || term.text\n    return world.methods.two.transform.adjective.fromSuperlative(str, world.model)\n  },\n  // 'suddenly' -> 'sudden'\n  'Adverb': (term, world) => {\n    const { fromAdverb } = world.methods.two.transform.adjective\n    let str = term.machine || term.normal || term.text\n    return fromAdverb(str)\n  },\n}\n\nconst getRoot = function (view) {\n  const world = view.world\n  const keys = Object.keys(toRoot)\n  view.docs.forEach(terms => {\n    for (let i = 0; i < terms.length; i += 1) {\n      const term = terms[i]\n      for (let k = 0; k < keys.length; k += 1) {\n        if (term.tags.has(keys[k])) {\n          const fn = toRoot[keys[k]]\n          let root = fn(term, world)\n          if (term.normal !== root) {\n            term.root = root\n          }\n          break\n        }\n      }\n    }\n  })\n}\nexport default getRoot","// rough connection between compromise tagset and Penn Treebank\n// https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html\n\nconst mapping = {\n  // adverbs\n  // 'Comparative': 'RBR',\n  // 'Superlative': 'RBS',\n  'Adverb': 'RB',\n\n  // adjectives\n  'Comparative': 'JJR',\n  'Superlative': 'JJS',\n  'Adjective': 'JJ',\n  'TO': 'Conjunction',\n\n  // verbs\n  'Modal': 'MD',\n  'Auxiliary': 'MD',\n  'Gerund': 'VBG', //throwing\n  'PastTense': 'VBD', //threw\n  'Participle': 'VBN', //thrown\n  'PresentTense': 'VBZ', //throws\n  'Infinitive': 'VB', //throw\n  'Particle': 'RP', //phrasal particle\n  'Verb': 'VB', // throw\n\n  // pronouns\n  'Pronoun': 'PRP',\n\n  // misc\n  'Cardinal': 'CD',\n  'Conjunction': 'CC',\n  'Determiner': 'DT',\n  'Preposition': 'IN',\n  // 'Determiner': 'WDT',\n  // 'Expression': 'FW',\n  'QuestionWord': 'WP',\n  'Expression': 'UH',\n\n  //nouns\n  'Possessive': 'POS',\n  'ProperNoun': 'NNP',\n  'Person': 'NNP',\n  'Place': 'NNP',\n  'Organization': 'NNP',\n  'Singular': 'NNP',\n  'Plural': 'NNS',\n  'Noun': 'NN',\n\n  'There': 'EX', //'there'\n  // 'Adverb':'WRB',\n  // 'Noun':'PDT', //predeterminer\n  // 'Noun':'SYM', //symbol\n  // 'Noun':'NFP', //\n\n  //  WDT \tWh-determiner\n  // \tWP \tWh-pronoun\n  // \tWP$ \tPossessive wh-pronoun\n  // \tWRB \tWh-adverb \n}\n\nconst toPenn = function (term) {\n  // try some ad-hoc ones\n  if (term.tags.has('ProperNoun') && term.tags.has('Plural')) {\n    return 'NNPS'\n  }\n  if (term.tags.has('Possessive') && term.tags.has('Pronoun')) {\n    return 'PRP$'\n  }\n  if (term.normal === 'there') {\n    return 'EX'\n  }\n  if (term.normal === 'to') {\n    return 'TO'\n  }\n  // run through an ordered list of tags\n  let arr = term.tagRank || []\n  for (let i = 0; i < arr.length; i += 1) {\n    if (mapping.hasOwnProperty(arr[i])) {\n      return mapping[arr[i]]\n    }\n  }\n  return null\n}\n\nconst pennTag = function (view) {\n  view.compute('tagRank')\n  view.docs.forEach(terms => {\n    terms.forEach(term => {\n      term.penn = toPenn(term)\n    })\n  })\n}\nexport default pennTag","import preTagger from './tagger/index.js'\nimport root from './root.js'\nimport penn from './penn.js'\n\nexport default { preTagger, root, penn }\n","const entity = ['Person', 'Place', 'Organization']\n\nexport default {\n  Noun: {\n    not: ['Verb', 'Adjective', 'Adverb', 'Value', 'Determiner'],\n  },\n  Singular: {\n    is: 'Noun',\n    not: ['Plural', 'Uncountable'],\n  },\n  // 'Canada'\n  ProperNoun: {\n    is: 'Noun',\n  },\n  Person: {\n    is: 'Singular',\n    also: ['ProperNoun'],\n    not: ['Place', 'Organization', 'Date'],\n  },\n  FirstName: {\n    is: 'Person',\n  },\n  MaleName: {\n    is: 'FirstName',\n    not: ['FemaleName', 'LastName'],\n  },\n  FemaleName: {\n    is: 'FirstName',\n    not: ['MaleName', 'LastName'],\n  },\n  LastName: {\n    is: 'Person',\n    not: ['FirstName'],\n  },\n  // 'dr.'\n  Honorific: {\n    is: 'Person',\n    not: ['FirstName', 'LastName', 'Value'],\n  },\n  Place: {\n    is: 'Singular',\n    not: ['Person', 'Organization'],\n  },\n  Country: {\n    is: 'Place',\n    also: ['ProperNoun'],\n    not: ['City'],\n  },\n  City: {\n    is: 'Place',\n    also: ['ProperNoun'],\n    not: ['Country'],\n  },\n  // 'california'\n  Region: {\n    is: 'Place',\n    also: ['ProperNoun'],\n  },\n  Address: {\n    // is: 'Place',\n  },\n  Organization: {\n    is: 'ProperNoun',\n    not: ['Person', 'Place'],\n  },\n  SportsTeam: {\n    is: 'Organization',\n  },\n  School: {\n    is: 'Organization',\n  },\n  Company: {\n    is: 'Organization',\n  },\n  Plural: {\n    is: 'Noun',\n    not: ['Singular', 'Uncountable'],\n  },\n  // 'gravity'\n  Uncountable: {\n    is: 'Noun',\n  },\n  // 'it'\n  Pronoun: {\n    is: 'Noun',\n    not: entity,\n  },\n  // 'swimmer'\n  Actor: {\n    is: 'Noun',\n    not: entity,\n  },\n  // walking\n  Activity: {\n    is: 'Noun',\n    not: ['Person', 'Place'],\n  },\n  // kilometres\n  Unit: {\n    is: 'Noun',\n    not: entity,\n  },\n  // canadian\n  Demonym: {\n    is: 'Noun',\n    also: ['ProperNoun'],\n    not: entity,\n  },\n  // [spencer's] hat\n  Possessive: {\n    is: 'Noun',\n  },\n  // 'yourself'\n  Reflexive: {\n    is: 'Pronoun',\n  },\n}\n","const anything = ['Noun', 'Verb', 'Adjective', 'Adverb', 'Value', 'QuestionWord']\n\nexport default {\n  Adjective: {\n    not: ['Noun', 'Verb', 'Adverb', 'Value'],\n  },\n  Comparable: {\n    is: 'Adjective',\n  },\n  Comparative: {\n    is: 'Adjective',\n  },\n  Superlative: {\n    is: 'Adjective',\n    not: ['Comparative'],\n  },\n  NumberRange: {},\n  Adverb: {\n    not: ['Noun', 'Verb', 'Adjective', 'Value'],\n  },\n\n  Determiner: {\n    not: ['Noun', 'Verb', 'Adjective', 'Adverb', 'QuestionWord', 'Conjunction'], //allow 'a' to be a Determiner/Value\n  },\n  Conjunction: {\n    not: anything,\n  },\n  Preposition: {\n    not: ['Noun', 'Verb', 'Adjective', 'Adverb', 'QuestionWord', 'Determiner'],\n  },\n  QuestionWord: {\n    not: ['Determiner'],\n  },\n  Currency: {\n    is: 'Noun',\n  },\n  Expression: {\n    not: ['Noun', 'Adjective', 'Verb', 'Adverb'],\n  },\n  Abbreviation: {},\n  Url: {\n    not: ['HashTag', 'PhoneNumber', 'Verb', 'Adjective', 'Value', 'AtMention', 'Email'],\n  },\n  PhoneNumber: {\n    not: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention', 'Email'],\n  },\n  HashTag: {},\n  AtMention: {\n    is: 'Noun',\n    not: ['HashTag', 'Email'],\n  },\n  Emoji: {\n    not: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention'],\n  },\n  Emoticon: {\n    not: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention'],\n  },\n  Email: {\n    not: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention'],\n  },\n  Acronym: {\n    not: ['Plural', 'RomanNumeral'],\n  },\n  Negative: {\n    not: ['Noun', 'Adjective', 'Value', 'Expression'],\n  },\n  Condition: {\n    not: ['Verb', 'Adjective', 'Noun', 'Value'],\n  },\n  // existential 'there'\n  There: {\n    not: ['Verb', 'Adjective', 'Noun', 'Value', 'Conjunction', 'Preposition'],\n  },\n  // 'co-wrote'\n  Prefix: {\n    not: ['Abbreviation', 'Acronym', 'ProperNoun']\n  }\n}\n","import nouns from './nouns.js'\nimport verbs from './verbs.js'\nimport values from './values.js'\nimport dates from './dates.js'\nimport misc from './misc.js'\n\nlet allTags = Object.assign({}, nouns, verbs, values, dates, misc)\n// const tagSet = compute(allTags)\nexport default allTags\n","export default {\n  Verb: {\n    not: ['Noun', 'Adjective', 'Adverb', 'Value', 'Expression'],\n  },\n  // 'he [walks]'\n  PresentTense: {\n    is: 'Verb',\n    not: ['PastTense'],\n  },\n  // 'will [walk]'\n  Infinitive: {\n    is: 'PresentTense',\n    not: ['Gerund'],\n  },\n  // '[walk] now!'\n  Imperative: {\n    is: 'Infinitive',\n    not: ['PastTense', 'Gerund', 'Copula'],\n  },\n  // walking\n  Gerund: {\n    is: 'PresentTense',\n    not: ['Copula'],\n  },\n  // walked\n  PastTense: {\n    is: 'Verb',\n    not: ['PresentTense', 'Gerund'],\n  },\n  // is/was\n  Copula: {\n    is: 'Verb',\n  },\n  // '[could] walk'\n  Modal: {\n    is: 'Verb',\n    not: ['Infinitive'],\n  },\n  // 'awaken'\n  Participle: {\n    is: 'PastTense',\n  },\n  // '[will have had] walked'\n  Auxiliary: {\n    is: 'Verb',\n    not: ['PastTense', 'PresentTense', 'Gerund', 'Conjunction'],\n  },\n  // 'walk out'\n  PhrasalVerb: {\n    is: 'Verb',\n  },\n  // 'walk [out]'\n  Particle: {\n    is: 'PhrasalVerb',\n    not: ['PastTense', 'PresentTense', 'Copula', 'Gerund'],\n  },\n  // 'walked by'\n  Passive: {\n    is: 'Verb',\n  },\n}\n","export default {\n  Value: {\n    not: ['Verb', 'Adjective', 'Adverb'],\n  },\n  Ordinal: {\n    is: 'Value',\n    not: ['Cardinal'],\n  },\n  Cardinal: {\n    is: 'Value',\n    not: ['Ordinal'],\n  },\n  Fraction: {\n    is: 'Value',\n    not: ['Noun'],\n  },\n  Multiple: {\n    is: 'TextValue',\n  },\n  RomanNumeral: {\n    is: 'Cardinal',\n    not: ['TextValue'],\n  },\n  TextValue: {\n    is: 'Value',\n    not: ['NumericValue'],\n  },\n  NumericValue: {\n    is: 'Value',\n    not: ['TextValue'],\n  },\n  Money: {\n    is: 'Cardinal',\n  },\n  Percent: {\n    is: 'Value',\n  },\n}\n","export default {\n  Date: {\n    not: ['Verb', 'Adverb', 'Adjective'],\n  },\n  Month: {\n    is: 'Date',\n    also: ['Noun'],\n    not: ['Year', 'WeekDay', 'Time'],\n  },\n  WeekDay: {\n    is: 'Date',\n    also: ['Noun'],\n  },\n  Year: {\n    is: 'Date',\n    not: ['RomanNumeral'],\n  },\n  FinancialQuarter: {\n    is: 'Date',\n    not: 'Fraction',\n  },\n  // 'easter'\n  Holiday: {\n    is: 'Date',\n    also: ['Noun'],\n  },\n  // 'summer'\n  Season: {\n    is: 'Date',\n  },\n  Timezone: {\n    is: 'Date',\n    also: ['Noun'],\n    not: ['ProperNoun'],\n  },\n  Time: {\n    is: 'Date',\n    not: ['AtMention'],\n  },\n  // 'months'\n  Duration: {\n    is: 'Date',\n    also: ['Noun'],\n  },\n}\n","import model from './model/index.js'\nimport methods from './methods/index.js'\nimport compute from './compute/index.js'\nimport tags from './tagSet/index.js'\n\nexport default {\n  compute,\n  methods,\n  model,\n  tags,\n  hooks: ['preTagger'],\n}\n","const postPunct = /[,)\"';:\\-–—.…]/\n\nconst setContraction = function (m, suffix) {\n  if (!m.found) {\n    return\n  }\n  let terms = m.termList()\n  //avoid any problematic punctuation\n  for (let i = 0; i < terms.length - 1; i++) {\n    const t = terms[i]\n    if (postPunct.test(t.post)) {\n      return\n    }\n  }\n  // set first word as full text\n  terms[0].implicit = terms[0].normal\n  terms[0].text += suffix\n  terms[0].normal += suffix\n  // clean-up the others\n  terms.slice(1).forEach(t => {\n    t.implicit = t.normal\n    t.text = ''\n    t.normal = ''\n  })\n  for (let i = 0; i < terms.length - 1; i++) {\n    terms[i].post = terms[i].post.replace(/ /, '')\n  }\n}\n\n/** turn 'i am' into i'm */\nconst contract = function () {\n  let doc = this.not('@hasContraction')\n  // we are -> we're\n  let m = doc.match('(we|they|you) are')\n  setContraction(m, `'re`)\n  // they will -> they'll\n  m = doc.match('(he|she|they|it|we|you) will')\n  setContraction(m, `'ll`)\n  // she is -> she's\n  m = doc.match('(he|she|they|it|we) is')\n  setContraction(m, `'s`)\n  // spencer is -> spencer's\n  m = doc.match('#Person is')\n  setContraction(m, `'s`)\n  // spencer would -> spencer'd\n  m = doc.match('#Person would')\n  setContraction(m, `'d`)\n  // would not -> wouldn't\n  m = doc.match('(is|was|had|would|should|could|do|does|have|has|can) not')\n  setContraction(m, `n't`)\n  // i have -> i've\n  m = doc.match('(i|we|they) have')\n  setContraction(m, `'ve`)\n  // would have -> would've\n  m = doc.match('(would|should|could) have')\n  setContraction(m, `'ve`)\n  // i am -> i'm\n  m = doc.match('i am')\n  setContraction(m, `'m`)\n  // going to -> gonna\n  m = doc.match('going to')\n  return this\n}\nexport default contract\n","const titleCase = /^\\p{Lu}[\\p{Ll}'’]/u //upercase, then lowercase\nimport contract from './contract.js'\n\nconst toTitleCase = function (str = '') {\n  str = str.replace(/^ *[a-z\\u00C0-\\u00FF]/, x => x.toUpperCase()) //TODO: support unicode\n  return str\n}\n\nconst api = function (View) {\n  /** */\n  class Contractions extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Contraction'\n    }\n    /** i've -> 'i have' */\n    expand() {\n      this.docs.forEach(terms => {\n        let isTitleCase = titleCase.test(terms[0].text)\n        terms.forEach((t, i) => {\n          t.text = t.implicit\n          delete t.implicit\n          //add whitespace\n          if (i < terms.length - 1 && t.post === '') {\n            t.post += ' '\n          }\n          // flag it as dirty\n          t.dirty = true\n        })\n        // make the first word title-case?\n        if (isTitleCase) {\n          terms[0].text = toTitleCase(terms[0].text)\n        }\n      })\n      this.compute('normal') //re-set normalized text\n      return this\n    }\n  }\n  // add fn to View\n  View.prototype.contractions = function () {\n    let m = this.match('@hasContraction+')\n    return new Contractions(this.document, m.pointer)\n  }\n  View.prototype.contract = contract\n}\n\nexport default api\n","// put n new words where 1 word was\nconst insertContraction = function (document, point, words) {\n  let [n, w] = point\n  if (!words || words.length === 0) {\n    return\n  }\n  words = words.map((word, i) => {\n    word.implicit = word.text\n    word.machine = word.text\n    word.pre = ''\n    word.post = ''\n    word.text = ''\n    word.normal = ''\n    word.index = [n, w + i]\n    return word\n  })\n  if (words[0]) {\n    // move whitespace over\n    words[0].pre = document[n][w].pre\n    words[words.length - 1].post = document[n][w].post\n    // add the text/normal to the first term\n    words[0].text = document[n][w].text\n    words[0].normal = document[n][w].normal // move tags too?\n  }\n  // do the splice\n  document[n].splice(w, 1, ...words)\n}\nexport default insertContraction\n","const hasContraction = /'/\n\nconst isHas = (terms, i) => {\n  //look for a past-tense verb\n  let after = terms.slice(i + 1, i + 3)\n  return after.some(t => t.tags.has('PastTense'))\n}\n\n// 's -> [possessive, 'has', or 'is']\nconst apostropheS = function (terms, i) {\n  // possessive, is/has\n  let before = terms[i].normal.split(hasContraction)[0]\n  // spencer's got -> 'has'\n  if (isHas(terms, i)) {\n    return [before, 'has']\n  }\n  // let's\n  if (before === 'let') {\n    return [before, 'us']\n  }\n  // allow slang \"there's\" -> there are\n  if (before === 'there') {\n    let nextTerm = terms[i + 1]\n    if (nextTerm && nextTerm.tags.has('Plural')) {\n      return [before, 'are']\n    }\n  }\n  return [before, 'is']\n}\nexport default apostropheS\n","const hasContraction = /'/\n//look for a past-tense verb\nconst hasPastTense = (terms, i) => {\n  let after = terms.slice(i + 1, i + 3)\n  return after.some(t => t.tags.has('PastTense'))\n}\n// he'd walked -> had\n// how'd -> did\n// he'd go -> would\nconst _apostropheD = function (terms, i) {\n  let before = terms[i].normal.split(hasContraction)[0]\n  // what'd, how'd\n  if (before === 'how' || before === 'what') {\n    return [before, 'did']\n  }\n  if (hasPastTense(terms, i) === true) {\n    return [before, 'had']\n  }\n  // had/would/did\n  return [before, 'would']\n}\nexport default _apostropheD\n","const banList = {\n  that: true,\n  there: true,\n  let: true,\n  here: true,\n  everywhere: true,\n}\n\nconst beforePossessive = {\n  in: true,//in sunday's\n  by: true,//by sunday's\n  for: true,//for sunday's\n}\n\nconst isPossessive = (terms, i) => {\n  let term = terms[i]\n  // these can't be possessive\n  if (banList.hasOwnProperty(term.machine || term.normal)) {\n    return false\n  }\n  // if we already know it\n  if (term.tags.has('Possessive')) {\n    return true\n  }\n  //a pronoun can't be possessive - \"he's house\"\n  if (term.tags.has('Pronoun') || term.tags.has('QuestionWord')) {\n    return false\n  }\n  //if end of sentence, it is possessive - \"was spencer's\"\n  let nextTerm = terms[i + 1]\n  if (!nextTerm) {\n    return true\n  }\n  //a gerund suggests 'is walking'\n  if (nextTerm.tags.has('Verb')) {\n    //fix 'jamie's bite'\n    if (nextTerm.tags.has('Infinitive')) {\n      return true\n    }\n    //fix 'spencer's runs'\n    if (nextTerm.tags.has('PresentTense')) {\n      return true\n    }\n    return false\n  }\n  //spencer's house\n  if (nextTerm.tags.has('Noun')) {\n    let nextStr = nextTerm.machine || nextTerm.normal\n    // 'spencer's here'\n    if (nextStr === 'here' || nextStr === 'there' || nextStr === 'everywhere') {\n      return false\n    }\n    // the chair's his\n    if (nextTerm.tags.has('Possessive')) {\n      return false\n    }\n    // the captain's John \n    if (nextTerm.tags.has('ProperNoun') && !term.tags.has('ProperNoun')) {\n      return false\n    }\n    return true\n  }\n  // by sunday's final\n  if (terms[i - 1] && beforePossessive[terms[i - 1].normal] === true) {\n    return true\n  }\n  //rocket's red glare\n  let twoTerm = terms[i + 2]\n  if (twoTerm && twoTerm.tags.has('Noun') && !twoTerm.tags.has('Pronoun')) {\n    return true\n  }\n  //othwerwise, an adjective suggests 'is good'\n  if (nextTerm.tags.has('Adjective') || nextTerm.tags.has('Adverb') || nextTerm.tags.has('Verb')) {\n    return false\n  }\n  return false\n}\nexport default isPossessive\n","import splice from './_splice.js'\nimport apostropheS from './apostrophe-s.js'\nimport apostropheD from './apostrophe-d.js'\nimport apostropheT from './apostrophe-t.js'\nimport isPossessive from './isPossessive.js'\n\nconst byApostrophe = /'/\n\n// poor-mans reindexing of this sentence only\nconst reIndex = function (terms) {\n  terms.forEach((t, i) => {\n    if (t.index) {\n      t.index[1] = i\n    }\n  })\n}\n\n// run tagger on our new implicit terms\nconst reTag = function (terms, view, start, len) {\n  let tmp = view.update()\n  tmp.document = [terms]\n  // offer to re-tag neighbours, too\n  let end = start + len\n  if (start > 0) {\n    start -= 1\n  }\n  if (terms[end]) {\n    end += 1\n  }\n  tmp.ptrs = [[0, start, end]]\n  tmp.compute(['lexicon', 'preTagger'])\n  // don't for a reindex of the whole document\n  reIndex(terms)\n}\n\nconst byEnd = {\n  // how'd\n  d: (terms, i) => apostropheD(terms, i),\n  // we ain't\n  t: (terms, i) => apostropheT(terms, i),\n  // bob's\n  s: (terms, i, world) => {\n    // [bob's house] vs [bob's cool]\n    if (isPossessive(terms, i)) {\n      return world.methods.one.setTag([terms[i]], 'Possessive', world, '2-contraction')\n    }\n    return apostropheS(terms, i)\n  },\n}\n\nconst toDocs = function (words, view) {\n  let doc = view.fromText(words.join(' '))\n  doc.compute('id')\n  return doc.docs[0]\n}\n\n\n//really easy ones\nconst contractionTwo = (view) => {\n  let { world, document } = view\n  // each sentence\n  document.forEach((terms, n) => {\n    // loop through terms backwards\n    for (let i = terms.length - 1; i >= 0; i -= 1) {\n      // is it already a contraction\n      if (terms[i].implicit) {\n        return\n      }\n      let after = null\n      if (byApostrophe.test(terms[i].normal) === true) {\n        [, after] = terms[i].normal.split(byApostrophe)\n      }\n      let words = null\n      // any known-ones, like 'dunno'?\n      // ['foo', 's']\n      if (byEnd.hasOwnProperty(after)) {\n        words = byEnd[after](terms, i, world)\n      }\n      // actually insert the new terms\n      if (words) {\n        words = toDocs(words, view)\n        splice(document, [n, i], words)\n        reTag(document[n], view, i, words.length)\n        continue\n      }\n    }\n  })\n}\nexport default { contractionTwo }\n","const lastNoun = function (terms, i) {\n  for (let n = i - 1; n >= 0; n -= 1) {\n    if (\n      terms[n].tags.has('Noun') ||\n      terms[n].tags.has('Pronoun') ||\n      terms[n].tags.has('Plural') ||\n      terms[n].tags.has('Singular')\n    ) {\n      return terms[n]\n    }\n  }\n  return null\n}\n\n//ain't -> are/is not\nconst apostropheT = function (terms, i) {\n  if (terms[i].normal === \"ain't\" || terms[i].normal === 'aint') {\n    // \"ain't never\" -> have never (?)\n    if (terms[i + 1] && terms[i + 1].normal === 'never') {\n      return ['have']\n    }\n    // we aint -> are not,   she aint -> is not\n    let noun = lastNoun(terms, i)\n    if (noun) {\n      // plural/singular pronouns\n      if (noun.normal === 'we' || noun.normal === 'they') {\n        return ['are', 'not']\n      }\n      if (noun.normal === 'i') {\n        return ['am', 'not']\n      }\n      // plural/singular tags\n      if (noun.tags && noun.tags.has('Plural')) {\n        return ['are', 'not']\n      }\n    }\n    return ['is', 'not']\n  }\n  let before = terms[i].normal.replace(/n't/, '')\n  return [before, 'not']\n}\n\nexport default apostropheT\n","import api from './api/index.js'\nimport compute from './compute/index.js'\n\nexport default {\n  compute,\n  api,\n  hooks: ['contractionTwo']\n}","const personAdj = '(misty|rusty|dusty|rich|randy|sandy|young|earnest|frank|brown)'\n\nexport default [\n  // ===person-date===\n  { match: '%Person|Date% #Acronym? #ProperNoun', tag: 'Person', reason: 'jan-thierson' },\n  // ===person-noun===\n  //Cliff Clavin\n  { match: '%Person|Noun% #Acronym? #ProperNoun', tag: 'Person', reason: 'switch-person', safe: true },\n  // olive garden\n  { match: '%Person|Noun% #Organization', tag: 'Organization', reason: 'olive-garden' },\n  // ===person-verb===\n  // ollie faroo\n  { match: '%Person|Verb% #Acronym? #ProperNoun', tag: 'Person', reason: 'verb-propernoun' },\n  // chuck will ...\n  { match: `[%Person|Verb%] (will|had|has|said|says|told|did|learned|wants|wanted)`, group: 0, tag: 'Person', reason: 'person-said' },\n\n  // ===person-place===\n  //sydney harbour\n  { match: `[%Person|Place%] (harbor|harbour|pier|town|city|place|dump|landfill)`, group: 0, tag: 'Place', reason: 'sydney-harbour' },\n  // east sydney\n  { match: `(west|east|north|south) [%Person|Place%]`, group: 0, tag: 'Place', reason: 'east-sydney' },\n\n  // ===person-adjective===\n  // rusty smith\n  { match: `${personAdj} #Person`, tag: 'Person', reason: 'randy-smith' },\n  // rusty a. smith\n  { match: `${personAdj} #Acronym? #ProperNoun`, tag: 'Person', reason: 'rusty-smith' },\n  // very rusty\n  { match: `#Adverb [${personAdj}]`, group: 0, tag: 'Adjective', reason: 'really-rich' },\n\n  // ===person-verb===\n  // would wade\n  { match: `#Modal [%Person|Verb%]`, group: 0, tag: 'Verb', reason: 'would-mark' },\n  // really wade\n  { match: `#Adverb [%Person|Verb%]`, group: 0, tag: 'Verb', reason: 'really-mark' },\n  // drew closer\n  { match: `[%Person|Verb%] (#Adverb|#Comparative)`, group: 0, tag: 'Verb', reason: 'drew-closer' },\n  // wade smith\n  { match: `%Person|Verb% #Person`, tag: 'Person', reason: 'rob-smith' },\n  // wade m. Cooper\n  { match: `%Person|Verb% #Acronym #ProperNoun`, tag: 'Person', reason: 'rob-a-smith' },\n  // will go\n  { match: '[will] #Verb', group: 0, tag: 'Modal', reason: 'will-verb' },\n  // will Pharell\n  { match: '(will && @isTitleCase) #ProperNoun', tag: 'Person', reason: 'will-name' },\n]\n","// this is really hard to do\nconst notIf = '(i|we|they)' //we do not go\nexport default [\n  // do not go\n  { match: '^do not? [#Infinitive #Particle?]', notIf, group: 0, tag: 'Imperative', reason: 'do-eat' },\n  // please go\n  { match: '^please do? not? [#Infinitive #Particle?]', group: 0, tag: 'Imperative', reason: 'please-go' },\n  // just go\n  { match: '^just do? not? [#Infinitive #Particle?]', group: 0, tag: 'Imperative', reason: 'just-go' },\n  // do it better\n  { match: '^[#Infinitive] it #Comparative', notIf, group: 0, tag: 'Imperative', reason: 'do-it-better' },\n  // do it again\n  { match: '^[#Infinitive] it (please|now|again|plz)', notIf, group: 0, tag: 'Imperative', reason: 'do-it-please' },\n  // go quickly.\n  { match: '^[#Infinitive] (#Adjective|#Adverb)$', group: 0, tag: 'Imperative', notIf: '(so|such|rather|enough)', reason: 'go-quickly' },\n  // turn down the noise\n  { match: '^[#Infinitive] (up|down|over) #Determiner', group: 0, tag: 'Imperative', reason: 'turn-down' },\n  // eat my shorts\n  { match: '^[#Infinitive] (your|my|the|a|an|any|each|every|some|more)', group: 0, notIf: 'like', tag: 'Imperative', reason: 'eat-my-shorts' },\n  // tell him the story\n  { match: '^[#Infinitive] (him|her|it|us|me)', group: 0, tag: 'Imperative', reason: 'tell-him' },\n  // avoid loud noises\n  { match: '^[#Infinitive] #Adjective #Noun$', group: 0, tag: 'Imperative', reason: 'avoid-loud-noises' },\n  // one-word imperatives\n  { match: '^(go|stop|wait|hurry) please?$', tag: 'Imperative', reason: 'go' },\n  // somebody call\n  { match: '^(somebody|everybody) [#Infinitive]', group: 0, tag: 'Imperative', reason: 'somebody-call' },\n  // let's leave\n  { match: '^let (us|me) [#Infinitive]', group: 0, tag: 'Imperative', reason: 'lets-leave' },\n  // shut the door\n  { match: '^[(shut|close|open|start|stop|end|keep)] #Determiner #Noun', group: 0, tag: 'Imperative', reason: 'shut-the-door' },\n  // go to toronto\n  { match: '^[go] to .', group: 0, tag: 'Imperative', reason: 'go-to-toronto' },\n  // would you recommend\n  { match: '^#Modal you [#Infinitive]', group: 0, tag: 'Imperative', reason: 'would-you-' },\n  // never say\n  { match: '^never [#Infinitive]', group: 0, tag: 'Imperative', reason: 'never-stop' },\n  // come have a drink\n  { match: '^come #Infinitive', tag: 'Imperative', reason: 'come-have' },\n  // come and have a drink\n  { match: '^come and? #Infinitive', tag: 'Imperative . Imperative', reason: 'come-and-have' },\n  // stay away\n  { match: '^stay (out|away|back)', tag: 'Imperative', reason: 'stay-away' },\n  // stay cool\n  { match: '^[stay] #Adjective', tag: 'Imperative', reason: 'stay-cool' },\n  // keep it silent\n  { match: '^[keep it] #Adjective', group: 0, tag: 'Imperative', reason: 'keep-it-cool' },\n  // don't be late\n  { match: '^do not [#Infinitive]', group: 0, tag: 'Imperative', reason: 'do-not-be' },\n  // allow yourself\n  { match: '[#Infinitive] (yourself|yourselves)', group: 0, tag: 'Imperative', reason: 'allow-yourself' },\n  // continue playing\n  { match: '^[#Infinitive] #Gerund', group: 0, tag: 'Imperative', reason: 'keep-playing' },\n  // go to it\n  { match: '^[#Infinitive] (to|for|into|toward)', group: 0, tag: 'Imperative', reason: 'go-to' },\n  // relax and unwind\n  { match: '^[#Infinitive] (and|or) #Infinitive', group: 0, tag: 'Imperative', reason: 'inf-and-inf' },\n\n  // commit to\n  { match: '^[%Noun|Verb%] to', group: 0, tag: 'Imperative', reason: 'commit-to' },\n  // maintain eye contact\n  { match: '^[#Infinitive] #Adjective? #Singular #Singular', group: 0, tag: 'Imperative', reason: 'maintain-eye-contact' },\n  // don't forget to clean\n  { match: 'do not (forget|omit|neglect) to [#Infinitive]', group: 0, tag: 'Imperative', reason: 'do-not-forget' },\n\n]","import adj from './adjective/adjective.js'\nimport advAdj from './adjective/adj-adverb.js'\nimport gerundAdj from './adjective/adj-gerund.js'\nimport nounAdj from './adjective/adj-noun.js'\nimport adjVerb from './adjective/adj-verb.js'\n\nimport adv from './adverb.js'\n\nimport dates from './dates/date-phrase.js'\nimport ambigDates from './dates/date.js'\n\nimport noun from './nouns/nouns.js'\nimport gerundNouns from './verbs/noun-gerund.js'\nimport presNouns from './verbs/verb-noun.js'\n\nimport money from './numbers/money.js'\nimport fractions from './numbers/fractions.js'\nimport numbers from './numbers/numbers.js'\n\nimport person from './person/person-phrase.js'\nimport personName from './person/ambig-name.js'\n\nimport verbs from './verbs/verbs.js'\nimport auxiliary from './verbs/auxiliary.js'\nimport phrasal from './verbs/phrasal.js'\nimport imperative from './verbs/imperative.js'\nimport adjGerund from './verbs/adj-gerund.js'\nimport passive from './verbs/passive.js'\n\nimport misc from './_misc.js'\n\nimport orgs from './orgs/organizations.js'\nimport places from './nouns/places.js'\nimport conjunctions from './conjunctions.js'\n\nlet matches = [].concat(\n  // order matters top-matches can get overwritten\n  passive,\n  adj,\n  advAdj,\n  gerundAdj,\n  nounAdj,\n  adv,\n  ambigDates,\n  dates,\n  noun,\n  gerundNouns,\n  presNouns,\n  money,\n  fractions,\n  numbers,\n  person,\n  personName,\n  verbs,\n  adjVerb,\n  auxiliary,\n  phrasal,\n  imperative,\n  adjGerund,\n  misc,\n  orgs,\n  places,\n  conjunctions\n)\nexport default {\n  two: {\n    matches,\n  },\n}\n","// ==== Passive voice ===\nexport default [\n  // got walked, was walked, were walked\n  { match: '(got|were|was|is|are|am) (#PastTense|#Participle)', tag: 'Passive', reason: 'got-walked' },\n  // was being walked\n  { match: '(was|were|is|are|am) being (#PastTense|#Participle)', tag: 'Passive', reason: 'was-being' },\n  // had been walked, have been eaten\n  { match: '(had|have|has) been (#PastTense|#Participle)', tag: 'Passive', reason: 'had-been' },\n  // will be cleaned\n  { match: 'will be being? (#PastTense|#Participle)', tag: 'Passive', reason: 'will-be-cleaned' },\n  // suffered by the country\n  { match: '#Noun [(#PastTense|#Participle)] by (the|a) #Noun', group: 0, tag: 'Passive', reason: 'suffered-by' },\n\n]","export default [\n  // all fell apart\n  { match: '[(all|both)] #Determiner #Noun', group: 0, tag: 'Noun', reason: 'all-noun' },\n  //sometimes not-adverbs\n  { match: '#Copula [(just|alone)]$', group: 0, tag: 'Adjective', reason: 'not-adverb' },\n  //jack is guarded\n  { match: '#Singular is #Adverb? [#PastTense$]', group: 0, tag: 'Adjective', reason: 'is-filled' },\n  // smoked poutine is\n  { match: '[#PastTense] #Singular is', group: 0, tag: 'Adjective', reason: 'smoked-poutine' },\n  // baked onions are\n  { match: '[#PastTense] #Plural are', group: 0, tag: 'Adjective', reason: 'baked-onions' },\n  // well made\n  { match: 'well [#PastTense]', group: 0, tag: 'Adjective', reason: 'well-made' },\n  // is f*ed up\n  { match: '#Copula [fucked up?]', group: 0, tag: 'Adjective', reason: 'swears-adjective' },\n  //jack seems guarded\n  { match: '#Singular (seems|appears) #Adverb? [#PastTense$]', group: 0, tag: 'Adjective', reason: 'seems-filled' },\n  // jury is out - preposition ➔ adjective\n  { match: '#Copula #Adjective? [(out|in|through)]$', group: 0, tag: 'Adjective', reason: 'still-out' },\n  // shut the door\n  { match: '^[#Adjective] (the|your) #Noun', group: 0, notIf: '(all|even)', tag: 'Infinitive', reason: 'shut-the' },\n  // the said card\n  { match: 'the [said] #Noun', group: 0, tag: 'Adjective', reason: 'the-said-card' },\n  // a myth that uncovered wounds heal\n  // {\n  //   match: '#Noun (that|which|whose) [#PastTense] #Noun',\n  //   ifNo: '#Copula',\n  //   group: 0,\n  //   tag: 'Adjective',\n  //   reason: 'that-past-noun',\n  // },\n\n  { match: 'too much', tag: 'Adverb Adjective', reason: 'bit-4' },\n  { match: 'a bit much', tag: 'Determiner Adverb Adjective', reason: 'bit-3' },\n\n  // adjective-prefixes - 'un skilled'\n  { match: '[(un|contra|extra|inter|intra|macro|micro|mid|mis|mono|multi|pre|sub|tri|ex)] #Adjective', group: 0, tag: ['Adjective', 'Prefix'], reason: 'un-skilled' },\n\n]\n","const adverbAdj = `(dark|bright|flat|light|soft|pale|dead|dim|faux|little|wee|sheer|most|near|good|extra|all)`\nexport default [\n  // kinda sparkly\n  { match: `#Adverb [#Adverb] (and|or|then)`, group: 0, tag: 'Adjective', reason: 'kinda-sparkly-and' },\n  // dark green\n  { match: `[${adverbAdj}] #Adjective`, group: 0, tag: 'Adverb', reason: 'dark-green' },\n]\n","export default [\n  // Gerund-Adjectives - 'amusing, annoying'\n  //a staggering cost\n  { match: '(a|an) [#Gerund]', group: 0, tag: 'Adjective', reason: 'a|an' },\n  //as amusing as\n  { match: 'as [#Gerund] as', group: 0, tag: 'Adjective', reason: 'as-gerund-as' },\n  // more amusing than\n  { match: 'more [#Gerund] than', group: 0, tag: 'Adjective', reason: 'more-gerund-than' },\n  // very amusing\n  { match: '(so|very|extremely) [#Gerund]', group: 0, tag: 'Adjective', reason: 'so-gerund' },\n  // it was amusing\n  // {\n  //   match: '(it|he|she|everything|something) #Adverb? was #Adverb? [#Gerund]',\n  //   group: 0,\n  //   tag: 'Adjective',\n  //   reason: 'it-was-gerund',\n  // },\n  // found it amusing\n  { match: '(found|found) it #Adverb? [#Gerund]', group: 0, tag: 'Adjective', reason: 'found-it-gerund' },\n  // a bit amusing\n  { match: 'a (little|bit|wee) bit? [#Gerund]', group: 0, tag: 'Adjective', reason: 'a-bit-gerund' },\n  // the amusing world\n  // { match: '(#Determiner|#Possessive) [%Adj|Gerund%] #Noun', group: 0, tag: 'Adjective', reason: 'amusing-world' },\n]\n","export default [\n  //the above is clear\n  { match: '#Determiner [#Adjective] #Copula', group: 0, tag: 'Noun', reason: 'the-adj-is' },\n  //real evil is\n  { match: '#Adjective [#Adjective] #Copula', group: 0, tag: 'Noun', reason: 'adj-adj-is' },\n  //his fine\n  { match: '(his|its) [%Adj|Noun%]', group: 0, tag: 'Noun', reason: 'his-fine' },\n  //is all\n  { match: '#Copula #Adverb? [all]', group: 0, tag: 'Noun', reason: 'is-all' },\n  // have fun\n  { match: `(have|had) [#Adjective] #Preposition .`, group: 0, tag: 'Noun', reason: 'have-fun' },\n  // brewing giant\n  { match: `#Gerund (giant|capital|center|zone|application)`, tag: 'Noun', reason: 'brewing-giant' },\n  // in an instant\n  { match: `#Preposition (a|an) [#Adjective]$`, group: 0, tag: 'Noun', reason: 'an-instant' },\n  // brand new\n  { match: `[brand #Gerund?] new`, group: 0, tag: 'Adverb', reason: 'brand-new' },\n  // her favourite sport\n  { match: `#Possessive [%Adj|Noun%] #Noun`, group: 0, tag: 'Adjective', reason: 'her-favourite' },\n]\n","// const adverbAdj = '(dark|bright|flat|light|soft|pale|dead|dim|faux|little|wee|sheer|most|near|good|extra|all)'\n\nexport default [\n  //still good\n  { match: '[still] #Adjective', group: 0, tag: 'Adverb', reason: 'still-advb' },\n  //still make\n  { match: '[still] #Verb', group: 0, tag: 'Adverb', reason: 'still-verb' },\n  // so hot\n  { match: '[so] #Adjective', group: 0, tag: 'Adverb', reason: 'so-adv' },\n  // way hotter\n  { match: '[way] #Comparative', group: 0, tag: 'Adverb', reason: 'way-adj' },\n  // way too hot\n  { match: '[way] #Adverb #Adjective', group: 0, tag: 'Adverb', reason: 'way-too-adj' },\n  // all singing\n  { match: '[all] #Verb', group: 0, tag: 'Adverb', reason: 'all-verb' },\n  // sing like an angel\n  { match: '#Verb  [like]', group: 0, notIf: '(#Modal|#PhrasalVerb)', tag: 'Adverb', reason: 'verb-like' },\n  //barely even walk\n  { match: '(barely|hardly) even', tag: 'Adverb', reason: 'barely-even' },\n  //even held\n  { match: '[even] #Verb', group: 0, tag: 'Adverb', reason: 'even-walk' },\n  // even the greatest\n  { match: '[even] (#Determiner|#Possessive)', group: 0, tag: '#Adverb', reason: 'even-the' },\n  // even left\n  { match: 'even left', tag: '#Adverb #Verb', reason: 'even-left' },\n  // way over\n  { match: '[way] #Adjective', group: 0, tag: '#Adverb', reason: 'way-over' },\n  //cheering hard - dropped -ly's\n  {\n    match: '#PresentTense [(hard|quick|long|bright|slow|fast|backwards|forwards)]',\n    notIf: '#Copula',\n    group: 0,\n    tag: 'Adverb',\n    reason: 'lazy-ly',\n  },\n  // much appreciated\n  { match: '[much] #Adjective', group: 0, tag: 'Adverb', reason: 'bit-1' },\n  // is well\n  { match: '#Copula [#Adverb]$', group: 0, tag: 'Adjective', reason: 'is-well' },\n  // a bit cold\n  { match: 'a [(little|bit|wee) bit?] #Adjective', group: 0, tag: 'Adverb', reason: 'a-bit-cold' },\n  // super strong\n  { match: `[(super|pretty)] #Adjective`, group: 0, tag: 'Adverb', reason: 'super-strong' },\n  // become overly weakened\n  { match: '(become|fall|grow) #Adverb? [#PastTense]', group: 0, tag: 'Adjective', reason: 'overly-weakened' },\n  // a completely beaten man\n  { match: '(a|an) #Adverb [#Participle] #Noun', group: 0, tag: 'Adjective', reason: 'completely-beaten' },\n  //a close\n  { match: '#Determiner #Adverb? [close]', group: 0, tag: 'Adjective', reason: 'a-close' },\n  //walking close\n  { match: '#Gerund #Adverb? [close]', group: 0, tag: 'Adverb', reason: 'being-close' },\n  // a blown motor\n  { match: '(the|those|these|a|an) [#Participle] #Noun', group: 0, tag: 'Adjective', reason: 'blown-motor' },\n  // charged back\n  { match: '(#PresentTense|#PastTense) [back]', group: 0, tag: 'Adverb', reason: 'charge-back' },\n]\n","export default [\n  // ==== WeekDay ====\n  // sun the 5th\n  { match: '[sun] the #Ordinal', tag: 'WeekDay', reason: 'sun-the-5th' },\n  //sun feb 2\n  { match: '[sun] #Date', group: 0, tag: 'WeekDay', reason: 'sun-feb' },\n  //1pm next sun\n  { match: '#Date (on|this|next|last|during)? [sun]', group: 0, tag: 'WeekDay', reason: '1pm-sun' },\n  //this sat\n  { match: `(in|by|before|during|on|until|after|of|within|all) [sat]`, group: 0, tag: 'WeekDay', reason: 'sat' },\n  { match: `(in|by|before|during|on|until|after|of|within|all) [wed]`, group: 0, tag: 'WeekDay', reason: 'wed' },\n  { match: `(in|by|before|during|on|until|after|of|within|all) [march]`, group: 0, tag: 'Month', reason: 'march' },\n  //sat november\n  { match: '[sat] #Date', group: 0, tag: 'WeekDay', reason: 'sat-feb' },\n\n  // ==== Month ====\n  //all march\n  { match: `#Preposition [(march|may)]`, group: 0, tag: 'Month', reason: 'in-month' },\n  //this march\n  { match: `(this|next|last) [(march|may)]`, tag: '#Date #Month', reason: 'this-month' },\n  // march 5th\n  { match: `(march|may) the? #Value`, tag: '#Month #Date #Date', reason: 'march-5th' },\n  // 5th of march\n  { match: `#Value of? (march|may)`, tag: '#Date #Date #Month', reason: '5th-of-march' },\n  // march and feb\n  { match: `[(march|may)] .? #Date`, group: 0, tag: 'Month', reason: 'march-and-feb' },\n  // feb to march\n  { match: `#Date .? [(march|may)]`, group: 0, tag: 'Month', reason: 'feb-and-march' },\n  //quickly march\n  { match: `#Adverb [(march|may)]`, group: 0, tag: 'Verb', reason: 'quickly-march' },\n  //march quickly\n  { match: `[(march|may)] #Adverb`, group: 0, tag: 'Verb', reason: 'march-quickly' },\n]\n","export default [\n  // ==== Holiday ====\n  { match: '#Holiday (day|eve)', tag: 'Holiday', reason: 'holiday-day' },\n  //5th of March\n  { match: '#Value of #Month', tag: 'Date', reason: 'value-of-month' },\n  //5 March\n  { match: '#Cardinal #Month', tag: 'Date', reason: 'cardinal-month' },\n  //march 5 to 7\n  { match: '#Month #Value to #Value', tag: 'Date', reason: 'value-to-value' },\n  //march the 12th\n  { match: '#Month the #Value', tag: 'Date', reason: 'month-the-value' },\n  //june 7\n  { match: '(#WeekDay|#Month) #Value', tag: 'Date', reason: 'date-value' },\n  //7 june\n  { match: '#Value (#WeekDay|#Month)', tag: 'Date', reason: 'value-date' },\n  //may twenty five\n  { match: '(#TextValue && #Date) #TextValue', tag: 'Date', reason: 'textvalue-date' },\n  // 'aug 20-21'\n  { match: `#Month #NumberRange`, tag: 'Date', reason: 'aug 20-21' },\n  // wed march 5th\n  { match: `#WeekDay #Month #Ordinal`, tag: 'Date', reason: 'week mm-dd' },\n  // aug 5th 2021\n  { match: `#Month #Ordinal #Cardinal`, tag: 'Date', reason: 'mm-dd-yyy' },\n\n  // === timezones ===\n  // china standard time\n  { match: `(#Place|#Demonmym|#Time) (standard|daylight|central|mountain)? time`, tag: 'Timezone', reason: 'std-time' },\n  // eastern time\n  {\n    match: `(eastern|mountain|pacific|central|atlantic) (standard|daylight|summer)? time`,\n    tag: 'Timezone',\n    reason: 'eastern-time',\n  },\n  // 5pm central\n  { match: `#Time [(eastern|mountain|pacific|central|est|pst|gmt)]`, group: 0, tag: 'Timezone', reason: '5pm-central' },\n  // central european time\n  { match: `(central|western|eastern) european time`, tag: 'Timezone', reason: 'cet' },\n]\n","const infNouns =\n  '(feel|sense|process|rush|side|bomb|bully|challenge|cover|crush|dump|exchange|flow|function|issue|lecture|limit|march|process)'\nexport default [\n  //'more' is not always an adverb\n  // any more\n  { match: '(the|any) [more]', group: 0, tag: 'Singular', reason: 'more-noun' },\n  // more players\n  { match: '[more] #Noun', group: 0, tag: 'Adjective', reason: 'more-noun' },\n  // rights of man\n  { match: '(right|rights) of .', tag: 'Noun', reason: 'right-of' },\n  // a bit\n  { match: 'a [bit]', group: 0, tag: 'Singular', reason: 'bit-2' },\n  // a must\n  { match: 'a [must]', group: 0, tag: 'Singular', reason: 'must-2' },\n  // we all\n  { match: '(we|us) [all]', group: 0, tag: 'Noun', reason: 'we all' },\n\n  //some pressing issues\n  { match: 'some [#Verb] #Plural', group: 0, tag: 'Noun', reason: 'determiner6' },\n  // my first thought\n  { match: '#Possessive #Ordinal [#PastTense]', group: 0, tag: 'Noun', reason: 'first-thought' },\n  //the nice swim\n  { match: '(the|this|those|these) #Adjective [%Verb|Noun%]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'the-adj-verb' },\n  // the truly nice swim\n  { match: '(the|this|those|these) #Adverb #Adjective [#Verb]', group: 0, tag: 'Noun', reason: 'determiner4' },\n  //the wait to vote\n  { match: 'the [#Verb] #Preposition .', group: 0, tag: 'Noun', reason: 'determiner1' },\n  //a sense of\n  { match: '#Determiner [#Verb] of', group: 0, tag: 'Noun', reason: 'the-verb-of' },\n  //the threat of force\n  { match: '#Determiner #Noun of [#Verb]', group: 0, tag: 'Noun', notIf: '#Gerund', reason: 'noun-of-noun' },\n  // ended in ruins\n  { match: '#PastTense #Preposition [#PresentTense]', group: 0, notIf: '#Gerund', tag: 'Noun', reason: 'ended-in-ruins' },\n  //'u' as pronoun\n  { match: '#Conjunction [u]', group: 0, tag: 'Pronoun', reason: 'u-pronoun-2' },\n  { match: '[u] #Verb', group: 0, tag: 'Pronoun', reason: 'u-pronoun-1' },\n  //the western line\n  { match: '#Determiner [(western|eastern|northern|southern|central)] #Noun', group: 0, tag: 'Noun', reason: 'western-line' },\n  //air-flow\n  { match: '(#Singular && @hasHyphen) #PresentTense', tag: 'Noun', reason: 'hyphen-verb' },\n  //is no walk\n  { match: 'is no [#Verb]', group: 0, tag: 'Noun', reason: 'is-no-verb' },\n  //do so\n  { match: 'do [so]', group: 0, tag: 'Noun', reason: 'so-noun' },\n  // what the hell\n  { match: '#Determiner [(shit|damn|hell)]', group: 0, tag: 'Noun', reason: 'swears-noun' },\n  // go to shit\n  { match: 'to [(shit|hell)]', group: 0, tag: 'Noun', reason: 'to-swears' },\n  // the staff were\n  { match: '(the|these) [#Singular] (were|are)', group: 0, tag: 'Plural', reason: 'singular-were' },\n  // a comdominium, or simply condo\n  { match: `a #Noun+ or #Adverb+? [#Verb]`, group: 0, tag: 'Noun', reason: 'noun-or-noun' },\n  // walk the walk\n  { match: '(the|those|these|a|an) #Adjective? [#Infinitive]', group: 0, tag: 'Noun', reason: 'det-inf' },\n  { match: '(the|those|these|a|an) #Adjective? [#PresentTense]', notIf: '(#Gerund|#Copula)', group: 0, tag: 'Noun', reason: 'det-pres' },\n\n  // ==== Actor ====\n  //Aircraft designer\n  { match: '#Noun #Actor', tag: 'Actor', reason: 'thing-doer' },\n  // co-founder\n  { match: `co #Singular`, tag: 'Actor', reason: 'co-noun' },\n\n  // ==== Singular ====\n  //the sun\n  { match: '#Determiner [sun]', group: 0, tag: 'Singular', reason: 'the-sun' },\n  //did a 900, paid a 20\n  { match: '#Verb (a|an) [#Value]', group: 0, tag: 'Singular', reason: 'did-a-value' },\n  //'the can'\n  { match: 'the [(can|will|may)]', group: 0, tag: 'Singular', reason: 'the can' },\n\n  // ==== Possessive ====\n  //spencer kelly's\n  { match: '#FirstName #Acronym? (#Possessive && #LastName)', tag: 'Possessive', reason: 'name-poss' },\n  //Super Corp's fundraiser\n  { match: '#Organization+ #Possessive', tag: 'Possessive', reason: 'org-possessive' },\n  //Los Angeles's fundraiser\n  { match: '#Place+ #Possessive', tag: 'Possessive', reason: 'place-possessive' },\n  // Ptolemy's experiments\n  { match: '#Possessive #PresentTense', notIf: '(#Gerund|her)', tag: 'Noun', reason: 'possessive-verb' }, // anna's eating vs anna's eating lunch\n  // 10th of a second\n  { match: '#Value of a [second]', group: 0, unTag: 'Value', tag: 'Singular', reason: '10th-of-a-second' },\n  // 10 seconds\n  { match: '#Value [seconds]', group: 0, unTag: 'Value', tag: 'Plural', reason: '10-seconds' },\n  // in time\n  { match: 'in [#Infinitive]', group: 0, tag: 'Singular', reason: 'in-age' },\n  // a minor in\n  { match: 'a [#Adjective] #Preposition', group: 0, tag: 'Noun', reason: 'a-minor-in' },\n  //the repairer said\n  { match: '#Determiner [#Singular] said', group: 0, tag: 'Actor', reason: 'the-actor-said' },\n  //the euro sense\n  { match: `#Determiner #Noun [${infNouns}] !(#Preposition|to|#Adverb)?`, group: 0, tag: 'Noun', reason: 'the-noun-sense' },\n  // photographs of a computer are\n  { match: '[#PresentTense] (of|by|for) (a|an|the) #Noun #Copula', group: 0, tag: 'Plural', reason: 'photographs-of' },\n  // fight and win\n  { match: '#Infinitive and [%Noun|Verb%]', group: 0, tag: 'Infinitive', reason: 'fight and win' },\n  // peace and flowers and love\n  { match: '#Noun and [#Verb] and #Noun', group: 0, tag: 'Noun', reason: 'peace-and-flowers' },\n  // the 1992 classic\n  { match: 'the #Cardinal [%Adj|Noun%]', group: 0, tag: 'Noun', reason: 'the-1992-classic' },\n  // the premier university\n  { match: '#Copula the [%Adj|Noun%] #Noun', group: 0, tag: 'Adjective', reason: 'the-premier-university' },\n\n  // scottish - i ate me sandwich\n  { match: 'i #Verb [me] #Noun', group: 0, tag: 'Possessive', reason: 'scottish-me' },\n  // dance music\n  { match: '[#PresentTense] (music|class|lesson|night|party|festival|league|ceremony)', group: 0, tag: 'Noun', reason: 'dance-music' },\n\n]\n","export default [\n  // the planning processes\n  { match: '(this|that|the|a|an) [#Gerund #Infinitive]', group: 0, tag: 'Singular', reason: 'the-planning-process' },\n  // the paving stones\n  { match: '(that|the) [#Gerund #PresentTense]', group: 0, tag: 'Plural', reason: 'the-paving-stones' },\n  // this swimming\n  // { match: '(this|that|the) [#Gerund]', group: 0, tag: 'Noun', reason: 'this-gerund' },\n  // the remaining claims\n  { match: '#Determiner [#Gerund] #Noun', group: 0, tag: 'Adjective', reason: 'the-gerund-noun' },\n  // i think tipping sucks\n  { match: `#Pronoun #Infinitive [#Gerund] #PresentTense`, group: 0, tag: 'Noun', reason: 'tipping-sucks' },\n  // early warning\n  { match: '#Adjective [#Gerund]', group: 0, tag: 'Noun', reason: 'early-warning' },\n  //walking is cool\n  { match: '[#Gerund] #Adverb? not? #Copula', group: 0, tag: 'Activity', reason: 'gerund-copula' },\n  //walking should be fun\n  { match: '[#Gerund] #Modal', group: 0, tag: 'Activity', reason: 'gerund-modal' },\n  // finish listening\n  // { match: '#Infinitive [#Gerund]', group: 0, tag: 'Activity', reason: 'finish-listening' },\n  // the ruling party\n\n  // responsibility for setting\n  { match: '#Singular for [%Noun|Gerund%]', group: 0, tag: 'Gerund', reason: 'noun-for-gerund' },\n  // better for training\n  { match: '#Comparative (for|at) [%Noun|Gerund%]', group: 0, tag: 'Gerund', reason: 'better-for-gerund' },\n]\n","export default [\n  // do the dance\n  { match: '#Infinitive (this|that|the) [#Infinitive]', group: 0, tag: 'Noun', reason: 'do-this-dance' },\n  //running-a-show\n  { match: '#Gerund #Determiner [#Infinitive]', group: 0, tag: 'Noun', reason: 'running-a-show' },\n  //the-only-reason\n  { match: '#Determiner #Adverb [#Infinitive]', group: 0, tag: 'Noun', reason: 'the-reason' },\n  // a stream runs\n  { match: '(the|this|a|an) [#Infinitive] #Adverb? #Verb', group: 0, tag: 'Noun', reason: 'determiner5' },\n  //a nice deal\n  { match: '#Determiner #Adjective #Adjective? [#Infinitive]', group: 0, tag: 'Noun', reason: 'a-nice-inf' },\n  // the mexican train\n  { match: '#Determiner #Demonym [#PresentTense]', group: 0, tag: 'Noun', reason: 'mexican-train' },\n  //next career move\n  { match: '#Adjective #Noun+ [#Infinitive] #Copula', group: 0, tag: 'Noun', reason: 'career-move' },\n  // at some point\n  { match: 'at some [#Infinitive]', group: 0, tag: 'Noun', reason: 'at-some-inf' },\n  // goes to sleep\n  { match: '(go|goes|went) to [#Infinitive]', group: 0, tag: 'Noun', reason: 'goes-to-verb' },\n  //a close watch on\n  { match: '(a|an) #Adjective? #Noun [#Infinitive] (#Preposition|#Noun)', group: 0, tag: 'Noun', reason: 'a-noun-inf' },\n  //a tv show\n  { match: '(a|an) #Noun [#Infinitive]$', group: 0, tag: 'Noun', reason: 'a-noun-inf2' },\n  //is mark hughes\n  { match: '#Copula [#Infinitive] #Noun', group: 0, tag: 'Noun', reason: 'is-pres-noun' },\n  // good wait staff\n  // { match: '#Adjective [#Infinitive] #Noun', group: 0, tag: 'Noun', reason: 'good-wait-staff' },\n  // running for congress\n  { match: '#Gerund #Adjective? for [#Infinitive]', group: 0, tag: 'Noun', reason: 'running-for' },\n  // running to work\n  { match: '#Gerund #Adjective to [#Infinitive]', group: 0, tag: 'Noun', reason: 'running-to' },\n  // 1 train\n  { match: '(one|1) [#Infinitive]', group: 0, tag: 'Singular', reason: '1-trains' },\n  // about love\n  { match: 'about [#Infinitive]', group: 0, tag: 'Singular', reason: 'about-love' },\n  // on stage\n  { match: 'on [#Infinitive]', group: 0, tag: 'Noun', reason: 'on-stage' },\n  // any charge\n  { match: 'any [#Infinitive]', group: 0, tag: 'Noun', reason: 'any-charge' },\n  // no doubt\n  { match: 'no [#Infinitive]', group: 0, tag: 'Noun', reason: 'no-doubt' },\n  // number of seats\n  { match: 'number of [#PresentTense]', group: 0, tag: 'Noun', reason: 'number-of-x' },\n  // teaches/taught\n  { match: '(taught|teaches|learns|learned) [#PresentTense]', group: 0, tag: 'Noun', reason: 'teaches-x' },\n  // use reverse\n  { match: '(try|use|attempt|build|make) [#Verb]', notIf: '(#Copula|#PhrasalVerb)', group: 0, tag: 'Noun', reason: 'do-verb' },\n  // checkmate is\n  { match: '^[#Infinitive] (is|was)', group: 0, tag: 'Noun', reason: 'checkmate-is' },\n  // get much sleep\n  { match: '#Infinitive much [#Infinitive]', group: 0, tag: 'Noun', reason: 'get-much' },\n  // cause i gotta\n  { match: '[cause] #Pronoun #Verb', group: 0, tag: 'Conjunction', reason: 'cause-cuz' },\n  // the cardio dance party\n  { match: 'the #Singular [#Infinitive] #Noun', group: 0, tag: 'Noun', notIf: '#Pronoun', reason: 'cardio-dance' },\n\n  // that should smoke\n  { match: '#Determiner #Modal [#Noun]', group: 0, tag: 'PresentTense', reason: 'should-smoke' },\n  //this rocks\n  { match: '(this|that) [#Plural]', group: 0, tag: 'PresentTense', reason: 'this-verbs' },\n  //let him glue\n  {\n    match: '(let|make|made) (him|her|it|#Person|#Place|#Organization)+ [#Singular] (a|an|the|it)',\n    group: 0,\n    tag: 'Infinitive',\n    reason: 'let-him-glue',\n  },\n\n  // assign all tasks\n  { match: '#Verb (all|every|each|most|some|no) [#PresentTense]', notIf: '#Modal', group: 0, tag: 'Noun', reason: 'all-presentTense' },  // PresentTense/Noun ambiguities\n  // big dreams, critical thinking\n  // have big dreams\n  { match: '(had|have|#PastTense) #Adjective [#PresentTense]', group: 0, tag: 'Noun', reason: 'adj-presentTense' },\n  // excellent answer spencer\n  // { match: '^#Adjective [#PresentTense]', group: 0, tag: 'Noun', reason: 'start adj-presentTense' },\n  // one big reason\n  { match: '#Value #Adjective [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'one-big-reason' },\n  // won widespread support\n  { match: '#PastTense #Adjective+ [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'won-wide-support' },\n  // many poses\n  { match: '(many|few|several|couple) [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'many-poses' },\n  // very big dreams\n  { match: '#Determiner #Adverb #Adjective [%Noun|Verb%]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'very-big-dream' },\n  // adorable little store\n  { match: '#Adjective #Adjective [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'adorable-little-store' },\n  // of basic training\n  // { match: '#Preposition #Adjective [#PresentTense]', group: 0, tag: 'Noun', reason: 'of-basic-training' },\n  // justifiying higher costs\n  { match: '#Gerund #Adverb? #Comparative [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'higher-costs' },\n\n  { match: '(#Noun && @hasComma) #Noun (and|or) [#PresentTense]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'noun-list' },\n\n  // any questions for\n  { match: '(many|any|some|several) [#PresentTense] for', group: 0, tag: 'Noun', reason: 'any-verbs-for' },\n  // to facilitate gas exchange with\n  { match: `to #PresentTense #Noun [#PresentTense] #Preposition`, group: 0, tag: 'Noun', reason: 'gas-exchange' },\n  // waited until release\n  { match: `#PastTense (until|as|through|without) [#PresentTense]`, group: 0, tag: 'Noun', reason: 'waited-until-release' },\n  // selling like hot cakes\n  { match: `#Gerund like #Adjective? [#PresentTense]`, group: 0, tag: 'Plural', reason: 'like-hot-cakes' },\n  // some valid reason\n  { match: `some #Adjective [#PresentTense]`, group: 0, tag: 'Noun', reason: 'some-reason' },\n  // for some reason\n  { match: `for some [#PresentTense]`, group: 0, tag: 'Noun', reason: 'for-some-reason' },\n  // same kind of shouts\n  { match: `(same|some|the|that|a) kind of [#PresentTense]`, group: 0, tag: 'Noun', reason: 'some-kind-of' },\n  // a type of shout\n  { match: `(same|some|the|that|a) type of [#PresentTense]`, group: 0, tag: 'Noun', reason: 'some-type-of' },\n  // doing better for fights\n  { match: `#Gerund #Adjective #Preposition [#PresentTense]`, group: 0, tag: 'Noun', reason: 'doing-better-for-x' },\n  // get better aim\n  { match: `(get|got|have|had) #Comparative [#PresentTense]`, group: 0, tag: 'Noun', reason: 'got-better-aim' },\n  // whose name was\n  { match: 'whose [#PresentTense] #Copula', group: 0, tag: 'Noun', reason: 'whos-name-was' },\n  // give up on reason\n  { match: `#PhrasalVerb #PhrasalVerb #Preposition [#PresentTense]`, group: 0, tag: 'Noun', reason: 'given-up-on-x' },\n  //there are reasons\n  { match: 'there (are|were) #Adjective? [#PresentTense]', group: 0, tag: 'Plural', reason: 'there-are' },\n\n  // 30 trains\n  { match: '#Value [#PresentTense]', group: 0, notIf: '(one|1|#Copula|#Infinitive)', tag: 'Plural', reason: '2-trains' },\n  // compromises are possible\n  { match: '[#PresentTense] (are|were) #Adjective', group: 0, tag: 'Plural', reason: 'compromises-are-possible' },\n  // hope i helped\n  { match: '^[(hope|guess|thought|think)] #Pronoun #Verb', group: 0, tag: 'Infinitive', reason: 'suppose-i' },\n  //pursue its dreams\n  // { match: '#PresentTense #Possessive [#PresentTense]', notIf: '#Gerund', group: 0, tag: 'Plural', reason: 'pursue-its-dreams' },\n  // our unyielding support\n  { match: '#Possessive #Adjective [#Verb]', group: 0, tag: 'Noun', notIf: '#Copula', reason: 'our-full-support' },\n  // they do serve fish\n  { match: '(do|did|will) [#Singular] #Noun', group: 0, tag: 'PresentTense', reason: 'do-serve-fish' },\n  // tastes good\n  { match: '[(tastes|smells)] #Adverb? #Adjective', group: 0, tag: 'PresentTense', reason: 'tastes-good' },\n  // are you playing golf\n  // { match: '^are #Pronoun [#Noun]', group: 0, notIf: '(here|there)', tag: 'Verb', reason: 'are-you-x' },\n  // ignoring commute\n  { match: '#Copula #Gerund [#PresentTense] !by?', group: 0, tag: 'Noun', notIf: 'going', reason: 'ignoring-commute' },\n  // noun-pastTense variables\n  { match: '#Determiner #Adjective? [(shed|thought|rose|bid|saw|spelt)]', group: 0, tag: 'Noun', reason: 'noun-past' },\n\n  // 'verb-to'\n  // how to watch\n  { match: 'how to [%Noun|Verb%]', group: 0, tag: 'Verb', reason: 'how-to-noun' },\n  // asking questions\n  { match: '#Gerund [%Plural|Verb%]', group: 0, tag: 'Plural', reason: 'asking-questions' },\n  // ready to stream\n  { match: '(ready|available|difficult|hard|easy|made|attempt|try) to [%Noun|Verb%]', group: 0, tag: 'Verb', reason: 'ready-to-noun' },\n  // bring to market\n  { match: '(bring|went|go|drive|run|bike) to [%Noun|Verb%]', group: 0, tag: 'Noun', reason: 'bring-to-noun' },\n]\n","export default [\n  { match: '#Money and #Money #Currency?', tag: 'Money', reason: 'money-and-money' },\n  // 6 dollars and 5 cents\n  { match: '#Value #Currency [and] #Value (cents|ore|centavos|sens)', group: 0, tag: 'money', reason: 'and-5-cents' },\n  // maybe currencies\n  { match: '#Value (mark|rand|won|rub|ore)', tag: '#Money #Currency', reason: '4 mark' },\n]\n","export default [\n  // half a penny\n  { match: '[(half|quarter)] of? (a|an)', group: 0, tag: 'Fraction', reason: 'millionth' },\n  // nearly half\n  { match: '#Adverb [half]', group: 0, tag: 'Fraction', reason: 'nearly-half' },\n  // half the\n  { match: '[half] the', group: 0, tag: 'Fraction', reason: 'half-the' },\n  // and a half\n  { match: '#Cardinal and a half', tag: 'Fraction', reason: 'and-a-half' },\n  // two-halves\n  { match: '#Value (halves|halfs|quarters)', tag: 'Fraction', reason: 'two-halves' },\n\n  // ---ordinals as fractions---\n  // a fifth\n  { match: 'a #Ordinal', tag: 'Fraction', reason: 'a-quarter' },\n  // seven fifths\n  { match: '[#Cardinal+] (#Fraction && /s$/)', tag: 'Fraction', reason: 'seven-fifths' },\n  // doc.match('(#Fraction && /s$/)').lookBefore('#Cardinal+$').tag('Fraction')\n  // one third of ..\n  { match: '[#Cardinal+ #Ordinal] of .', group: 0, tag: 'Fraction', reason: 'ordinal-of' },\n  // 100th of\n  { match: '[(#NumericValue && #Ordinal)] of .', group: 0, tag: 'Fraction', reason: 'num-ordinal-of' },\n  // a twenty fifth\n  { match: '(a|one) #Cardinal?+ #Ordinal', tag: 'Fraction', reason: 'a-ordinal' },\n\n  // //  '3 out of 5'\n  { match: '#Cardinal+ out? of every? #Cardinal', tag: 'Fraction', reason: 'out-of' },\n]\n\n// {match:'', tag:'',reason:''},\n","export default [\n  // ==== Ambiguous numbers ====\n  // 'second'\n  { match: `#Cardinal [second]`, tag: 'Unit', reason: 'one-second' },\n  //'a/an' can mean 1 - \"a hour\"\n  {\n    match: '!once? [(a|an)] (#Duration|hundred|thousand|million|billion|trillion)',\n    group: 0,\n    tag: 'Value',\n    reason: 'a-is-one',\n  },\n  // ==== PhoneNumber ====\n  //1 800 ...\n  { match: '1 #Value #PhoneNumber', tag: 'PhoneNumber', reason: '1-800-Value' },\n  //(454) 232-9873\n  { match: '#NumericValue #PhoneNumber', tag: 'PhoneNumber', reason: '(800) PhoneNumber' },\n\n  // ==== Currency ====\n  // chinese yuan\n  { match: '#Demonym #Currency', tag: 'Currency', reason: 'demonym-currency' },\n  // ten bucks\n  { match: '#Value [(buck|bucks|grand)]', group: 0, tag: 'Currency', reason: 'value-bucks' },\n  // ==== Money ====\n  { match: '[#Value+] #Currency', group: 0, tag: 'Money', reason: '15 usd' },\n\n  // ==== Ordinal ====\n  { match: '[second] #Noun', group: 0, tag: 'Ordinal', reason: 'second-noun' },\n\n  // ==== Units ====\n  //5 yan\n  { match: '#Value+ [#Currency]', group: 0, tag: 'Unit', reason: '5-yan' },\n  { match: '#Value [(foot|feet)]', group: 0, tag: 'Unit', reason: 'foot-unit' },\n  //5 kg.\n  { match: '#Value [#Abbreviation]', group: 0, tag: 'Unit', reason: 'value-abbr' },\n  { match: '#Value [k]', group: 0, tag: 'Unit', reason: 'value-k' },\n  { match: '#Unit an hour', tag: 'Unit', reason: 'unit-an-hour' },\n\n  // ==== Magnitudes ====\n  //minus 7\n  { match: '(minus|negative) #Value', tag: 'Value', reason: 'minus-value' },\n  //seven point five\n  { match: '#Value (point|decimal) #Value', tag: 'Value', reason: 'value-point-value' },\n  //quarter million\n  { match: '#Determiner [(half|quarter)] #Ordinal', group: 0, tag: 'Value', reason: 'half-ordinal' },\n  // thousand and two\n  { match: `#Multiple+ and #Value`, tag: 'Value', reason: 'magnitude-and-value' },\n  // ambiguous units like 'gb'\n  // { match: '#Value square? [(kb|mb|gb|tb|ml|pt|qt|tbl|tbsp|km|cm|mm|mi|ft|yd|kg|hg|mg|oz|lb|mph|pa|miles|yard|yards|pound|pounds)]', group: 0, tag: 'Unit', reason: '12-gb' },\n  // 5 miles per hour\n  { match: '#Value #Unit [(per|an) (hr|hour|sec|second|min|minute)]', group: 0, tag: 'Unit', reason: '12-miles-per-second' },\n  // 5 square miles\n  { match: '#Value [(square|cubic)] #Unit', group: 0, tag: 'Unit', reason: 'square-miles' },\n]\n","export default [\n  // ==== FirstNames ====\n  //is foo Smith\n  { match: '#Copula [(#Noun|#PresentTense)] #LastName', group: 0, tag: 'FirstName', reason: 'copula-noun-lastname' },\n  //pope francis\n  { match: '(sister|pope|brother|father|aunt|uncle|grandpa|grandfather|grandma) #ProperNoun', tag: 'Person', reason: 'lady-titlecase', safe: true },\n\n  // ==== Nickname ====\n  // Dwayne 'the rock' Johnson\n  { match: '#FirstName [#Determiner #Noun] #LastName', group: 0, tag: 'Person', reason: 'first-noun-last' },\n  {\n    match: '#ProperNoun (b|c|d|e|f|g|h|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z) #ProperNoun',\n    tag: 'Person',\n    reason: 'titlecase-acronym-titlecase',\n    safe: true,\n  },\n  { match: '#Acronym #LastName', tag: 'Person', reason: 'acronym-lastname', safe: true },\n  { match: '#Person (jr|sr|md)', tag: 'Person', reason: 'person-honorific' },\n  //remove single 'mr'\n  { match: '#Honorific #Acronym', tag: 'Person', reason: 'Honorific-TitleCase' },\n  { match: '#Person #Person the? #RomanNumeral', tag: 'Person', reason: 'roman-numeral' },\n  { match: '#FirstName [/^[^aiurck]$/]', group: 0, tag: ['Acronym', 'Person'], reason: 'john-e' },\n  //j.k Rowling\n  { match: '#Noun van der? #Noun', tag: 'Person', reason: 'van der noun', safe: true },\n  //king of spain\n  { match: '(king|queen|prince|saint|lady) of #Noun', tag: 'Person', reason: 'king-of-noun', safe: true },\n  //lady Florence\n  { match: '(prince|lady) #Place', tag: 'Person', reason: 'lady-place' },\n  //saint Foo\n  { match: '(king|queen|prince|saint) #ProperNoun', tag: 'Person', reason: 'saint-foo' },\n\n  // al sharpton\n  { match: 'al (#Person|#ProperNoun)', tag: 'Person', reason: 'al-borlen', safe: true },\n  //ferdinand de almar\n  { match: '#FirstName de #Noun', tag: 'Person', reason: 'bill-de-noun' },\n  //Osama bin Laden\n  { match: '#FirstName (bin|al) #Noun', tag: 'Person', reason: 'bill-al-noun' },\n  //John L. Foo\n  { match: '#FirstName #Acronym #ProperNoun', tag: 'Person', reason: 'bill-acronym-title' },\n  //Andrew Lloyd Webber\n  { match: '#FirstName #FirstName #ProperNoun', tag: 'Person', reason: 'bill-firstname-title' },\n  //Mr Foo\n  { match: '#Honorific #FirstName? #ProperNoun', tag: 'Person', reason: 'dr-john-Title' },\n  //peter the great\n  { match: '#FirstName the #Adjective', tag: 'Person', reason: 'name-the-great' },\n\n  // dick van dyke\n  { match: '#ProperNoun (van|al|bin) #ProperNoun', tag: 'Person', reason: 'title-van-title', safe: true },\n  //jose de Sucre\n  { match: '#ProperNoun (de|du) la? #ProperNoun', tag: 'Person', reason: 'title-de-title' },\n  //Jani K. Smith\n  { match: '#Singular #Acronym #LastName', tag: '#FirstName #Person .', reason: 'title-acro-noun', safe: true },\n  //Foo Ford\n  { match: '[#ProperNoun] #Person', group: 0, tag: 'Person', reason: 'proper-person', safe: true },\n  // john keith jones\n  { match: '#Person [#ProperNoun #ProperNoun]', group: 0, tag: 'Person', notIf: '#Possessive', reason: 'three-name-person', safe: true },\n  //John Foo\n  { match: '#FirstName #Acronym? [#ProperNoun]', group: 0, tag: 'LastName', notIf: '#Possessive', reason: 'firstname-titlecase' },\n  // john stewart\n  { match: '#FirstName [#FirstName]', group: 0, tag: 'LastName', reason: 'firstname-firstname' },\n  //Joe K. Sombrero\n  { match: '#FirstName #Acronym #Noun', tag: 'Person', reason: 'n-acro-noun', safe: true },\n  //Anthony de Marco\n  { match: '#FirstName [(de|di|du|van|von)] #Person', group: 0, tag: 'LastName', reason: 'de-firstname' },\n\n  // ==== Honorics ====\n  { match: '[(private|general|major|rear|prime|field|count|miss)] #Honorific? #Person', group: 0, tag: 'Honorific', reason: 'ambg-honorifics' },\n  // dr john foobar\n  { match: '#Honorific #FirstName [#Singular]', group: 0, tag: 'LastName', notIf: '#Possessive', reason: 'dr-john-foo', safe: true },\n  //his-excellency\n  { match: '[(his|her) (majesty|honour|worship|excellency|honorable)] #Person', group: 0, tag: 'Honorific', reason: 'his-excellency' },\n  // Lieutenant colonel\n  { match: '%Honorific|Noun% %Honorific|Noun%', tag: 'Honorific', reason: 'Lieutenant colonel' },\n  // first lady, second admiral\n  { match: '(first|second|third|1st|2nd|3rd) %Honorific|Noun%', tag: 'Honorific', reason: 'first lady' },\n]\n","export default [\n  //sometimes adverbs - 'pretty good','well above'\n  {\n    match: '#Copula (pretty|dead|full|well|sure) (#Adjective|#Noun)',\n    tag: '#Copula #Adverb #Adjective',\n    reason: 'sometimes-adverb',\n  },\n  //i better ..\n  { match: '(#Pronoun|#Person) (had|#Adverb)? [better] #PresentTense', group: 0, tag: 'Modal', reason: 'i-better' },\n  // adj -> gerund\n  // like\n  { match: '(#Modal|i|they|we|do) not? [like]', group: 0, tag: 'PresentTense', reason: 'modal-like' },\n  // ==== Tense ====\n  //he left\n  { match: '#Noun #Adverb? [left]', group: 0, tag: 'PastTense', reason: 'left-verb' },\n\n  // ==== Copula ====\n  //will be running (not copula)\n  { match: 'will #Adverb? not? #Adverb? [be] #Gerund', group: 0, tag: 'Copula', reason: 'will-be-copula' },\n  //for more complex forms, just tag 'be'\n  { match: 'will #Adverb? not? #Adverb? [be] #Adjective', group: 0, tag: 'Copula', reason: 'be-copula' },\n  // ==== Infinitive ====\n  //march to\n  { match: '[march] (up|down|back|toward)', notIf: '#Date', group: 0, tag: 'Infinitive', reason: 'march-to' },\n  //must march\n  { match: '#Modal [march]', group: 0, tag: 'Infinitive', reason: 'must-march' },\n  // may be\n  { match: `[may] be`, group: 0, tag: 'Verb', reason: 'may-be' },\n  // subject to\n  { match: `[(subject|subjects|subjected)] to`, group: 0, tag: 'Verb', reason: 'subject to' },\n  // subject to\n  { match: `[home] to`, group: 0, tag: 'PresentTense', reason: 'home to' },\n\n  // === misc==\n  // side with\n  // { match: '[(side|fool|monkey)] with', group: 0, tag: 'Infinitive', reason: 'fool-with' },\n  // open the door\n  { match: '[open] #Determiner', group: 0, tag: 'Infinitive', reason: 'open-the' },\n  //were being run\n  { match: `(were|was) being [#PresentTense]`, group: 0, tag: 'PastTense', reason: 'was-being' },\n  //had been broken\n  { match: `(had|has|have) [been /en$/]`, group: 0, tag: 'Auxiliary Participle', reason: 'had-been-broken' },\n  //had been smoked\n  { match: `(had|has|have) [been /ed$/]`, group: 0, tag: 'Auxiliary PastTense', reason: 'had-been-smoked' },\n  //were being run\n  { match: `(had|has) #Adverb? [been] #Adverb? #PastTense`, group: 0, tag: 'Auxiliary', reason: 'had-been-adj' },\n  //had to walk\n  { match: `(had|has) to [#Noun] (#Determiner|#Possessive)`, group: 0, tag: 'Infinitive', reason: 'had-to-noun' },\n  // have read\n  { match: `have [#PresentTense]`, group: 0, tag: 'PastTense', notIf: '(come|gotten)', reason: 'have-read' },\n  // does that work\n  { match: `(does|will|#Modal) that [work]`, group: 0, tag: 'PastTense', reason: 'does-that-work' },\n  // sounds fun\n  { match: `[(sound|sounds)] #Adjective`, group: 0, tag: 'PresentTense', reason: 'sounds-fun' },\n  // look good\n  { match: `[(look|looks)] #Adjective`, group: 0, tag: 'PresentTense', reason: 'looks-good' },\n  // needs to learn\n  { match: `[(need|needs)] to #Infinitive`, group: 0, tag: 'PresentTense', reason: 'need-to-learn' },\n  // stops thinking\n  { match: `[(start|starts|stop|stops|begin|begins)] #Gerund`, group: 0, tag: 'Verb', reason: 'starts-thinking' },\n  //were under cooked\n  {\n    match: `(is|was|were) [(under|over) #PastTense]`,\n    group: 0,\n    tag: 'Adverb Adjective',\n    reason: 'was-under-cooked',\n  },\n\n  // damn them\n  { match: '[shit] (#Determiner|#Possessive|them)', group: 0, tag: 'Verb', reason: 'swear1-verb' },\n  { match: '[damn] (#Determiner|#Possessive|them)', group: 0, tag: 'Verb', reason: 'swear2-verb' },\n  { match: '[fuck] (#Determiner|#Possessive|them)', group: 0, tag: 'Verb', reason: 'swear3-verb' },\n\n  // jobs that fit\n  { match: '#Plural that %Noun|Verb%', tag: '. #Preposition #Infinitive', reason: 'jobs-that-work' },\n  // works for me\n  { match: '[works] for me', group: 0, tag: 'PresentTense', reason: 'works-for-me' },\n  // no no no\n  // { match: 'no+', tag: 'Expression', reason: 'no-no' },\n\n  // as we please\n  { match: 'as #Pronoun [please]', group: 0, tag: 'Infinitive', reason: 'as-we-please' },\n\n  // verb-prefixes - 'co write'\n  { match: '[(co|mis|de|inter|intra|pre|re|un|out|under|over|counter)] #Verb', group: 0, tag: ['Verb', 'Prefix'], notIf: '(#Copula|#PhrasalVerb)', reason: 'co-write' },\n\n]\n","export default [\n  // amusing his aunt\n  // { match: '[#Adjective] #Possessive #Noun', group: 0, tag: 'Verb', reason: 'gerund-his-noun' },\n  // loving you\n  // { match: '[#Adjective] (us|you)', group: 0, tag: 'Gerund', reason: 'loving-you' },\n  // slowly stunning\n  { match: '(slowly|quickly) [#Adjective]', group: 0, tag: 'Verb', reason: 'slowly-adj' },\n  // does mean\n  { match: 'does (#Adverb|not)? [#Adjective]', group: 0, tag: 'PresentTense', reason: 'does-mean' },\n  // okay by me\n  { match: '[(fine|okay|cool|ok)] by me', group: 0, tag: 'Adjective', reason: 'okay-by-me' },\n  // i mean\n  { match: 'i (#Adverb|do)? not? [mean]', group: 0, tag: 'PresentTense', reason: 'i-mean' },\n  //will secure our\n  { match: 'will #Adjective', tag: 'Auxiliary Infinitive', reason: 'will-adj' },\n  //he disguised the thing\n  { match: '#Pronoun [#Adjective] #Determiner #Adjective? #Noun', group: 0, tag: 'Verb', reason: 'he-adj-the' },\n  //is eager to go\n  { match: '#Copula [%Adj|Present%] to #Verb', group: 0, tag: 'Verb', reason: 'adj-to' },\n  // rude and insulting\n  { match: '#Adjective and [#Gerund] !#Preposition?', group: 0, tag: 'Adjective', reason: 'rude-and-x' },\n  // were over cooked\n  { match: '#Copula #Adverb? (over|under) [#PastTense]', group: 0, tag: 'Adjective', reason: 'over-cooked' },\n  // was bland and overcooked\n  { match: '#Copula #Adjective+ (and|or) [#PastTense]$', group: 0, tag: 'Adjective', reason: 'bland-and-overcooked' },\n  // got tired of\n  { match: 'got #Adverb? [#PastTense] of', group: 0, tag: 'Adjective', reason: 'got-tired-of' },\n  //felt loved\n  { match: '(seem|seems|seemed|appear|appeared|appears|feel|feels|felt|sound|sounds|sounded) (#Adverb|#Adjective)? [#PastTense]', group: 0, tag: 'Adjective', reason: 'felt-loved' },\n  // seem confused\n  { match: '(seem|feel|seemed|felt) [#PastTense]', group: 0, tag: 'Adjective', reason: 'seem-confused' },\n  // a bit confused\n  { match: 'a (bit|little|tad) [#PastTense]', group: 0, tag: 'Adjective', reason: 'a-bit-confused' },\n  // do not be embarrassed\n  { match: 'not be [%Adj|Past%]', group: 0, tag: 'Adjective', reason: 'do-not-be-confused' },\n  // as pale as\n  { match: 'as [#Infinitive] as', group: 0, tag: 'Adjective', reason: 'as-pale-as' },\n\n]\n","// these are some of our heaviest-used matches\nexport default [\n  // ==== Auxiliary ====\n  // have been\n  { match: `will (#Adverb|not)+? [have] (#Adverb|not)+? #Verb`, group: 0, tag: 'Auxiliary', reason: 'will-have-vb' },\n  //was walking\n  { match: `[#Copula] (#Adverb|not)+? (#Gerund|#PastTense)`, group: 0, tag: 'Auxiliary', reason: 'copula-walking' },\n  //would walk\n  { match: `#Adverb+? [(#Modal|did)+] (#Adverb|not)+? #Verb`, group: 0, tag: 'Auxiliary', reason: 'modal-verb' },\n  //would have had\n  { match: `#Modal (#Adverb|not)+? [have] (#Adverb|not)+? [had] (#Adverb|not)+? #Verb`, group: 0, tag: 'Auxiliary', reason: 'would-have' },\n  //support a splattering of auxillaries before a verb\n  { match: `[(has|had)] (#Adverb|not)+? #PastTense`, group: 0, tag: 'Auxiliary', reason: 'had-walked' },\n  // will walk\n  { match: '[(do|does|did|will|have|had|has|got)] (not|#Adverb)+? #Verb', group: 0, tag: 'Auxiliary', reason: 'have-had' },\n  // about to go\n  { match: '[about to] #Adverb? #Verb', group: 0, tag: ['Auxiliary', 'Verb'], reason: 'about-to' },\n  //would be walking\n  { match: `#Modal (#Adverb|not)+? [be] (#Adverb|not)+? #Verb`, group: 0, tag: 'Auxiliary', reason: 'would-be' },\n  //had been walking\n  { match: `[(#Modal|had|has)] (#Adverb|not)+? [been] (#Adverb|not)+? #Verb`, group: 0, tag: 'Auxiliary', reason: 'had-been' },\n  // was being driven\n  { match: '[(be|being|been)] #Participle', group: 0, tag: 'Auxiliary', reason: 'being-driven' },\n  // may want\n  { match: '[may] #Adverb? #Infinitive', group: 0, tag: 'Auxiliary', reason: 'may-want' },\n  // was being walked\n  { match: '#Copula (#Adverb|not)+? [(be|being|been)] #Adverb+? #PastTense', group: 0, tag: 'Auxiliary', reason: 'being-walked' },\n  // will be walked\n  { match: 'will [be] #PastTense', group: 0, tag: 'Auxiliary', reason: 'will-be-x' },\n  // been walking\n  { match: '[(be|been)] (#Adverb|not)+? #Gerund', group: 0, tag: 'Auxiliary', reason: 'been-walking' },\n  // used to walk\n  { match: '[used to] #PresentTense', group: 0, tag: 'Auxiliary', reason: 'used-to-walk' },\n  // was going to walk\n  { match: '#Copula (#Adverb|not)+? [going to] #Adverb+? #PresentTense', group: 0, tag: 'Auxiliary', reason: 'going-to-walk' },\n  // tell me\n  { match: '#Imperative [(me|him|her)]', group: 0, tag: 'Reflexive', reason: 'tell-him' },\n  // there is no x\n  { match: '(is|was) #Adverb? [no]', group: 0, tag: 'Negative', reason: 'is-no' },\n]\n","export default [\n  // ==== Phrasal ====\n  //'foo-up'\n  { match: '(#Verb && @hasHyphen) up', tag: 'PhrasalVerb', reason: 'foo-up' },\n  { match: '(#Verb && @hasHyphen) off', tag: 'PhrasalVerb', reason: 'foo-off' },\n  { match: '(#Verb && @hasHyphen) over', tag: 'PhrasalVerb', reason: 'foo-over' },\n  { match: '(#Verb && @hasHyphen) out', tag: 'PhrasalVerb', reason: 'foo-out' },\n  // walk in on\n  {\n    match: '[#Verb (in|out|up|down|off|back)] (on|in)',\n    notIf: '#Copula',\n    tag: 'PhrasalVerb Particle',\n    reason: 'walk-in-on',\n  },\n  //fall over\n  { match: '#PhrasalVerb [#PhrasalVerb]', group: 0, tag: 'Particle', reason: 'phrasal-particle' },\n  // went on for\n  { match: '(lived|went|crept|go) [on] for', group: 0, tag: 'PhrasalVerb', reason: 'went-on' },\n  // got me thinking\n  // { match: '(got|had) me [#Noun]', group: 0, tag: 'Verb', reason: 'got-me-gerund' },\n  // help stop\n  { match: 'help [(stop|end|make|start)]', group: 0, tag: 'Infinitive', reason: 'help-stop' },\n  // start listening\n  { match: '[(stop|start|finish|help)] #Gerund', group: 0, tag: 'Infinitive', reason: 'start-listening' },\n  // mis-fired\n  // { match: '[(mis)] #Verb', group: 0, tag: 'Verb', reason: 'mis-firedsa' },\n  //back it up\n  {\n    match: '#Verb (him|her|it|us|himself|herself|itself|everything|something) [(up|down)]',\n    group: 0,\n    tag: 'Adverb',\n    reason: 'phrasal-pronoun-advb',\n  },\n]\n","export default [\n  // that were growing\n  { match: '(that|which) were [%Adj|Gerund%]', group: 0, tag: 'Gerund', reason: 'that-were-growing' },\n\n\n  // repairing crubling roads\n  { match: '#Gerund [#Gerund] #Plural', group: 0, tag: 'Adjective', reason: 'hard-working-fam' },\n\n\n  // { match: '(that|which) were [%Adj|Gerund%]', group: 0, tag: 'Gerund', reason: 'that-were-growing' },\n\n]","// order matters\nlet matches = [\n  // u r cool\n  { match: 'u r', tag: '#Pronoun #Copula', reason: 'u r' },\n  { match: '#Noun [(who|whom)]', group: 0, tag: 'Determiner', reason: 'captain-who' },\n\n  // ==== Conditions ====\n  // had he survived,\n  { match: '[had] #Noun+ #PastTense', group: 0, tag: 'Condition', reason: 'had-he' },\n  // were he to survive\n  { match: '[were] #Noun+ to #Infinitive', group: 0, tag: 'Condition', reason: 'were-he' },\n\n  //swear-words as non-expression POS\n  { match: 'holy (shit|fuck|hell)', tag: 'Expression', reason: 'swears-expression' },\n  // well..\n  { match: '^(well|so|okay|now)', tag: 'Expression', reason: 'well-' },\n  // some sort of\n  { match: 'some sort of', tag: 'Adjective Noun Conjunction', reason: 'some-sort-of' },\n  // some of\n  // { match: 'some of', tag: 'Noun Conjunction', reason: 'some-of' },\n  // of some sort\n  { match: 'of some sort', tag: 'Conjunction Adjective Noun', reason: 'of-some-sort' },\n\n  // such skill\n  { match: '[such] (a|an|is)? #Noun', group: 0, tag: 'Determiner', reason: 'such-skill' },\n  // that is\n  // { match: '^[that] (is|was)', group: 0, tag: 'Noun', reason: 'that-is' },\n\n  // sorry\n  { match: '(say|says|said) [sorry]', group: 0, tag: 'Expression', reason: 'say-sorry' },\n  // ok,\n  { match: '^(ok|alright|well|shoot|hell|anyways)', tag: 'Expression', reason: 'ok-' },\n  // c'mon marge..\n  { match: '^[come on] #Noun', group: 0, tag: 'Expression', reason: 'come-on' },\n  // say,\n  { match: '^(say && @hasComma)', tag: 'Expression', reason: 'say-' },\n  { match: '^(like && @hasComma)', tag: 'Expression', reason: 'like-' },\n\n  // right after\n  { match: '[right] (before|after|in|into|to|toward)', group: 0, tag: '#Adverb', reason: 'right-into' },\n  // at about\n  { match: '#Preposition [about]', group: 0, tag: 'Adjective', reason: 'at-about' },\n  // dude we should\n  { match: '^[(dude|man|girl)] #Pronoun', group: 0, tag: 'Expression', reason: 'dude-i' },\n  // are ya\n  { match: '(are|#Modal|see|do|for) [ya]', group: 0, tag: 'Pronoun', reason: 'are-ya' },\n\n  // 'there' as adjective\n  { match: '(always|nearly|barely|practically) [there]', group: 0, tag: 'Adjective', reason: 'always-there' },\n  // existential 'there'\n  // there she is\n  { match: '[there] (#Adverb|#Pronoun)? #Copula', group: 0, tag: 'There', reason: 'there-is' },\n  // is there food\n  { match: '#Copula [there] .', group: 0, tag: 'There', reason: 'is-there' },\n  // should there\n  { match: '#Modal #Adverb? [there]', group: 0, tag: 'There', reason: 'should-there' },\n]\nexport default matches\n","// import orgWords from './_orgWords.js'\n// let orgMap = `(${orgWords.join('|')})`\n\n/*\nconst multi = [\n  'building society',\n  'central bank',\n  'department store',\n  'institute of technology',\n  'liberation army',\n  'people party',\n  'social club',\n  'state police',\n  'state university',\n]\n*/\n\nexport default [\n  // Foo University\n  // { match: `#Noun ${orgMap}`, tag: 'Organization', safe: true, reason: 'foo-university' },\n  // // University of Toronto\n  // { match: `${orgMap} of #Place`, tag: 'Organization', safe: true, reason: 'university-of-foo' },\n\n  // // foo regional health authority\n  // { match: `${orgMap} (health|local|regional)+ authority`, tag: 'Organization', reason: 'regional-health' },\n  // // foo stock exchange\n  // { match: `${orgMap} (stock|mergantile)+ exchange`, tag: 'Organization', reason: 'stock-exchange' },\n  // // foo news service\n  // { match: `${orgMap} (daily|evening|local)+ news service?`, tag: 'Organization', reason: 'foo-news' },\n\n  //John & Joe's\n  { match: '#Noun (&|n) #Noun', tag: 'Organization', reason: 'Noun-&-Noun' },\n  // teachers union of Ontario\n  { match: '#Organization of the? #ProperNoun', tag: 'Organization', reason: 'org-of-place', safe: true },\n  //walmart USA\n  { match: '#Organization #Country', tag: 'Organization', reason: 'org-country' },\n  //organization\n  { match: '#ProperNoun #Organization', tag: 'Organization', reason: 'titlecase-org' },\n  //FitBit Inc\n  { match: '#ProperNoun (ltd|co|inc|dept|assn|bros)', tag: 'Organization', reason: 'org-abbrv' },\n  // the OCED\n  { match: 'the [#Acronym]', group: 0, tag: 'Organization', reason: 'the-acronym', safe: true },\n  // global trade union\n  {\n    match: '(world|global|international|national|#Demonym) #Organization',\n    tag: 'Organization',\n    reason: 'global-org',\n  },\n  // schools\n  { match: '#Noun+ (public|private) school', tag: 'School', reason: 'noun-public-school' },\n]\n","export default [\n  // ==== Region ====\n  //West Norforlk\n  {\n    match: '(west|north|south|east|western|northern|southern|eastern)+ #Place',\n    tag: 'Region',\n    reason: 'west-norfolk',\n  },\n  //some us-state acronyms (exlude: al, in, la, mo, hi, me, md, ok..)\n  {\n    match: '#City [(al|ak|az|ar|ca|ct|dc|fl|ga|id|il|nv|nh|nj|ny|oh|pa|sc|tn|tx|ut|vt|pr)]',\n    group: 0,\n    tag: 'Region',\n    reason: 'us-state',\n  },\n  // portland oregon\n  {\n    match: 'portland [or]',\n    group: 0,\n    tag: 'Region',\n    reason: 'portland-or',\n  },\n  //Foo District\n  {\n    match: '#ProperNoun+ (district|region|province|county|prefecture|municipality|territory|burough|reservation)',\n    tag: 'Region',\n    reason: 'foo-district',\n  },\n  //District of Foo\n  {\n    match: '(district|region|province|municipality|territory|burough|state) of #ProperNoun',\n    tag: 'Region',\n    reason: 'district-of-Foo',\n  },\n  // in Foo California\n  {\n    match: 'in [#ProperNoun] #Place',\n    group: 0,\n    tag: 'Place',\n    reason: 'propernoun-place',\n  },\n  // ==== Address ====\n  {\n    match: '#Value #Noun (st|street|rd|road|crescent|cr|way|tr|terrace|avenue|ave)',\n    tag: 'Address',\n    reason: 'address-st',\n  },\n]\n","export default [\n  // ==== Conjunctions ====\n  { match: '[so] #Noun', group: 0, tag: 'Conjunction', reason: 'so-conj' },\n  //how he is driving\n  {\n    match: '[(who|what|where|why|how|when)] #Noun #Copula #Adverb? (#Verb|#Adjective)',\n    group: 0,\n    tag: 'Conjunction',\n    reason: 'how-he-is-x',\n  },\n  // when he\n  { match: '#Copula [(who|what|where|why|how|when)] #Noun', group: 0, tag: 'Conjunction', reason: 'when-he' },\n  // says that he..\n  { match: '#Verb [that] #Pronoun', group: 0, tag: 'Conjunction', reason: 'said-that-he' },\n  // things that are required\n  { match: '#Noun [that] #Copula', group: 0, tag: 'Conjunction', reason: 'that-are' },\n  // things that seem cool\n  { match: '#Noun [that] #Verb #Adjective', group: 0, tag: 'Conjunction', reason: 'that-seem' },\n  // wasn't that wide..\n  { match: '#Noun #Copula not? [that] #Adjective', group: 0, tag: 'Adverb', reason: 'that-adj' },\n\n  // ==== Prepositions ====\n  //all students\n  { match: '#Verb #Adverb? #Noun [(that|which)]', group: 0, tag: 'Preposition', reason: 'that-prep' },\n  //work, which has been done.\n  { match: '@hasComma [which] (#Pronoun|#Verb)', group: 0, tag: 'Preposition', reason: 'which-copula' },\n  //folks like her\n  { match: '#Noun [like] #Noun', group: 0, tag: 'Preposition', reason: 'noun-like' },\n  //like the time\n  { match: '^[like] #Determiner', group: 0, tag: 'Preposition', reason: 'like-the' },\n  //a day like this\n  { match: 'a #Noun [like] (#Noun|#Determiner)', group: 0, tag: 'Preposition', reason: 'a-noun-like' },\n  // really like\n  { match: '#Adverb [like]', group: 0, tag: 'Verb', reason: 'really-like' },\n  // nothing like\n  { match: '(not|nothing|never) [like]', group: 0, tag: 'Preposition', reason: 'nothing-like' },\n  // treat them like\n  { match: '#Verb #Pronoun [like]', group: 0, tag: 'Preposition', reason: 'treat-them-like' },\n\n\n\n\n  // ==== Questions ====\n  // where\n  // why\n  // when\n  // who\n  // whom\n  // whose\n  // what\n  // which\n  //the word 'how many'\n  // { match: '^(how|which)', tag: 'QuestionWord', reason: 'how-question' },\n  // how-he, when the\n  { match: '[#QuestionWord] (#Pronoun|#Determiner)', group: 0, tag: 'Preposition', reason: 'how-he' },\n  // when stolen\n  { match: '[#QuestionWord] #Participle', group: 0, tag: 'Preposition', reason: 'when-stolen' },\n  // how is\n  { match: '[how] (#Determiner|#Copula|#Modal|#PastTense)', group: 0, tag: 'QuestionWord', reason: 'how-is' },\n  // children who dance\n  { match: '#Plural [(who|which|when)] .', group: 0, tag: 'Preposition', reason: 'people-who' },\n]\n","let net = null\n\n// runs all match/tag patterns in model.two.matches\nconst postTagger = function (view) {\n  const { world } = view\n  const { model, methods } = world\n  net = net || methods.one.buildNet(model.two.matches, world)\n  // perform these matches on a comma-seperated document\n  let document = methods.two.quickSplit(view.document)\n  let ptrs = document.map(terms => {\n    let t = terms[0]\n    return [t.index[0], t.index[1], t.index[1] + terms.length]\n  })\n  let m = view.update(ptrs)\n  m.cache()\n  m.sweep(net)\n  view.uncache()\n  // view.cache()\n  return view\n}\n\n// helper function for compute('tagger')\nconst tagger = (view) => view.compute(['lexicon', 'preTagger', 'postTagger'])\n\nexport default { postTagger, tagger }\n","import model from './model/index.js'\nimport compute from './compute/index.js'\nimport api from './api.js'\n\n\nconst plugin = {\n  api,\n  compute,\n  model,\n  hooks: ['postTagger'],\n}\nexport default plugin\n","const round = n => Math.round(n * 100) / 100\n\nexport default function (View) {\n  // average tagger score\n  View.prototype.confidence = function () {\n    let sum = 0\n    let count = 0\n    this.docs.forEach(terms => {\n      terms.forEach(term => {\n        count += 1\n        sum += term.confidence || 1\n      })\n    })\n    if (count === 0) {\n      return 1\n    }\n    return round(sum / count)\n  }\n\n  // (re-) run the POS-tagger\n  View.prototype.tagger = function () {\n    return this.compute(['tagger'])\n  }\n}","const getWords = function (net) {\n  return Object.keys(net.hooks).filter(w => !w.startsWith('#') && !w.startsWith('%'))\n}\n\nconst maybeMatch = function (doc, net) {\n  // must have *atleast* one of these words\n  let words = getWords(net)\n  if (words.length === 0) {\n    return doc\n  }\n  if (!doc._cache) {\n    doc.cache()\n  }\n  let cache = doc._cache\n  // return sentences that have one of our needed words\n  return doc.filter((_m, i) => {\n    return words.some(str => cache[i].has(str))\n  })\n}\nexport default maybeMatch","import lazy from './lazyParse.js'\n\nexport default {\n  lib: {\n    lazy\n  }\n}","import maybeMatch from './maybeMatch.js'\n\n// tokenize first, then only tag sentences required\nconst lazyParse = function (input, reg) {\n  let net = reg\n  if (typeof reg === 'string') {\n    net = this.buildNet([{ match: reg }])\n  }\n  let doc = this.tokenize(input)\n  let m = maybeMatch(doc, net)\n  if (m.found) {\n    m.compute(['index', 'tagger'])\n    return m.match(reg)\n  }\n  return doc.none()\n}\nexport default lazyParse","const matchVerb = function (m, lemma) {\n  const conjugate = m.methods.two.transform.verb.conjugate\n  let all = conjugate(lemma, m.model)\n  if (m.has('#Gerund')) {\n    return all.Gerund\n  }\n  if (m.has('#PastTense')) {\n    return all.PastTense\n  }\n  if (m.has('#PresentTense')) {\n    return all.PresentTense\n  }\n  if (m.has('#Gerund')) {\n    return all.Gerund\n  }\n  return lemma\n}\n\nconst swapVerb = function (vb, lemma) {\n  let str = lemma\n  vb.forEach(m => {\n    if (!m.has('#Infinitive')) {\n      str = matchVerb(m, lemma)\n    }\n    m.replaceWith(str)\n  })\n  return vb\n}\nexport default swapVerb","import swapVerb from './swap-verb.js'\n\nconst swapNoun = function (m, lemma) {\n  let str = lemma\n  if (m.has('#Plural')) {\n    const toPlural = m.methods.two.transform.noun.toPlural\n    str = toPlural(lemma, m.model)\n  }\n  m.replaceWith(str)\n}\n\nconst swapAdverb = function (m, lemma) {\n  const { toAdverb } = m.methods.two.transform.adjective\n  let str = lemma\n  let adv = toAdverb(str)\n  if (adv) {\n    m.replaceWith(adv)\n  }\n}\nconst swapAdjective = function (m, lemma) {\n  const { toComparative, toSuperlative } = m.methods.two.transform.adjective\n  let str = lemma\n  if (m.has('#Comparative')) {\n    str = toComparative(str, m.model)\n  } else if (m.has('#Superlative')) {\n    str = toSuperlative(str, m.model)\n  }\n  if (str) {\n    m.replaceWith(str)\n  }\n}\n\nconst swap = function (from, to, tag) {\n  let reg = from.split(/ /g).map(str => `{${str}}`).join(' ')\n  let m = this.match(reg)\n  // guard against some homonyms\n  if (tag) {\n    m = m.if(tag)\n  }\n  if (m.has('#Verb')) {\n    return swapVerb(m, to)\n  }\n  if (m.has('#Noun')) {\n    return swapNoun(m, to)\n  }\n  if (m.has('#Adverb')) {\n    return swapAdverb(m, to)\n  }\n  if (m.has('#Adjective')) {\n    return swapAdjective(m, to)\n  }\n  return this\n}\nexport default swap","import swap from './api/swap.js'\n\nconst api = function (View) {\n  View.prototype.swap = swap\n}\n\nexport default {\n  api\n}","import nlp from './one.js'\nimport preTag from './2-two/preTagger/plugin.js'\nimport contractionTwo from './2-two/contraction-two/plugin.js'\nimport postTag from './2-two/postTagger/plugin.js'\nimport lazy from './2-two/lazy/plugin.js'\nimport swap from './2-two/swap/plugin.js'\n\nnlp.plugin(preTag) //~103kb  \nnlp.plugin(contractionTwo) //\nnlp.plugin(postTag) //~33kb\nnlp.plugin(lazy) //\nnlp.plugin(swap) //\n\nexport default nlp\n","const byComma = function (doc) {\n  let commas = doc.match('@hasComma')\n  // remove any non-clause uses\n  commas = commas.filter(m => {\n    // don't split the first word\n    if (m.growLeft('.').wordCount() === 1) {\n      return false\n    }\n    // don't split the last word\n    if (m.growRight('. .').wordCount() === 1) {\n      return false\n    }\n    let more = m.grow(\".\") // grow by 1 word in either direction\n    more = more.ifNo('@hasComma @hasComma') //fun, cool...\n    more = more.ifNo('@hasComma (and|or) .') //cool, and fun\n    more = more.ifNo('(#City && @hasComma) #Country') //'toronto, canada'\n    more = more.ifNo('(#WeekDay && @hasComma) #Date') //'tuesday, march 2nd'\n    more = more.ifNo('(#Date+ && @hasComma) #Value') //'july 6, 1992'\n    // more = more.ifNo('@hasComma (too|also)$') //at end of sentence\n    return more.found\n  })\n  return doc.splitAfter(commas)\n}\n\n// should we split-out a clause (in brackets)?\nconst splitParentheses = function (doc) {\n  let matches = doc.parentheses()\n  matches = matches.filter(m => {\n    return m.wordCount() >= 3 && m.has('#Verb') && m.has('#Noun')\n  })\n  return doc.splitOn(matches)\n}\n\n// split-out a long quotion, but not 'inline quotes'.\nconst splitQuotes = function (doc) {\n  let matches = doc.quotations()\n  matches = matches.filter(m => {\n    return m.wordCount() >= 3 && m.has('#Verb') && m.has('#Noun')\n  })\n  return doc.splitOn(matches)\n}\n\nconst clauses = function (n) {\n  let found = this\n\n  found = splitParentheses(found)\n  found = splitQuotes(found)\n\n  found = byComma(found)\n\n  found = found.splitAfter('(@hasEllipses|@hasSemicolon|@hasDash|@hasColon)')\n\n  // i said\n  found = found.splitAfter('^#Pronoun (said|says)')\n  // ... said John.\n  found = found.splitBefore('(said|says) #ProperNoun$')\n\n  // ... if it was\n  found = found.splitBefore('. . if .{4}')\n\n  // various conjunctions\n  found = found.splitBefore('and while')\n  found = found.splitBefore('now that')\n  found = found.splitBefore('ever since')\n  found = found.splitBefore('(supposing|although)')\n  found = found.splitBefore('even (while|if|though)')\n  found = found.splitBefore('(whereas|whose)')\n  // found = found.splitBefore('as (far|long|much|soon) as')\n  found = found.splitBefore('as (though|if)')\n  found = found.splitBefore('(til|until)')\n\n  // it is cool and it is ..\n  // let conjunctions = found.if('#Copula #Adjective #Conjunction (#Pronoun|#Determiner) #Verb').match('#Conjunction')\n  // found = found.splitBefore(conjunctions)\n\n  // // if it is this then that\n  // let condition = found.if('if .{2,9} then .').match('then')\n  // found = found.splitBefore(condition)\n\n  // // misc clause partitions\n  // found = found.splitBefore('as well as .')\n  // found = found.splitBefore('such as .')\n  // found = found.splitBefore('in addition to .')\n\n  // // semicolons, dashes\n  // found = found.splitAfter('@hasSemicolon')\n  // found = found.splitAfter('@hasDash')\n\n  // // \n  // found = found.splitBefore('which (were|are|will)')\n\n  // // he said [...]\n  // found = found.splitAfter('#Noun (said|say|says)')\n\n\n\n  // passive voice verb - '.. which was robbed is empty'\n  // let passive = found.match('#Noun (which|that) (was|is) #Adverb? #PastTense #Adverb?')\n  // if (passive.found) {\n  //   found = found.splitAfter(passive)\n  // }\n  // //which the boy robbed\n  // passive = found.match('#Noun (which|that) the? #Noun+ #Adverb? #PastTense #Adverb?')\n  // if (passive.found) {\n  //   found = found.splitAfter(passive)\n  // }\n  // does there appear to have relative/subordinate clause still?\n  // let tooLong = found.filter(d => d.wordCount() > 5 && d.match('#Verb+').length >= 2)\n  // if (tooLong.found) {\n  //   // and after the ..\n  //   found = found.splitBefore('#Conjunction #Preposition')\n\n  //   // let m = tooLong.splitAfter('#Noun .* #Verb .* #Noun+')\n  //   // found = found.splitOn(m.eq(0))\n  // }\n  if (typeof n === 'number') {\n    found = found.get(n)\n  }\n  return found\n}\n\nexport default clauses\n","const byWord = {\n  this: 'Noun',\n  then: 'Pivot'\n}\n\n// simply chunk Nouns as <Noun>\nconst easyMode = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t]\n\n      if (byWord.hasOwnProperty(term.normal) === true) {\n        term.chunk = byWord[term.normal]\n        continue\n      }\n      if (term.tags.has('Verb')) {\n        term.chunk = 'Verb'\n        continue\n      }\n      if (term.tags.has('Noun') || term.tags.has('Determiner')) {\n        term.chunk = 'Noun'\n        continue\n      }\n      // 100 cats\n      if (term.tags.has('Value')) {\n        term.chunk = 'Noun'\n        continue\n      }\n      //\n      if (term.tags.has('QuestionWord')) {\n        term.chunk = 'Pivot'\n        continue\n      }\n\n    }\n  }\n}\nexport default easyMode\n","const rules = [\n  // === Conjunction ===\n  // that the houses\n  { match: '[that] #Determiner #Noun', group: 0, chunk: 'Pivot' },\n  // estimated that\n  { match: '#PastTense [that]', group: 0, chunk: 'Pivot' },\n  // so the\n  { match: '[so] #Determiner', group: 0, chunk: 'Pivot' },\n\n  // === Adjective ===\n  // was really nice\n  { match: '#Copula #Adverb+? [#Adjective]', group: 0, chunk: 'Adjective' },\n  // was nice\n  // { match: '#Copula [#Adjective]', group: 0, chunk: 'Adjective' },\n  // nice and cool\n  { match: '#Adjective and #Adjective', chunk: 'Adjective' },\n  // really nice\n  // { match: '#Adverb+ #Adjective', chunk: 'Adjective' },\n\n  // === Verb ===\n  // quickly run\n  // { match: '#Adverb+ {Verb}', chunk: 'Verb' },\n  // quickly and suddenly run\n  { match: '#Adverb+ and #Adverb #Verb', chunk: 'Verb' },\n  // run quickly\n  // { match: '{Verb} #Adverb+', chunk: 'Verb' },\n  // sitting near\n  { match: '#Gerund #Adjective', chunk: 'Verb' },\n  // going to walk\n  { match: '#Gerund to #Verb', chunk: 'Verb' },\n  // is no\n  // { match: '#Copula no', chunk: 'Verb' },\n  // had not\n  // { match: '#Verb #Negative', chunk: 'Verb' },\n  // not seen\n  // { match: '#Negative #Verb', chunk: 'Verb' },\n  // not really\n  // { match: '#Negative #Adverb ', chunk: 'Verb' },\n  // come and have a drink\n  { match: '#PresentTense and #PresentTense', chunk: 'Verb' },\n  // really not\n  { match: '#Adverb #Negative', chunk: 'Verb' },\n  // want to see\n  { match: '(want|wants|wanted) to #Infinitive', chunk: 'Verb' },\n  // walk ourselves\n  { match: '#Verb #Reflexive', chunk: 'Verb' },\n  // tell him the story\n  { match: '#PresentTense [#Pronoun] #Determiner', group: 0, chunk: 'Verb' },\n  // tries to walk\n  { match: '#Verb [to] #Adverb? #Infinitive', group: 0, chunk: 'Verb' },\n  // upon seeing\n  { match: '[#Preposition] #Gerund', group: 0, chunk: 'Verb' },\n\n  // === Noun ===\n  // the brown fox\n  // { match: '#Determiner #Adjective+ #Noun', chunk: 'Noun' },\n  // the fox\n  // { match: '(the|this) <Noun>', chunk: 'Noun' },\n  // brown fox\n  // { match: '#Adjective+ <Noun>', chunk: 'Noun' },\n  // --- of ---\n  // son of a gun\n  { match: '#Noun of #Determiner? #Noun', chunk: 'Noun' },\n  // --- in ---\n  { match: '#Noun in #Determiner? #Noun', chunk: 'Noun' },\n  // indoor and outdoor seating\n  { match: '#Singular and #Determiner? #Singular', chunk: 'Noun' },\n  // tomatoes and cheese\n  // { match: '#Noun and #Determiner? #Noun', notIf: '#Pronoun', chunk: 'Noun' },\n  // that is why\n  // { match: '[that] (is|was)', group: 0, chunk: 'Noun' },\n]\n\nlet net = null\nconst matcher = function (view, _, world) {\n  const { methods } = world\n  net = net || methods.one.buildNet(rules, world)\n  view.sweep(net)\n}\nexport default matcher\n","const setChunk = function (term, chunk) {\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env\n  if (env.DEBUG_CHUNKS) {\n    let str = (term.normal + \"'\").padEnd(8)\n    console.log(`  | '${str}  →  \\x1b[34m${chunk.padEnd(12)}\\x1b[0m \\x1b[2m -fallback- \\x1b[0m`) // eslint-disable-line\n  }\n  term.chunk = chunk\n}\n\n// ensure everything has a chunk\nconst fallback = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t]\n      if (term.chunk === undefined) {\n        // conjunctions stand alone\n        if (term.tags.has('Conjunction')) {\n          setChunk(term, 'Pivot')\n        } else if (term.tags.has('Preposition')) {\n          setChunk(term, 'Pivot')\n        } else if (term.tags.has('Adverb')) {\n          setChunk(term, 'Verb')\n        }\n        // just take the chunk on the right?\n        // else if (document[n][t + 1] && document[n][t + 1].chunk) {\n        //   setChunk(term, document[n][t + 1].chunk)\n        // }\n        // // or take the chunk on the left\n        // else if (document[n][t - 1] && document[n][t - 1].chunk) {\n        //   setChunk(term, document[n][t - 1].chunk)\n        else {\n          //  ¯\\_(ツ)_/¯\n          term.chunk = 'Noun'\n        }\n      }\n    }\n  }\n}\nexport default fallback\n","import easyMode from './01-easy.js'\nimport byNeighbour from './02-neighbours.js'\nimport matcher from './03-matcher.js'\nimport fallback from './04-fallback.js'\nimport fixUp from './05-fixUp.js'\n/* Chunks:\n    Noun\n    Verb\n    Adjective\n    Pivot\n*/\n\nconst findChunks = function (view) {\n  const { document, world } = view\n  easyMode(document)\n  byNeighbour(document)\n  matcher(view, document, world)\n  // matcher(view, document, world) //run it 2nd time\n  fallback(document, world)\n  fixUp(document, world)\n}\nexport default { chunks: findChunks }\n","// simply chunk Nouns as <Noun>\nconst byNeighbour = function (document) {\n  for (let n = 0; n < document.length; n += 1) {\n    for (let t = 0; t < document[n].length; t += 1) {\n      let term = document[n][t]\n      if (term.chunk) {\n        continue\n      }\n      // based on next-term\n      let onRight = document[n][t + 1]\n      // based on last-term\n      let onLeft = document[n][t - 1]\n\n      //'is cool' vs 'the cool dog'\n      if (term.tags.has('Adjective')) {\n        // 'is cool'\n        if (onLeft && onLeft.tags.has('Copula')) {\n          term.chunk = 'Adjective'\n          continue\n        }\n        // 'the cool'\n        if (onLeft && onLeft.tags.has('Determiner')) {\n          term.chunk = 'Noun'\n          continue\n        }\n        // 'cool dog'\n        if (onRight && onRight.tags.has('Noun')) {\n          term.chunk = 'Noun'\n          continue\n        }\n        continue\n      }\n      // 'really swimming' vs 'really cool'\n      if (term.tags.has('Adverb') || term.tags.has('Negative')) {\n        if (onLeft && onLeft.tags.has('Adjective')) {\n          term.chunk = 'Adjective'\n          continue\n        }\n        if (onLeft && onLeft.tags.has('Verb')) {\n          term.chunk = 'Verb'\n          continue\n        }\n\n        if (onRight && onRight.tags.has('Adjective')) {\n          term.chunk = 'Adjective'\n          continue\n        }\n        if (onRight && onRight.tags.has('Verb')) {\n          term.chunk = 'Verb'\n          continue\n        }\n      }\n    }\n  }\n}\nexport default byNeighbour\n","const fixUp = function (docs) {\n  let byChunk = []\n  let current = null\n  docs.forEach(terms => {\n    // ensure an adjective chunk is preceded by a copula\n    for (let i = 0; i < terms.length; i += 1) {\n      let term = terms[i]\n      if (current && term.chunk === current) {\n        byChunk[byChunk.length - 1].terms.push(term)\n      } else {\n        byChunk.push({ chunk: term.chunk, terms: [term] })\n        current = term.chunk\n      }\n    }\n  })\n  // ensure every verb-phrase actually has a verb\n  byChunk.forEach(c => {\n    if (c.chunk === 'Verb') {\n      const hasVerb = c.terms.find(t => t.tags.has('Verb'))\n      if (!hasVerb) {\n        c.terms.forEach(t => t.chunk = null)\n      }\n    }\n  })\n}\nexport default fixUp\n","import api from './api/api.js'\nimport compute from './compute/index.js'\n\nexport default {\n  compute: compute,\n  api: api,\n  hooks: ['chunks'],\n}\n","import clauses from './clauses.js'\nimport getChunks from './chunks.js'\n\n// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst api = function (View) {\n\n  class Chunks extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Chunks'\n    }\n    isVerb() {\n      return this.filter(c => c.has('<Verb>'))\n    }\n    isNoun() {\n      return this.filter(c => c.has('<Noun>'))\n    }\n    isAdjective() {\n      return this.filter(c => c.has('<Adjective>'))\n    }\n    isPivot() {\n      return this.filter(c => c.has('<Pivot>'))\n    }\n    // chunk-friendly debug\n    debug() {\n      this.toView().debug('chunks')\n      return this\n    }\n    // overloaded - keep Sentences class\n    update(pointer) {\n      let m = new Chunks(this.document, pointer)\n      m._cache = this._cache // share this full thing\n      return m\n    }\n  }\n\n  View.prototype.chunks = function (n) {\n    let m = getChunks(this)\n    m = getNth(m, n)\n    return new Chunks(this.document, m.pointer)\n  }\n  View.prototype.clauses = clauses\n}\nexport default api\n","const chunks = function (doc) {\n  let carry = []\n  let ptr = null\n  let current = null\n  doc.docs.forEach(terms => {\n    terms.forEach(term => {\n      // start a new chunk\n      if (term.chunk !== current) {\n        if (ptr) {\n          ptr[2] = term.index[1]\n          carry.push(ptr)\n        }\n        current = term.chunk\n        ptr = [term.index[0], term.index[1]]\n      }\n    })\n  })\n  if (ptr) {\n    carry.push(ptr)\n  }\n  let parts = doc.update(carry)\n  // split up verb-phrases, and noun-phrases\n  parts = parts.map(c => {\n    if (c.has('<Noun>')) {\n      return c.nouns()\n    }\n    // if (c.has('<Verb>')) {\n    //   if (c.verbs().length > 1) {\n    //     console.log(c.text())\n    //   }\n    // }\n    return c\n  })\n  return parts\n}\nexport default chunks\n","// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\nconst apostropheS = /'s$/\n\nconst find = function (doc) {\n  let m = doc.match('#Possessive+')\n  // expand it to include 'john smith's'\n  if (m.has('#Person')) {\n    m = m.growLeft('#Person+')\n  }\n  if (m.has('#Place')) {\n    m = m.growLeft('#Place+')\n  }\n  if (m.has('#Organization')) {\n    m = m.growLeft('#Organization+')\n  }\n  return m\n}\n\n\nconst api = function (View) {\n\n  class Possessives extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Possessives'\n    }\n    strip() {\n      this.docs.forEach(terms => {\n        terms.forEach(term => {\n          term.text = term.text.replace(apostropheS, '')\n          term.normal = term.normal.replace(apostropheS, '')\n        })\n      })\n      return this\n    }\n  }\n\n  View.prototype.possessives = function (n) {\n    let m = find(this)\n    m = getNth(m, n)\n    return new Possessives(m.document, m.pointer)\n  }\n}\nexport default api\n","const hasOpen = /\\(/\nconst hasClosed = /\\)/\n\nconst findEnd = function (terms, i) {\n  for (; i < terms.length; i += 1) {\n    if (terms[i].post && hasClosed.test(terms[i].post)) {\n      return i\n    }\n  }\n  return null\n}\n\nconst find = function (doc) {\n  let ptrs = []\n  doc.docs.forEach(terms => {\n    let isOpen = false\n    for (let i = 0; i < terms.length; i += 1) {\n      let term = terms[i]\n      if (!isOpen && term.pre && hasOpen.test(term.pre)) {\n        let end = findEnd(terms, i)\n        if (end !== null) {\n          let [n, start] = terms[i].index\n          ptrs.push([n, start, end + 1, terms[i].id])\n          i = end\n        }\n      }\n    }\n  })\n  return doc.update(ptrs)\n}\n\nconst strip = function (m) {\n  m.docs.forEach(terms => {\n    terms[0].pre = terms[0].pre.replace(hasOpen, '')\n    let last = terms[terms.length - 1]\n    last.post = last.post.replace(hasClosed, '')\n  })\n  return m\n}\nexport { find, strip }\n","import { find, strip } from './fns.js'\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst api = function (View) {\n\n  class Parentheses extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Possessives'\n    }\n    strip() {\n      return strip(this)\n    }\n  }\n\n  View.prototype.parentheses = function (n) {\n    let m = find(this)\n    m = getNth(m, n)\n    return new Parentheses(m.document, m.pointer)\n  }\n}\nexport default api\n","const pairs = {\n  '\\u0022': '\\u0022', // 'StraightDoubleQuotes'\n  '\\uFF02': '\\uFF02', // 'StraightDoubleQuotesWide'\n  '\\u0027': '\\u0027', // 'StraightSingleQuotes'\n  '\\u201C': '\\u201D', // 'CommaDoubleQuotes'\n  '\\u2018': '\\u2019', // 'CommaSingleQuotes'\n  '\\u201F': '\\u201D', // 'CurlyDoubleQuotesReversed'\n  '\\u201B': '\\u2019', // 'CurlySingleQuotesReversed'\n  '\\u201E': '\\u201D', // 'LowCurlyDoubleQuotes'\n  '\\u2E42': '\\u201D', // 'LowCurlyDoubleQuotesReversed'\n  '\\u201A': '\\u2019', // 'LowCurlySingleQuotes'\n  '\\u00AB': '\\u00BB', // 'AngleDoubleQuotes' «, »\n  '\\u2039': '\\u203A', // 'AngleSingleQuotes'\n  // Prime 'non quotation'\n  '\\u2035': '\\u2032', // 'PrimeSingleQuotes'\n  '\\u2036': '\\u2033', // 'PrimeDoubleQuotes'\n  '\\u2037': '\\u2034', // 'PrimeTripleQuotes'\n  // Prime 'quotation' variation\n  '\\u301D': '\\u301E', // 'PrimeDoubleQuotes'\n  '\\u0060': '\\u00B4', // 'PrimeSingleQuotes'\n  '\\u301F': '\\u301E', // 'LowPrimeDoubleQuotesReversed'\n}\n\nconst hasOpen = RegExp('(' + Object.keys(pairs).join('|') + ')')\nconst hasClosed = RegExp('(' + Object.values(pairs).join('|') + ')')\n\nconst findEnd = function (terms, i) {\n  const have = terms[i].pre.match(hasOpen)[0] || ''\n  if (!have || !pairs[have]) {\n    return null\n  }\n  const want = pairs[have]\n  for (; i < terms.length; i += 1) {\n    if (terms[i].post && terms[i].post.match(want)) {\n      return i\n    }\n  }\n  return null\n}\n\nconst find = function (doc) {\n  let ptrs = []\n  doc.docs.forEach(terms => {\n    let isOpen = false\n    for (let i = 0; i < terms.length; i += 1) {\n      let term = terms[i]\n      if (!isOpen && term.pre && hasOpen.test(term.pre)) {\n        let end = findEnd(terms, i)\n        if (end !== null) {\n          let [n, start] = terms[i].index\n          ptrs.push([n, start, end + 1, terms[i].id])\n          i = end\n        }\n      }\n    }\n  })\n  return doc.update(ptrs)\n}\n\nconst strip = function (m) {\n  m.docs.forEach(terms => {\n    terms[0].pre = terms[0].pre.replace(hasOpen, '')\n    let lastTerm = terms[terms.length - 1]\n    lastTerm.post = lastTerm.post.replace(hasClosed, '')\n  })\n}\nexport { find, strip }\n","import { find, strip } from './fns.js'\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst api = function (View) {\n\n  class Quotations extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Possessives'\n    }\n    strip() {\n      return strip(this)\n    }\n  }\n\n  View.prototype.quotations = function (n) {\n    let m = find(this)\n    m = getNth(m, n)\n    return new Quotations(m.document, m.pointer)\n  }\n}\nexport default api\n","// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\nconst hasPeriod = /\\./g\n\nconst api = function (View) {\n\n  class Acronyms extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Acronyms'\n    }\n    strip() {\n      this.docs.forEach(terms => {\n        terms.forEach(term => {\n          term.text = term.text.replace(hasPeriod, '')\n          term.normal = term.normal.replace(hasPeriod, '')\n        })\n      })\n      return this\n    }\n    addPeriods() {\n      this.docs.forEach(terms => {\n        terms.forEach(term => {\n          term.text = term.text.replace(hasPeriod, '')\n          term.normal = term.normal.replace(hasPeriod, '')\n          term.text = term.text.split('').join('.') + '.'\n          term.normal = term.normal.split('').join('.') + '.'\n        })\n      })\n      return this\n    }\n  }\n\n  View.prototype.acronyms = function (n) {\n    let m = this.match('#Acronym')\n    m = getNth(m, n)\n    return new Acronyms(m.document, m.pointer)\n  }\n}\nexport default api\n","// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\n// guard against superlative+comparative forms\nconst toRoot = function (adj) {\n  const { fromComparative, fromSuperlative } = adj.methods.two.transform.adjective\n  let str = adj.text('normal')\n  if (adj.has('#Comparative')) {\n    return fromComparative(str, adj.model)\n  }\n  if (adj.has('#Superlative')) {\n    return fromSuperlative(str, adj.model)\n  }\n  return str\n}\n\nconst api = function (View) {\n\n  class Adjectives extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Adjectives'\n    }\n    json(opts = {}) {\n      const { toAdverb, toNoun, toSuperlative, toComparative } = this.methods.two.transform.adjective\n      opts.normal = true\n      return this.map(m => {\n        let json = m.toView().json(opts)[0] || {}\n        let str = toRoot(m)\n        json.adjective = {\n          adverb: toAdverb(str),\n          noun: toNoun(str),\n          superlative: toSuperlative(str, this.model),\n          comparative: toComparative(str, this.model),\n        }\n        return json\n      }, [])\n    }\n    adverbs() {\n      return this.before('#Adverb+$').concat(this.after('^#Adverb+'))\n    }\n    conjugate(n) {\n      const { toComparative, toSuperlative, toNoun, toAdverb } = this.methods.two.transform.adjective\n      return getNth(this, n).map(adj => {\n        let root = toRoot(adj)\n        return {\n          Adjective: root,\n          Comparative: toComparative(root, this.model),\n          Superlative: toSuperlative(root, this.model),\n          Noun: toNoun(root, this.model),\n          Adverb: toAdverb(root, this.model),\n        }\n      }, [])\n    }\n    toComparative(n) {\n      const { toComparative } = this.methods.two.transform.adjective\n      return getNth(this, n).map(adj => {\n        let root = toRoot(adj)\n        let str = toComparative(root, this.model)\n        return adj.replaceWith(str)\n      })\n    }\n    toSuperlative(n) {\n      const { toSuperlative } = this.methods.two.transform.adjective\n      return getNth(this, n).map(adj => {\n        let root = toRoot(adj)\n        let str = toSuperlative(root, this.model)\n        return adj.replaceWith(str)\n      })\n    }\n    toAdverb(n) {\n      const { toAdverb } = this.methods.two.transform.adjective\n      return getNth(this, n).map(adj => {\n        let root = toRoot(adj)\n        let str = toAdverb(root, this.model)\n        return adj.replaceWith(str)\n      })\n    }\n    toNoun(n) {\n      const { toNoun } = this.methods.two.transform.adjective\n      return getNth(this, n).map(adj => {\n        let root = toRoot(adj)\n        let str = toNoun(root, this.model)\n        return adj.replaceWith(str)\n      })\n    }\n  }\n\n  View.prototype.adjectives = function (n) {\n    let m = this.match('#Adjective')\n    m = getNth(m, n)\n    return new Adjectives(m.document, m.pointer)\n  }\n  View.prototype.superlatives = function (n) {\n    let m = this.match('#Superlative')\n    m = getNth(m, n)\n    return new Adjectives(m.document, m.pointer)\n  }\n  View.prototype.comparatives = function (n) {\n    let m = this.match('#Comparative')\n    m = getNth(m, n)\n    return new Adjectives(m.document, m.pointer)\n  }\n}\nexport default api\n","// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\n/** return anything tagged as a phone number */\nconst phoneNumbers = function (n) {\n  let m = this.splitAfter('@hasComma')\n  m = m.match('#PhoneNumber+')\n  m = getNth(m, n)\n  return m\n}\n\n// setup easy helper methods\nconst selections = [\n  ['hyphenated', '@hasHyphen .'],\n  ['hashTags', '#HashTag'],\n  ['emails', '#Email'],\n  ['emoji', '#Emoji'],\n  ['emoticons', '#Emoticon'],\n  ['atMentions', '#AtMention'],\n  ['urls', '#Url'],\n  ['pronouns', '#Pronoun'],\n  ['conjunctions', '#Conjunction'],\n  ['prepositions', '#Preposition'],\n  ['abbreviations', '#Abbreviation'],\n  ['honorifics', '#Honorific'],\n]\n\n// aliases\nlet aliases = [\n  ['emojis', 'emoji'],\n  ['atmentions', 'atMentions'],\n]\n\nconst addMethods = function (View) {\n  // add a list of new helper methods\n  selections.forEach(a => {\n    View.prototype[a[0]] = function (n) {\n      let m = this.match(a[1])\n      return typeof n === 'number' ? m.get(n) : m\n    }\n  })\n  View.prototype.phoneNumbers = phoneNumbers\n  // add aliases\n  aliases.forEach(a => {\n    View.prototype[a[0]] = View.prototype[a[1]]\n  })\n}\n\nexport default addMethods\n","import addPossessives from './possessives/index.js'\nimport addParentheses from './parentheses/index.js'\nimport addQuotations from './quotations/index.js'\nimport addAcronyms from './acronyms/index.js'\nimport addAdverbs from './adverbs/index.js'\nimport addAdjectives from './adjectives/index.js'\nimport addSelections from './selections/index.js'\n\nexport default {\n  api: function (View) {\n    addSelections(View)\n    addPossessives(View)\n    addParentheses(View)\n    addQuotations(View)\n    addAdjectives(View)\n    addAdverbs(View)\n    addAcronyms(View)\n  }\n}","// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst api = function (View) {\n\n  class Adverbs extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Adverbs'\n    }\n    json(opts = {}) {\n      const fromAdverb = this.methods.two.transform.adjective.fromAdverb\n      opts.normal = true\n      return this.map(m => {\n        let json = m.toView().json(opts)[0] || {}\n        json.adverb = {\n          adjective: fromAdverb(json.normal)\n        }\n        return json\n      }, [])\n    }\n  }\n\n  View.prototype.adverbs = function (n) {\n    let m = this.match('#Adverb')\n    m = getNth(m, n)\n    return new Adverbs(m.document, m.pointer)\n  }\n}\nexport default api\n","const termLoop = function (view, cb) {\n  view.docs.forEach(terms => {\n    terms.forEach(cb)\n  })\n}\n\nexport default {\n  // remove titlecasing, uppercase\n  'case': (doc) => {\n    termLoop(doc, (term) => {\n      term.text = term.text.toLowerCase()\n    })\n  },\n  // visually romanize/anglicize 'Björk' into 'Bjork'.\n  'unicode': (doc) => {\n    const world = doc.world\n    const killUnicode = world.methods.one.killUnicode\n    termLoop(doc, (term) => term.text = killUnicode(term.text, world))\n  },\n  // remove hyphens, newlines, and force one space between words\n  'whitespace': (doc) => {\n    termLoop(doc, (term) => {\n      // one space between words\n      term.post = term.post.replace(/\\s+/g, ' ')\n      term.post = term.post.replace(/\\s([.,?!:;])/g, '$1')//no whitespace before a period, etc\n      // no whitepace before a word\n      term.pre = term.pre.replace(/\\s+/g, '')\n    })\n  },\n  // remove commas, semicolons - but keep sentence-ending punctuation\n  'punctuation': (doc) => {\n    termLoop(doc, (term) => {\n      // turn dashes to spaces\n      term.post = term.post.replace(/[–—-]/g, ' ')\n      // remove comma, etc \n      term.post = term.post.replace(/[,:;]/g, '')\n      // remove elipses\n      term.post = term.post.replace(/\\.{2,}/g, '')\n      // remove repeats\n      term.post = term.post.replace(/\\?{2,}/g, '?')\n      term.post = term.post.replace(/!{2,}/g, '!')\n      // replace ?!\n      term.post = term.post.replace(/\\?!+/g, '?')\n    })\n    // trim end\n    let docs = doc.docs\n    let terms = docs[docs.length - 1]\n    if (terms && terms.length > 0) {\n      let lastTerm = terms[terms.length - 1]\n      lastTerm.post = lastTerm.post.replace(/ /g, '')\n    }\n  },\n\n  // ====== subsets ===\n\n  // turn \"isn't\" to \"is not\"\n  'contractions': (doc) => {\n    doc.contractions().expand()\n  },\n  //remove periods from acronyms, like 'F.B.I.'\n  'acronyms': (doc) => {\n    doc.acronyms().strip()\n  },\n  //remove words inside brackets (like these)\n  'parentheses': (doc) => {\n    doc.parentheses().strip()\n  },\n  // turn \"Google's tax return\" to \"Google tax return\"\n  'possessives': (doc) => {\n    doc.possessives().strip()\n  },\n  // turn \"tax return\" to tax return\n  'quotations': (doc) => {\n    doc.quotations().strip()\n  },\n\n  // remove them\n  'emoji': (doc) => {\n    doc.emojis().remove()\n  },\n  //turn 'Vice Admiral John Smith' to 'John Smith'\n  'honorifics': (doc) => {\n    doc.match('#Honorific+ #Person').honorifics().remove()\n  },\n  // remove needless adverbs\n  'adverbs': (doc) => {\n    doc.adverbs().remove()\n  },\n\n  // turn \"batmobiles\" into \"batmobile\"\n  'nouns': (doc) => {\n    doc.nouns().toSingular()\n  },\n  // turn all verbs into Infinitive form - \"I walked\" → \"I walk\"\n  'verbs': (doc) => {\n    doc.verbs().toInfinitive()\n  },\n  // turn \"fifty\" into \"50\"\n  'numbers': (doc) => {\n    doc.numbers().toNumber()\n  },\n\n}\n","import methods from './methods.js'\n\n// turn presets into key-vals\nconst split = (str) => {\n  return str.split('|').reduce((h, k) => {\n    h[k] = true\n    return h\n  }, {})\n}\n\nconst light = 'unicode|punctuation|whitespace|acronyms'\nconst medium = '|case|contractions|parentheses|quotations|emoji|honorifics'\nconst heavy = '|possessives|adverbs|nouns|verbs'\nconst presets = {\n  light: split(light),\n  medium: split(light + medium),\n  heavy: split(light + medium + heavy)\n}\n\nexport default function (View) {\n  View.prototype.normalize = function (opts = 'light') {\n    if (typeof opts === 'string') {\n      opts = presets[opts]\n    }\n    // run each method\n    Object.keys(opts).forEach(fn => {\n      if (methods.hasOwnProperty(fn)) {\n        methods[fn](this, opts[fn])\n      }\n    })\n    return this\n  }\n}","import api from './api.js'\n\nexport default {\n  api\n}","const findNouns = function (doc) {\n  let m = doc.match('<Noun>')\n  let commas = m.match('@hasComma')\n  // allow toronto, ontario\n  commas = commas.not('#Place')\n  if (commas.found) {\n    m = m.splitAfter(commas)\n  }\n  // yo there\n  m = m.splitOn('#Expression')\n  // these are individual nouns\n  m = m.splitOn('(he|she|we|you|they)')\n  // a client i saw\n  m = m.splitOn('(#Noun|#Adjective) [#Pronoun]', 0)\n  // give him the best\n  m = m.splitOn('[#Pronoun] (#Determiner|#Value)', 0)\n  // the noise the slide makes\n  m = m.splitBefore('#Noun [(the|a|an)] #Adjective? #Noun', 0)\n  // here spencer slept\n  m = m.splitOn('[(here|there)] #Noun', 0)\n  // put it there\n  m = m.splitOn('[#Noun] (here|there)', 0)\n  // its great purposes\n  // give [parents] [our money]\n  m = m.splitBefore('(our|my|their|your)')\n  // his excuses\n  // m = m.splitAfter('(his|hers|yours|ours|theirs)')\n  //ensure there's actually a noun\n  m = m.if('#Noun')\n  return m\n}\nexport default findNouns\n","// https://www.trentu.ca/history/subordinate-clause-and-complex-sentence\nconst list = [\n  'after',\n  'although',\n  'as if',\n  'as long as',\n  'as',\n  'because',\n  'before',\n  'even if',\n  'even though',\n  'ever since',\n  'if',\n  'in order that',\n  'provided that',\n  'since',\n  'so that',\n  'than',\n  'that',\n  'though',\n  'unless',\n  'until',\n  'what',\n  'whatever',\n  'when',\n  'whenever',\n  'where',\n  'whereas',\n  'wherever',\n  'whether',\n  'which',\n  'whichever',\n  'who',\n  'whoever',\n  'whom',\n  'whomever',\n  'whose',\n]\n\nconst isSubordinate = function (m) {\n  // athletes from toronto, days since december\n  if (m.before('#Preposition$').found) {\n    return true\n  }\n  let leadIn = m.before()\n  if (!leadIn.found) {\n    return false\n  }\n  for (let i = 0; i < list.length; i += 1) {\n    if (m.has(list[i])) {\n      return true\n    }\n  }\n  return false\n}\nexport default isSubordinate\n","const notPlural = '(#Pronoun|#Place|#Value|#Person|#Uncountable|#Month|#WeekDay|#Holiday|#Possessive)'\n\nconst isPlural = function (m, root) {\n  // const { looksPlural } = m.world.methods.two\n  if (m.has('#Plural')) {\n    return true\n  }\n  // two singular nouns are plural noun phrase\n  if (m.has('#Noun and #Noun')) {\n    return true\n  }\n  if (m.has('(we|they)')) {\n    return true\n  }\n  // these can't be plural\n  if (root.has(notPlural) === true) {\n    return false\n  }\n  if (m.has('#Singular')) {\n    return false\n  }\n  // word-reg fallback\n  let str = root.text('normal')\n  // ends with a brutal s fallback\n  return str.length > 3 && str.endsWith('s') && !str.endsWith('ss')\n}\nexport default isPlural\n","import isSubordinate from './isSubordinate.js'\nimport isPlural from './isPlural.js'\n\nconst getRoot = function (m) {\n  let tmp = m.clone()\n  tmp = tmp.match('#Noun+')\n  tmp = tmp.remove('(#Adjective|#Preposition|#Determiner|#Value)')\n  tmp = tmp.not('#Possessive')\n  tmp = tmp.first()\n  if (!tmp.found) {\n    return m\n  }\n  return tmp\n}\n\nconst parseNoun = function (m) {\n  let root = getRoot(m)\n  return {\n    determiner: m.match('#Determiner').eq(0),\n    adjectives: m.match('#Adjective'),\n    number: m.values(),\n    isPlural: isPlural(m, root),\n    isSubordinate: isSubordinate(m),\n    root: root,\n  }\n}\nexport default parseNoun\n","import parseNoun from './parse.js'\n\nconst toText = m => m.text()\nconst toArray = m => m.json({ terms: false, normal: true }).map(s => s.normal)\n\nconst getNum = function (m) {\n  let num = null\n  if (!m.found) {\n    return num\n  }\n  let val = m.values(0)\n  if (val.found) {\n    let obj = val.parse()[0] || {}\n    return obj.num\n  }\n  return num\n}\n\nconst toJSON = function (m) {\n  let res = parseNoun(m)\n  return {\n    root: toText(res.root),\n    number: getNum(res.number),\n    determiner: toText(res.determiner),\n    adjectives: toArray(res.adjectives),\n    isPlural: res.isPlural,\n    isSubordinate: res.isSubordinate,\n  }\n}\nexport default toJSON\n","const keep = { tags: true }\n\nconst hasPlural = function (parsed) {\n  let { root } = parsed\n  if (root.has('^(#Uncountable|#Possessive|#ProperNoun|#Place|#Pronoun|#Acronym)+$')) {\n    return false\n  }\n  return true\n}\n\nconst nounToPlural = function (m, parsed) {\n  // already plural?\n  if (parsed.isPlural === true) {\n    return m\n  }\n  // is a plural appropriate?\n  if (!hasPlural(parsed)) {\n    return m\n  }\n  const { methods, model } = m.world\n  const { toPlural } = methods.two.transform.noun\n  // inflect the root noun\n  let str = parsed.root.text({ keepPunct: false })\n  let plural = toPlural(str, model)\n  m.match(parsed.root).replaceWith(plural, keep).tag('Plural', 'toPlural')\n  // should we change the determiner/article?\n  if (parsed.determiner.has('(a|an)')) {\n    // 'a captain' -> 'the captains'\n    // m.replace(parsed.determiner, 'the', keep)\n    m.remove(parsed.determiner)\n  }\n  // should we change the following copula?\n  let copula = parsed.root.after('not? #Adverb+? [#Copula]', 0)\n  if (copula.found) {\n    if (copula.has('is')) {\n      m.replace(copula, 'are')\n    } else if (copula.has('was')) {\n      m.replace(copula, 'were')\n    }\n  }\n  return m\n}\nexport default nounToPlural\n","const keep = { tags: true }\n\nconst nounToSingular = function (m, parsed) {\n  // already singular?\n  if (parsed.isPlural === false) {\n    return m\n  }\n  const { methods, model } = m.world\n  const { toSingular } = methods.two.transform.noun\n  // inflect the root noun\n  let str = parsed.root.text('normal')\n  let single = toSingular(str, model)\n  m.replace(parsed.root, single, keep).tag('Singular', 'toPlural')\n  // should we change the determiner/article?\n  // m.debug()\n  return m\n}\nexport default nounToSingular\n","import find from '../find.js'\nimport parseNoun from './parse.js'\nimport toJSON from './toJSON.js'\nimport toPlural from './toPlural.js'\nimport toSingular from './toSingular.js'\n\n// return the nth elem of a doc\nconst getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n// const isObject = val => Object.prototype.toString.call(val) === '[object Object]'\n\nconst api = function (View) {\n  class Nouns extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Nouns'\n    }\n\n    parse(n) {\n      return getNth(this, n).map(parseNoun)\n    }\n\n    json(n) {\n      let opts = typeof n === 'object' ? n : {}\n      return getNth(this, n).map(m => {\n        let json = m.toView().json(opts)[0] || {}\n        if (opts && opts.noun !== true) {\n          json.noun = toJSON(m)\n        }\n        return json\n      }, [])\n    }\n\n    isPlural(n) {\n      let arr = this.filter(m => parseNoun(m).isPlural)\n      return getNth(arr, n)\n    }\n\n    isSingular(n) {\n      let arr = this.filter(m => !parseNoun(m).isPlural)\n      return getNth(arr, n)\n    }\n\n    adjectives(n) {\n      let list = this.update([])\n      this.forEach(m => {\n        let adj = parseNoun(m).adjectives\n        if (adj.found) {\n          list = list.concat(adj)\n        }\n      })\n      return getNth(list, n)\n    }\n\n    toPlural(n) {\n      return getNth(this, n).map(m => {\n        return toPlural(m, parseNoun(m))\n      })\n      // return new Nouns(all.document, all.pointer)\n    }\n\n    toSingular(n) {\n      return getNth(this, n).map(m => {\n        let res = parseNoun(m)\n        return toSingular(m, res)\n      })\n    }\n    // create a new View, from this one\n    update(pointer) {\n      let m = new Nouns(this.document, pointer)\n      m._cache = this._cache // share this full thing\n      return m\n    }\n  }\n  View.prototype.nouns = function (n) {\n    let m = find(this)\n    m = getNth(m, n)\n    return new Nouns(this.document, m.pointer)\n  }\n}\nexport default api\n","import api from './api/api.js'\n\nexport default {\n  api,\n}\n","export default {\n  ones: {\n    zeroth: 0,\n    first: 1,\n    second: 2,\n    third: 3,\n    fourth: 4,\n    fifth: 5,\n    sixth: 6,\n    seventh: 7,\n    eighth: 8,\n    ninth: 9,\n    zero: 0,\n    one: 1,\n    two: 2,\n    three: 3,\n    four: 4,\n    five: 5,\n    six: 6,\n    seven: 7,\n    eight: 8,\n    nine: 9,\n  },\n  teens: {\n    tenth: 10,\n    eleventh: 11,\n    twelfth: 12,\n    thirteenth: 13,\n    fourteenth: 14,\n    fifteenth: 15,\n    sixteenth: 16,\n    seventeenth: 17,\n    eighteenth: 18,\n    nineteenth: 19,\n    ten: 10,\n    eleven: 11,\n    twelve: 12,\n    thirteen: 13,\n    fourteen: 14,\n    fifteen: 15,\n    sixteen: 16,\n    seventeen: 17,\n    eighteen: 18,\n    nineteen: 19,\n  },\n  tens: {\n    twentieth: 20,\n    thirtieth: 30,\n    fortieth: 40,\n    fourtieth: 40,\n    fiftieth: 50,\n    sixtieth: 60,\n    seventieth: 70,\n    eightieth: 80,\n    ninetieth: 90,\n    twenty: 20,\n    thirty: 30,\n    forty: 40,\n    fourty: 40,\n    fifty: 50,\n    sixty: 60,\n    seventy: 70,\n    eighty: 80,\n    ninety: 90,\n  },\n  multiples: {\n    hundredth: 100,\n    thousandth: 1000,\n    millionth: 1e6,\n    billionth: 1e9,\n    trillionth: 1e12,\n    quadrillionth: 1e15,\n    quintillionth: 1e18,\n    sextillionth: 1e21,\n    septillionth: 1e24,\n    hundred: 100,\n    thousand: 1000,\n    million: 1e6,\n    billion: 1e9,\n    trillion: 1e12,\n    quadrillion: 1e15,\n    quintillion: 1e18,\n    sextillion: 1e21,\n    septillion: 1e24,\n    grand: 1000,\n  },\n}\n","import words from './data.js'\n\n//prevent things like 'fifteen ten', and 'five sixty'\nconst isValid = (w, has) => {\n  if (words.ones.hasOwnProperty(w)) {\n    if (has.ones || has.teens) {\n      return false\n    }\n  } else if (words.teens.hasOwnProperty(w)) {\n    if (has.ones || has.teens || has.tens) {\n      return false\n    }\n  } else if (words.tens.hasOwnProperty(w)) {\n    if (has.ones || has.teens || has.tens) {\n      return false\n    }\n  }\n  return true\n}\nexport default isValid\n","import words from './data.js'\n\n//concatenate into a string with leading '0.'\nconst parseDecimals = function (arr) {\n  let str = '0.'\n  for (let i = 0; i < arr.length; i++) {\n    let w = arr[i]\n    if (words.ones.hasOwnProperty(w) === true) {\n      str += words.ones[w]\n    } else if (words.teens.hasOwnProperty(w) === true) {\n      str += words.teens[w]\n    } else if (words.tens.hasOwnProperty(w) === true) {\n      str += words.tens[w]\n    } else if (/^[0-9]$/.test(w) === true) {\n      str += w\n    } else {\n      return 0\n    }\n  }\n  return parseFloat(str)\n}\n\nexport default parseDecimals\n","//parse a string like \"4,200.1\" into Number 4200.1\nconst parseNumeric = str => {\n  //remove ordinal - 'th/rd'\n  str = str.replace(/1st$/, '1')\n  str = str.replace(/2nd$/, '2')\n  str = str.replace(/3rd$/, '3')\n  str = str.replace(/([4567890])r?th$/, '$1')\n  //remove prefixes\n  str = str.replace(/^[$€¥£¢]/, '')\n  //remove suffixes\n  str = str.replace(/[%$€¥£¢]$/, '')\n  //remove commas\n  str = str.replace(/,/g, '')\n  //split '5kg' from '5'\n  str = str.replace(/([0-9])([a-z\\u00C0-\\u00FF]{1,2})$/, '$1')\n  return str\n}\n\nexport default parseNumeric\n","import findModifiers from './findModifiers.js'\nimport words from './data.js'\nimport isValid from './validate.js'\nimport parseDecimals from './parseDecimals.js'\nimport parseNumeric from './parseNumeric.js'\nconst improperFraction = /^([0-9,. ]+)\\/([0-9,. ]+)$/\n\n//some numbers we know\nconst casualForms = {\n  'a few': 3,\n  'a couple': 2,\n  'a dozen': 12,\n  'two dozen': 24,\n  zero: 0,\n}\n\n// a 'section' is something like 'fifty-nine thousand'\n// turn a section into something we can add to - like 59000\nconst section_sum = obj => {\n  return Object.keys(obj).reduce((sum, k) => {\n    sum += obj[k]\n    return sum\n  }, 0)\n}\n\n//turn a string into a number\nconst parse = function (str) {\n  //convert some known-numbers\n  if (casualForms.hasOwnProperty(str) === true) {\n    return casualForms[str]\n  }\n  //'a/an' is 1\n  if (str === 'a' || str === 'an') {\n    return 1\n  }\n  const modifier = findModifiers(str)\n  str = modifier.str\n  let last_mult = null\n  let has = {}\n  let sum = 0\n  let isNegative = false\n  const terms = str.split(/[ -]/)\n  // const isFraction = findFraction(terms)\n  for (let i = 0; i < terms.length; i++) {\n    let w = terms[i]\n    w = parseNumeric(w)\n\n    if (!w || w === 'and') {\n      continue\n    }\n    if (w === '-' || w === 'negative') {\n      isNegative = true\n      continue\n    }\n    if (w.charAt(0) === '-') {\n      isNegative = true\n      w = w.substring(1)\n    }\n\n    //decimal mode\n    if (w === 'point') {\n      sum += section_sum(has)\n      sum += parseDecimals(terms.slice(i + 1, terms.length))\n      sum *= modifier.amount\n      return sum\n    }\n\n    //improper fraction\n    const fm = w.match(improperFraction)\n    if (fm) {\n      const num = parseFloat(fm[1].replace(/[, ]/g, ''))\n      const denom = parseFloat(fm[2].replace(/[, ]/g, ''))\n      if (denom) {\n        sum += num / denom || 0\n      }\n      continue\n    }\n    // try to support 'two fifty'\n    if (words.tens.hasOwnProperty(w)) {\n      if (has.ones && Object.keys(has).length === 1) {\n        sum = has.ones * 100\n        has = {}\n      }\n    }\n\n    //prevent mismatched units, like 'seven eleven' if not a fraction\n    if (isValid(w, has) === false) {\n      return null\n    }\n\n    //buildOut section, collect 'has' values\n    if (/^[0-9.]+$/.test(w)) {\n      has.ones = parseFloat(w) //not technically right\n    } else if (words.ones.hasOwnProperty(w) === true) {\n      has.ones = words.ones[w]\n    } else if (words.teens.hasOwnProperty(w) === true) {\n      has.teens = words.teens[w]\n    } else if (words.tens.hasOwnProperty(w) === true) {\n      has.tens = words.tens[w]\n    } else if (words.multiples.hasOwnProperty(w) === true) {\n      let mult = words.multiples[w]\n\n      //something has gone wrong : 'two hundred five hundred'\n      //possibly because it's a fraction\n      if (mult === last_mult) {\n        return null\n      }\n      //support 'hundred thousand'\n      //this one is tricky..\n      if (mult === 100 && terms[i + 1] !== undefined) {\n        const w2 = terms[i + 1]\n        if (words.multiples[w2]) {\n          mult *= words.multiples[w2] //hundredThousand/hundredMillion\n          i += 1\n        }\n      }\n      //natural order of things\n      //five thousand, one hundred..\n      if (last_mult === null || mult < last_mult) {\n        sum += (section_sum(has) || 1) * mult\n        last_mult = mult\n        has = {}\n      } else {\n        //maybe hundred .. thousand\n        sum += section_sum(has)\n        last_mult = mult\n        sum = (sum || 1) * mult\n        has = {}\n      }\n    }\n  }\n  //dump the remaining has values\n  sum += section_sum(has)\n  //post-process add modifier\n  sum *= modifier.amount\n  sum *= isNegative ? -1 : 1\n  //dont return 0, if it went straight-through\n  if (sum === 0 && Object.keys(has).length === 0) {\n    return null\n  }\n  return sum\n}\n\nexport default parse\n","//support global multipliers, like 'half-million' by doing 'million' then multiplying by 0.5\nconst findModifiers = str => {\n  const mults = [\n    {\n      reg: /^(minus|negative)[\\s-]/i,\n      mult: -1,\n    },\n    {\n      reg: /^(a\\s)?half[\\s-](of\\s)?/i,\n      mult: 0.5,\n    },\n    //  {\n    //   reg: /^(a\\s)?quarter[\\s\\-]/i,\n    //   mult: 0.25\n    // }\n  ]\n  for (let i = 0; i < mults.length; i++) {\n    if (mults[i].reg.test(str) === true) {\n      return {\n        amount: mults[i].mult,\n        str: str.replace(mults[i].reg, ''),\n      }\n    }\n  }\n  return {\n    amount: 1,\n    str: str,\n  }\n}\n\nexport default findModifiers\n","const endS = /s$/\nimport parseText from '../numbers/parse/toNumber/index.js'\n\n// just using .toNumber() again may risk an infinite-loop\nconst parseNumber = function (m) {\n  let str = m.text('reduced')\n  return parseText(str)\n}\n\nlet mapping = {\n  half: 2,\n  halve: 2,\n  quarter: 4,\n}\n\nconst slashForm = function (m) {\n  let str = m.text('reduced')\n  let found = str.match(/^([-+]?[0-9]+)\\/([-+]?[0-9]+)(st|nd|rd|th)?s?$/)\n  if (found && found[1] && found[0]) {\n    return {\n      numerator: Number(found[1]),\n      denominator: Number(found[2]),\n    }\n  }\n  return null\n}\n\n// parse '4 out of 4'\nconst nOutOfN = function (m) {\n  let found = m.match('[<num>#Value+] out of every? [<den>#Value+]')\n  if (found.found !== true) {\n    return null\n  }\n  let { num, den } = found.groups()\n  if (!num || !den) {\n    return null\n  }\n  num = parseNumber(num)\n  den = parseNumber(den)\n  if (!num || !den) {\n    return null\n  }\n  if (typeof num === 'number' && typeof den === 'number') {\n    return {\n      numerator: num,\n      denominator: den,\n    }\n  }\n  return null\n}\n\n// parse 'five thirds'\nconst nOrinalth = function (m) {\n  let found = m.match('[<num>(#Cardinal|a)+] [<den>#Fraction+]')\n  if (found.found !== true) {\n    return null\n  }\n  let { num, den } = found.groups()\n  // -- parse numerator---\n  // quick-support for 'a third'\n  if (num.has('a')) {\n    num = 1\n  } else {\n    // abuse the number-parser for 'thirty three'\n    // let tmp = num.clone().unTag('Fraction')\n    // num = tmp.numbers().get()[0]\n    num = parseNumber(num)\n  }\n  // -- parse denominator --\n  // turn 'thirds' into third\n  let str = den.text('reduced')\n  if (endS.test(str)) {\n    str = str.replace(endS, '')\n    den = den.replaceWith(str)\n  }\n  // support 'one half' as '1/2'\n  if (mapping.hasOwnProperty(str)) {\n    den = mapping[str]\n  } else {\n    // dem = dem.numbers().get()[0]\n    den = parseNumber(den)\n  }\n  if (typeof num === 'number' && typeof den === 'number') {\n    return {\n      numerator: num,\n      denominator: den,\n    }\n  }\n  return null\n}\n\n// implied 1 in '100th of a', 'fifth of a'\nconst oneNth = function (m) {\n  let found = m.match('^#Ordinal$')\n  if (found.found !== true) {\n    return null\n  }\n  // ensure it's '100th of a '\n  if (m.lookAhead('^of .')) {\n    // let num = found.numbers().get()[0]\n    let num = parseNumber(found)\n    return {\n      numerator: 1,\n      denominator: num,\n    }\n  }\n  return null\n}\n\n// 'half'\nconst named = function (m) {\n  let str = m.text('reduced')\n  if (mapping.hasOwnProperty(str)) {\n    return { numerator: 1, denominator: mapping[str] }\n  }\n  return null\n}\n\nconst round = n => {\n  let rounded = Math.round(n * 1000) / 1000\n  // don't round 1 millionth down into 0\n  if (rounded === 0 && n !== 0) {\n    return n\n  }\n  return rounded\n}\n\nconst parseFraction = function (m) {\n  m = m.clone()\n  let res = named(m) || slashForm(m) || nOutOfN(m) || nOrinalth(m) || oneNth(m) || null\n  if (res !== null) {\n    // do the math\n    if (res.numerator && res.denominator) {\n      res.decimal = res.numerator / res.denominator\n      res.decimal = round(res.decimal)\n    }\n  }\n  return res\n}\nexport default parseFraction\n","/**\n * turn big numbers, like 2.3e+22, into a string with a ton of trailing 0's\n * */\nconst numToString = function (n) {\n  if (n < 1000000) {\n    return String(n)\n  }\n  let str\n  if (typeof n === 'number') {\n    str = n.toFixed(0)\n  } else {\n    str = n\n  }\n  if (str.indexOf('e+') === -1) {\n    return str\n  }\n  return str\n    .replace('.', '')\n    .split('e+')\n    .reduce(function (p, b) {\n      return p + Array(b - p.length + 2).join(0)\n    })\n}\nexport default numToString\n// console.log(numToString(2.5e+22));\n","const tens_mapping = [\n  ['ninety', 90],\n  ['eighty', 80],\n  ['seventy', 70],\n  ['sixty', 60],\n  ['fifty', 50],\n  ['forty', 40],\n  ['thirty', 30],\n  ['twenty', 20],\n]\nconst ones_mapping = [\n  '',\n  'one',\n  'two',\n  'three',\n  'four',\n  'five',\n  'six',\n  'seven',\n  'eight',\n  'nine',\n  'ten',\n  'eleven',\n  'twelve',\n  'thirteen',\n  'fourteen',\n  'fifteen',\n  'sixteen',\n  'seventeen',\n  'eighteen',\n  'nineteen',\n]\n\nconst sequence = [\n  [1e24, 'septillion'],\n  [1e20, 'hundred sextillion'],\n  [1e21, 'sextillion'],\n  [1e20, 'hundred quintillion'],\n  [1e18, 'quintillion'],\n  [1e17, 'hundred quadrillion'],\n  [1e15, 'quadrillion'],\n  [1e14, 'hundred trillion'],\n  [1e12, 'trillion'],\n  [1e11, 'hundred billion'],\n  [1e9, 'billion'],\n  [1e8, 'hundred million'],\n  [1e6, 'million'],\n  [100000, 'hundred thousand'],\n  [1000, 'thousand'],\n  [100, 'hundred'],\n  [1, 'one'],\n]\nexport { sequence, tens_mapping, ones_mapping }\n","import toString from '../../_toString.js'\nimport { sequence, ones_mapping, tens_mapping } from './data.js'\n/**\n * turns an integer/float into.ber, like 'fifty-five'\n */\n\n//turn number into an array of magnitudes, like [[5, million], [2, hundred]]\nconst breakdown_magnitudes = function (num) {\n  let working = num\n  let have = []\n  sequence.forEach(a => {\n    if (num >= a[0]) {\n      let howmany = Math.floor(working / a[0])\n      working -= howmany * a[0]\n      if (howmany) {\n        have.push({\n          unit: a[1],\n          count: howmany,\n        })\n      }\n    }\n  })\n  return have\n}\n\n//turn numbers from 100-0 into their text\nconst breakdown_hundred = function (num) {\n  let arr = []\n  if (num > 100) {\n    return arr //something bad happened..\n  }\n  for (let i = 0; i < tens_mapping.length; i++) {\n    if (num >= tens_mapping[i][1]) {\n      num -= tens_mapping[i][1]\n      arr.push(tens_mapping[i][0])\n    }\n  }\n  //(hopefully) we should only have 20-0 now\n  if (ones_mapping[num]) {\n    arr.push(ones_mapping[num])\n  }\n  return arr\n}\n\n/** print-out 'point eight nine'*/\nconst handle_decimal = num => {\n  const names = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n  let arr = []\n  //parse it out like a string, because js math is such shit\n  let str = toString(num)\n  let decimal = str.match(/\\.([0-9]+)/)\n  if (!decimal || !decimal[0]) {\n    return arr\n  }\n  arr.push('point')\n  let decimals = decimal[0].split('')\n  for (let i = 0; i < decimals.length; i++) {\n    arr.push(names[decimals[i]])\n  }\n  return arr\n}\n\n/** turns an integer into a textual number */\nconst toText = function (obj) {\n  let num = obj.num\n  // handle zero, quickly\n  if (num === 0 || num === '0') {\n    return 'zero' // no?\n  }\n  //big numbers, north of sextillion, aren't gonna work well..\n  //keep them small..\n  if (num > 1e21) {\n    num = toString(num)\n  }\n  let arr = []\n  //handle negative numbers\n  if (num < 0) {\n    arr.push('minus')\n    num = Math.abs(num)\n  }\n  //break-down into units, counts\n  let units = breakdown_magnitudes(num)\n  //build-up the string from its components\n  for (let i = 0; i < units.length; i++) {\n    let unit_name = units[i].unit\n    if (unit_name === 'one') {\n      unit_name = ''\n      //put an 'and' in here\n      if (arr.length > 1) {\n        arr.push('and')\n      }\n    }\n    arr = arr.concat(breakdown_hundred(units[i].count))\n    arr.push(unit_name)\n  }\n  //also support decimals - 'point eight'\n  arr = arr.concat(handle_decimal(num))\n  //remove empties\n  arr = arr.filter(s => s)\n  if (arr.length === 0) {\n    arr[0] = ''\n  }\n  return arr.join(' ')\n}\n\nexport default toText\n\n// console.log(to_text(-1000.8));\n","import textValue from '../toText/index.js'\n\nconst irregulars = {\n  one: 'first',\n  two: 'second',\n  three: 'third',\n  five: 'fifth',\n  eight: 'eighth',\n  nine: 'ninth',\n  twelve: 'twelfth',\n  twenty: 'twentieth',\n  thirty: 'thirtieth',\n  forty: 'fortieth',\n  fourty: 'fourtieth',\n  fifty: 'fiftieth',\n  sixty: 'sixtieth',\n  seventy: 'seventieth',\n  eighty: 'eightieth',\n  ninety: 'ninetieth',\n}\n\n/**\n * convert a javascript number to 'twentieth' format\n * */\nconst textOrdinal = obj => {\n  let words = textValue(obj).split(' ')\n  //convert the last number to an ordinal\n  let last = words[words.length - 1]\n  if (irregulars.hasOwnProperty(last)) {\n    words[words.length - 1] = irregulars[last]\n  } else {\n    words[words.length - 1] = last.replace(/y$/, 'i') + 'th'\n  }\n  return words.join(' ')\n}\n\nexport default textOrdinal\n","import find from './find.js'\nimport parse from './parse.js'\nimport toCardinal from './convert/toCardinal.js'\nimport toOrdinal from './convert/toOrdinal.js'\n\n// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst plugin = function (View) {\n  /**\n   */\n  class Fractions extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Fractions'\n    }\n    parse(n) {\n      return getNth(this, n).map(parse)\n    }\n    get(n) {\n      return getNth(this, n).map(parse)\n    }\n    json(n) {\n      return getNth(this, n).map(p => {\n        let json = p.toView().json(n)[0]\n        let parsed = parse(p)\n        json.fraction = parsed\n        return json\n      }, [])\n    }\n    // become 0.5\n    toDecimal(n) {\n      getNth(this, n).forEach(m => {\n        let { decimal } = parse(m)\n        m = m.replaceWith(String(decimal), true)\n        m.tag('NumericValue')\n        m.unTag('Fraction')\n      })\n      return this\n    }\n    toFraction(n) {\n      getNth(this, n).forEach(m => {\n        let obj = parse(m)\n        if (obj && typeof obj.numerator === 'number' && typeof obj.denominator === 'number') {\n          let str = `${obj.numerator}/${obj.denominator}`\n          this.replace(m, str)\n        }\n      })\n      return this\n    }\n    toOrdinal(n) {\n      getNth(this, n).forEach(m => {\n        let obj = parse(m)\n        let str = toOrdinal(obj)\n        if (m.after('^#Noun').found) {\n          str += ' of' // three fifths of dentists\n        }\n        m.replaceWith(str)\n      })\n      return this\n    }\n    toCardinal(n) {\n      getNth(this, n).forEach(m => {\n        let obj = parse(m)\n        let str = toCardinal(obj)\n        m.replaceWith(str)\n      })\n      return this\n    }\n    toPercentage(n) {\n      getNth(this, n).forEach(m => {\n        let { decimal } = parse(m)\n        let percent = decimal * 100\n        percent = Math.round(percent * 100) / 100 // round it\n        m.replaceWith(`${percent}%`)\n      })\n      return this\n    }\n  }\n\n  View.prototype.fractions = function (n) {\n    let m = find(this)\n    m = getNth(m, n)\n    return new Fractions(this.document, m.pointer)\n  }\n}\n\nexport default plugin\n","import toText from '../../numbers/format/toText/index.js'\nimport textOrdinal from '../../numbers/format/toOrdinal/textOrdinal.js'\n\nconst toOrdinal = function (obj) {\n  // don't divide by zero!\n  if (!obj.numerator || !obj.denominator) {\n    return ''\n  }\n  // create [two] [fifths]\n  let start = toText({ num: obj.numerator })\n  let end = textOrdinal({ num: obj.denominator })\n  // 'one secondth' -> 'one half'\n  if (obj.denominator === 2) {\n    end = 'half'\n  }\n  if (start && end) {\n    if (obj.numerator !== 1) {\n      end += 's'\n    }\n    return `${start} ${end}`\n  }\n  return ''\n}\nexport default toOrdinal\n","import toText from '../../numbers/format/toText/index.js'\n\nconst toCardinal = function (obj) {\n  if (!obj.numerator || !obj.denominator) {\n    return ''\n  }\n  let a = toText({ num: obj.numerator })\n  let b = toText({ num: obj.denominator })\n  return `${a} out of ${b}`\n}\nexport default toCardinal\n","const findFractions = function (doc, n) {\n  // five eighths\n  let m = doc.match('#Fraction+')\n  // remove 'two and five eights'\n  m = m.filter(r => {\n    return !r.lookBehind('#Value and$').found\n  })\n  // thirty seconds\n  m = m.notIf('#Value seconds')\n\n  if (typeof n === 'number') {\n    m = m.eq(n)\n  }\n  return m\n}\nexport default findFractions\n","const ones = 'one|two|three|four|five|six|seven|eight|nine'\nconst tens = 'twenty|thirty|forty|fifty|sixty|seventy|eighty|ninety|fourty'\nconst teens = 'eleven|twelve|thirteen|fourteen|fifteen|sixteen|seventeen|eighteen|nineteen'\n\n// this is a bit of a mess\n// segment consecutive number-words into sensible chunks\nconst findNumbers = function (doc) {\n  let m = doc.match('#Value+')\n\n  //\"50 83\"\n  if (m.has('#NumericValue #NumericValue')) {\n    //a comma may mean two numbers\n    if (m.has('#Value @hasComma #Value')) {\n      m.splitAfter('@hasComma')\n    } else if (m.has('#NumericValue #Fraction')) {\n      m.splitAfter('#NumericValue #Fraction')\n    } else {\n      m = m.splitAfter('#NumericValue')\n    }\n  }\n\n  //three-length\n  if (m.has('#Value #Value #Value') && !m.has('#Multiple')) {\n    //twenty-five-twenty\n    if (m.has('(' + tens + ') #Cardinal #Cardinal')) {\n      m = m.splitAfter('(' + tens + ') #Cardinal')\n    }\n  }\n\n  //two-length ones\n  if (m.has('#Value #Value')) {\n    //june 21st 1992 is two seperate values\n    if (m.has('#NumericValue #NumericValue')) {\n      m = m.splitOn('#Year')\n    }\n    //sixty fifteen\n    if (m.has('(' + tens + ') (' + teens + ')')) {\n      m = m.splitAfter('(' + tens + ')')\n    }\n\n    //\"72 82\"\n    let double = m.match('#Cardinal #Cardinal')\n    if (double.found && !m.has('(point|decimal|#Fraction)')) {\n      //not 'two hundred'\n      if (!double.has('#Cardinal (#Multiple|point|decimal)')) {\n        // two fifty five\n        let noMultiple = m.has(`(${ones}) (${tens})`)\n        // twenty one\n        let tensVal = double.has('(' + tens + ') #Cardinal')\n        // hundredOne\n        let multVal = double.has('#Multiple #Value')\n        //one proper way, 'twenty one', or 'hundred one'\n        if (!noMultiple && !tensVal && !multVal) {\n          // double = double.firstTerm()\n          double.terms().forEach(d => {\n            m = m.splitOn(d)\n          })\n        }\n      }\n    }\n\n    //seventh fifth\n    if (m.match('#Ordinal #Ordinal').match('#TextValue').found && !m.has('#Multiple')) {\n      //the one proper way, 'twenty first'\n      if (!m.has('(' + tens + ') #Ordinal')) {\n        m = m.splitAfter('#Ordinal')\n      }\n    }\n    //fifth five\n    m = m.splitBefore('#Ordinal [#Cardinal]', 0)\n    //five 2017 (support '5 hundred', and 'twenty 5'\n    if (m.has('#TextValue #NumericValue') && !m.has('(' + tens + '|#Multiple)')) {\n      m = m.splitBefore('#TextValue #NumericValue')\n    }\n  }\n\n  //5-8\n  m = m.splitAfter('#NumberRange')\n  // june 5th 1999\n  m = m.splitBefore('#Year')\n  return m\n}\n\nexport default findNumbers\n","import parseText from './toNumber/index.js'\nimport parseFraction from '../../fractions/parse.js'\n\nconst parseNumeric = function (str, m) {\n  str = str.replace(/,/g, '')\n  //parse a numeric-number\n  let arr = str.split(/([0-9.,]*)/)\n  let [prefix, num] = arr\n  let suffix = arr.slice(2).join('')\n  if (num !== '' && m.length < 2) {\n    num = Number(num || str)\n    //ensure that num is an actual number\n    if (typeof num !== 'number') {\n      num = null\n    }\n    // strip an ordinal off the suffix\n    suffix = suffix || ''\n    if (suffix === 'st' || suffix === 'nd' || suffix === 'rd' || suffix === 'th') {\n      suffix = ''\n    }\n    // support M for million, k for thousand\n    // if (suffix === 'm' || suffix === 'M') {\n    //   num *= 1000000\n    //   suffix = ''\n    // }\n    // if (suffix === 'k' || suffix === 'k') {\n    //   num *= 1000\n    //   suffix = ''\n    // }\n    return {\n      prefix: prefix || '',\n      num: num,\n      suffix: suffix,\n    }\n  }\n  return null\n}\n\n// get a numeric value from this phrase\nconst parseNumber = function (m) {\n  if (typeof m === 'string') {\n    return { num: parseText(m) }\n  }\n  let str = m.text('reduced')\n  // reach for '12 litres'\n  let unit = m.growRight('#Unit').match('#Unit$').text('machine')\n  // is it in '3,123' format?\n  let hasComma = /[0-9],[0-9]/.test(m.text('text'))\n  // parse a numeric-number like '$4.00'\n  if (m.terms().length === 1 && !m.has('#Multiple')) {\n    let res = parseNumeric(str, m)\n    if (res !== null) {\n      res.hasComma = hasComma\n      res.unit = unit\n      return res\n    }\n  }\n  // -- parse text-formats --\n  // Fractions: remove 'and a half' etc. from the end\n  let frPart = m.match('#Fraction{2,}$')\n  frPart = frPart.found === false ? m.match('^#Fraction$') : frPart\n  let fraction = null\n  if (frPart.found) {\n    if (frPart.has('#Value and #Value #Fraction')) {\n      frPart = frPart.match('and #Value #Fraction')\n    }\n    fraction = parseFraction(frPart)\n    // remove it from our string\n    m = m.not(frPart)\n    m = m.not('and$')\n    str = m.text('reduced')\n  }\n  let num = 0\n  if (str) {\n    num = parseText(str) || 0\n  }\n  // apply numeric fraction\n  if (fraction && fraction.decimal) {\n    num += fraction.decimal\n  }\n\n\n  return {\n    hasComma,\n    prefix: '',\n    num,\n    suffix: '',\n    isOrdinal: m.has('#Ordinal'),\n    isText: m.has('#TextValue'),\n    isFraction: m.has('#Fraction'),\n    isMoney: m.has('#Money'),\n    unit\n  }\n}\nexport default parseNumber\n","const prefixes = {\n  '¢': 'cents',\n  $: 'dollars',\n  '£': 'pounds',\n  '¥': 'yen',\n  '€': 'euros',\n  '₡': 'colón',\n  '฿': 'baht',\n  '₭': 'kip',\n  '₩': 'won',\n  '₹': 'rupees',\n  '₽': 'ruble',\n  '₺': 'liras',\n}\nconst suffixes = {\n  '%': 'percent',\n  // s: 'seconds',\n  // cm: 'centimetres',\n  // km: 'kilometres',\n  // ft: 'feet',\n  '°': 'degrees'\n}\n\nconst addSuffix = function (obj) {\n  let res = {\n    suffix: '',\n    prefix: obj.prefix,\n  }\n  // $5 to 'five dollars'\n  if (prefixes.hasOwnProperty(obj.prefix)) {\n    res.suffix += ' ' + prefixes[obj.prefix]\n    res.prefix = ''\n  }\n  // 5% to 'five percent'\n  if (suffixes.hasOwnProperty(obj.suffix)) {\n    res.suffix += ' ' + suffixes[obj.suffix]\n  }\n  if (res.suffix && obj.num === 1) {\n    res.suffix = res.suffix.replace(/s$/, '')\n  }\n  // misc other suffixes\n  if (!res.suffix && obj.suffix) {\n    res.suffix += ' ' + obj.suffix\n  }\n  return res\n}\n\nexport default addSuffix","import numOrdinal from './toOrdinal/numOrdinal.js'\nimport textOrdinal from './toOrdinal/textOrdinal.js'\nimport textCardinal from './toText/index.js'\nimport makeSuffix from './suffix.js'\n\nconst format = function (obj, fmt) {\n  if (fmt === 'TextOrdinal') {\n    let { prefix, suffix } = makeSuffix(obj)\n    return prefix + textOrdinal(obj) + suffix\n  }\n  if (fmt === 'Ordinal') {\n    return obj.prefix + numOrdinal(obj) + obj.suffix\n  }\n  if (fmt === 'TextCardinal') {\n    let { prefix, suffix } = makeSuffix(obj)\n    return prefix + textCardinal(obj) + suffix\n  }\n  // assume Cardinal\n  let num = obj.num\n  if (obj.hasComma) {\n    num = num.toLocaleString()\n  }\n  return obj.prefix + String(num) + obj.suffix\n}\nexport default format","import toString from '../../_toString.js'\n\n/**\n * turn a number like 5 into an ordinal like 5th\n */\nconst numOrdinal = function (obj) {\n  let num = obj.num\n  if (!num && num !== 0) {\n    return null\n  }\n  //the teens are all 'th'\n  let tens = num % 100\n  if (tens > 10 && tens < 20) {\n    return String(num) + 'th'\n  }\n  //the rest of 'em\n  const mapping = {\n    0: 'th',\n    1: 'st',\n    2: 'nd',\n    3: 'rd',\n  }\n  let str = toString(num)\n  let last = str.slice(str.length - 1, str.length)\n  if (mapping[last]) {\n    str += mapping[last]\n  } else {\n    str += 'th'\n  }\n  return str\n}\n\nexport default numOrdinal\n","import find from './find.js'\nimport parse from './parse/index.js'\nimport format from './format/index.js'\n\n// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst addMethod = function (View) {\n  /**   */\n  class Numbers extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Numbers'\n    }\n    parse(n) {\n      return getNth(this, n).map(parse)\n    }\n    get(n) {\n      return getNth(this, n).map(parse).map(o => o.num)\n    }\n    json(n) {\n      let opts = typeof n === 'object' ? n : {}\n      return getNth(this, n).map(p => {\n        let json = p.toView().json(opts)[0]\n        let parsed = parse(p)\n        json.number = {\n          prefix: parsed.prefix,\n          num: parsed.num,\n          suffix: parsed.suffix,\n          hasComma: parsed.hasComma,\n          unit: parsed.unit\n        }\n        return json\n      }, [])\n    }\n    /** any known measurement unit, for the number */\n    units() {\n      return this.growRight('#Unit').match('#Unit$')\n    }\n    /** return only ordinal numbers */\n    isOrdinal() {\n      return this.if('#Ordinal')\n    }\n    /** return only cardinal numbers*/\n    isCardinal() {\n      return this.if('#Cardinal')\n    }\n\n    /** convert to numeric form like '8' or '8th' */\n    toNumber() {\n      let m = this.if('#TextValue')\n      m.forEach(val => {\n        let obj = parse(val)\n        if (obj.num === null) {\n          return\n        }\n        let fmt = val.has('#Ordinal') ? 'Ordinal' : 'Cardinal'\n        let str = format(obj, fmt)\n        val.replaceWith(str, { tags: true })\n        val.tag('NumericValue')\n      })\n      return this\n    }\n    /** add commas, or nicer formatting for numbers */\n    toLocaleString() {\n      let m = this\n      m.forEach((val) => {\n        let obj = parse(val)\n        if (obj.num === null) {\n          return\n        }\n        let num = obj.num.toLocaleString()\n        // support ordinal ending, too\n        if (val.has('#Ordinal')) {\n          let str = format(obj, 'Ordinal')\n          let end = str.match(/[a-z]+$/)\n          if (end) {\n            num += end[0] || ''\n          }\n        }\n        val.replaceWith(num, { tags: true })\n      })\n      return this\n    }\n    /** convert to numeric form like 'eight' or 'eighth' */\n    toText() {\n      let m = this\n      let res = m.map(val => {\n        if (val.has('#TextValue')) {\n          return val\n        }\n        let obj = parse(val)\n        if (obj.num === null) {\n          return val\n        }\n        let fmt = val.has('#Ordinal') ? 'TextOrdinal' : 'TextCardinal'\n        let str = format(obj, fmt)\n        val.replaceWith(str, { tags: true })\n        val.tag('TextValue')\n        return val\n      })\n      return new Numbers(res.document, res.pointer)\n    }\n    /** convert ordinal to cardinal form, like 'eight', or '8' */\n    toCardinal() {\n      let m = this\n      let res = m.map(val => {\n        if (!val.has('#Ordinal')) {\n          return val\n        }\n        let obj = parse(val)\n        if (obj.num === null) {\n          return val\n        }\n        let fmt = val.has('#TextValue') ? 'TextCardinal' : 'Cardinal'\n        let str = format(obj, fmt)\n        val.replaceWith(str, { tags: true })\n        val.tag('Cardinal')\n        return val\n      })\n      return new Numbers(res.document, res.pointer)\n    }\n    /** convert cardinal to ordinal form, like 'eighth', or '8th' */\n    toOrdinal() {\n      let m = this\n      let res = m.map(val => {\n        if (val.has('#Ordinal')) {\n          return val\n        }\n        let obj = parse(val)\n        if (obj.num === null) {\n          return val\n        }\n        let fmt = val.has('#TextValue') ? 'TextOrdinal' : 'Ordinal'\n        let str = format(obj, fmt)\n        val.replaceWith(str, { tags: true })\n        val.tag('Ordinal')\n        return val\n      })\n      return new Numbers(res.document, res.pointer)\n    }\n\n    /** return only numbers that are == n */\n    isEqual(n) {\n      return this.filter((val) => {\n        let num = parse(val).num\n        return num === n\n      })\n    }\n    /** return only numbers that are > n*/\n    greaterThan(n) {\n      return this.filter((val) => {\n        let num = parse(val).num\n        return num > n\n      })\n    }\n    /** return only numbers that are < n*/\n    lessThan(n) {\n      return this.filter((val) => {\n        let num = parse(val).num\n        return num < n\n      })\n    }\n    /** return only numbers > min and < max */\n    between(min, max) {\n      return this.filter((val) => {\n        let num = parse(val).num\n        return num > min && num < max\n      })\n    }\n    /** set these number to n */\n    set(n) {\n      if (n === undefined) {\n        return this // don't bother\n      }\n      if (typeof n === 'string') {\n        n = parse(n).num\n      }\n      let m = this\n      let res = m.map((val) => {\n        let obj = parse(val)\n        obj.num = n\n        if (obj.num === null) {\n          return val\n        }\n        let fmt = val.has('#Ordinal') ? 'Ordinal' : 'Cardinal'\n        if (val.has('#TextValue')) {\n          fmt = val.has('#Ordinal') ? 'TextOrdinal' : 'TextCardinal'\n        }\n        let str = format(obj, fmt)\n        // add commas to number\n        if (obj.hasComma && fmt === 'Cardinal') {\n          str = Number(str).toLocaleString()\n        }\n        val = val.not('#Currency')\n        val.replaceWith(str, { tags: true })\n        // handle plural/singular unit\n        // agreeUnits(agree, val, obj)\n        return val\n      })\n      return new Numbers(res.document, res.pointer)\n    }\n    add(n) {\n      if (!n) {\n        return this // don't bother\n      }\n      if (typeof n === 'string') {\n        n = parse(n).num\n      }\n      let m = this\n      let res = m.map((val) => {\n        let obj = parse(val)\n        if (obj.num === null) {\n          return val\n        }\n        obj.num += n\n        let fmt = val.has('#Ordinal') ? 'Ordinal' : 'Cardinal'\n        if (obj.isText) {\n          fmt = val.has('#Ordinal') ? 'TextOrdinal' : 'TextCardinal'\n        }\n        let str = format(obj, fmt)\n        val.replaceWith(str, { tags: true })\n        // handle plural/singular unit\n        // agreeUnits(agree, val, obj)\n        return val\n      })\n      return new Numbers(res.document, res.pointer)\n    }\n    /** decrease each number by n*/\n    subtract(n, agree) {\n      return this.add(n * -1, agree)\n    }\n    /** increase each number by 1 */\n    increment(agree) {\n      return this.add(1, agree)\n    }\n    /** decrease each number by 1 */\n    decrement(agree) {\n      return this.add(-1, agree)\n    }\n    // overloaded - keep Numbers class\n    update(pointer) {\n      let m = new Numbers(this.document, pointer)\n      m._cache = this._cache // share this full thing\n      return m\n    }\n  }\n  // aliases\n  Numbers.prototype.toNice = Numbers.prototype.toLocaleString\n  Numbers.prototype.isBetween = Numbers.prototype.between\n  Numbers.prototype.minus = Numbers.prototype.subtract\n  Numbers.prototype.plus = Numbers.prototype.add\n  Numbers.prototype.equals = Numbers.prototype.isEqual\n\n  View.prototype.numbers = function (n) {\n    let m = find(this)\n    m = getNth(m, n)\n    return new Numbers(this.document, m.pointer)\n  }\n  View.prototype.percentages = function (n) {\n    let m = find(this)\n    m = m.filter(v => v.has('#Percent') || v.after('^percent'))\n    m = getNth(m, n)\n    return new Numbers(this.document, m.pointer)\n  }\n  View.prototype.money = function (n) {\n    let m = find(this)\n    m = m.filter(v => v.has('#Money') || v.after('^#Currency'))\n    m = getNth(m, n)\n    return new Numbers(this.document, m.pointer)\n  }\n  // alias\n  View.prototype.values = View.prototype.numbers\n}\nexport default addMethod\n","import fractions from './fractions/api.js'\nimport numbers from './numbers/api.js'\n\nconst api = function (View) {\n  fractions(View)\n  numbers(View)\n}\n\nexport default {\n  api,\n}\n","const defaults = {\n  people: true,\n  emails: true,\n  phoneNumbers: true,\n  places: true,\n}\n\nconst redact = function (opts = {}) {\n  opts = Object.assign({}, defaults, opts)\n  if (opts.people !== false) {\n    this.people().replaceWith('██████████')\n  }\n  if (opts.emails !== false) {\n    this.emails().replaceWith('██████████')\n  }\n  if (opts.places !== false) {\n    this.places().replaceWith('██████████')\n  }\n  if (opts.phoneNumbers !== false) {\n    this.phoneNumbers().replaceWith('███████')\n  }\n  return this\n}\n\nconst plugin = {\n  api: function (View) {\n    View.prototype.redact = redact\n  }\n}\nexport default plugin\n","import findMain from './mainClause.js'\n\nconst grammar = function (vb) {\n  let tense = null\n  if (vb.has('#PastTense')) {\n    tense = 'PastTense'\n  } else if (vb.has('#FutureTense')) {\n    tense = 'FutureTense'\n  } else if (vb.has('#PresentTense')) {\n    tense = 'PresentTense'\n  }\n  return {\n    tense\n  }\n}\n\nconst parse = function (s) {\n  let clauses = s.clauses()\n  let main = findMain(clauses)\n  let chunks = main.chunks()\n  let subj = s.none()\n  let verb = s.none()\n  let pred = s.none()\n  chunks.forEach((ch, i) => {\n    if (i === 0 && !ch.has('<Verb>')) {\n      subj = ch\n      return\n    }\n    if (!verb.found && ch.has('<Verb>')) {\n      verb = ch\n      return\n    }\n    if (verb.found) {\n      pred = pred.concat(ch)\n    }\n  })\n  // cleanup a missed parse\n  if (verb.found && !subj.found) {\n    subj = verb.before('<Noun>+').first()\n  }\n  return {\n    subj,\n    verb,\n    pred,\n    grammar: grammar(verb)\n  }\n}\nexport default parse","// if a clause starts with these, it's not a main clause\nconst subordinate = `(after|although|as|because|before|if|since|than|that|though|when|whenever|where|whereas|wherever|whether|while|why|unless|until|once)`\nconst relative = `(that|which|whichever|who|whoever|whom|whose|whomever)`\n\n//try to remove secondary clauses\nconst mainClause = function (s) {\n  let m = s\n  if (m.length === 1) {\n    return m\n  }\n  // if there's no verb, it's dependent\n  m = m.if('#Verb')\n  if (m.length === 1) {\n    return m\n  }\n  // this is a signal for subordinate-clauses\n  m = m.ifNo(subordinate)\n  m = m.ifNo('^even (if|though)')\n  m = m.ifNo('^so that')\n  m = m.ifNo('^rather than')\n  m = m.ifNo('^provided that')\n  if (m.length === 1) {\n    return m\n  }\n  // relative clauses\n  m = m.ifNo(relative)\n  if (m.length === 1) {\n    return m\n  }\n\n  m = m.ifNo('(despite|during|before|through|throughout)')\n  if (m.length === 1) {\n    return m\n  }\n  // did we go too far?\n  if (m.length === 0) {\n    m = s\n  }\n  // choose the first one?\n  return m.eq(0)\n}\nexport default mainClause\n","import isQuestion from './questions.js'\nimport parse from './parse/index.js'\nimport toPast from './conjugate/toPast.js'\nimport toPresent from './conjugate/toPresent.js'\nimport toFuture from './conjugate/toFuture.js'\nimport { toNegative, toPositive } from './conjugate/toNegative.js'\nimport toInfinitive from './conjugate/toInfinitive.js'\n\n// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst api = function (View) {\n  class Sentences extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Sentences'\n    }\n    json(opts = {}) {\n      return this.map(m => {\n        let json = m.toView().json(opts)[0] || {}\n        let { subj, verb, pred, grammar } = parse(m)\n        json.sentence = {\n          subject: subj.text('normal'),\n          verb: verb.text('normal'),\n          predicate: pred.text('normal'),\n          grammar\n        }\n        return json\n      }, [])\n    }\n    toPastTense(n) {\n      return getNth(this, n).map(s => {\n        let parsed = parse(s)\n        return toPast(s, parsed)\n      })\n    }\n    toPresentTense(n) {\n      return getNth(this, n).map(s => {\n        let parsed = parse(s)\n        return toPresent(s, parsed)\n      })\n    }\n    toFutureTense(n) {\n      return getNth(this, n).map(s => {\n        let parsed = parse(s)\n        s = toFuture(s, parsed)\n        return s\n      })\n    }\n    toInfinitive(n) {\n      return getNth(this, n).map(s => {\n        let parsed = parse(s)\n        return toInfinitive(s, parsed)\n      })\n    }\n    toNegative(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parse(vb)\n        return toNegative(vb, parsed)\n      })\n    }\n    toPositive(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parse(vb)\n        return toPositive(vb, parsed)\n      })\n    }\n    isQuestion(n) {\n      return this.questions(n)\n    }\n    isExclamation(n) {\n      let res = this.filter(s => s.lastTerm().has('@hasExclamation'))\n      return getNth(res, n)\n    }\n    isStatement(n) {\n      let res = this.filter(s => !s.isExclamation().found && !s.isQuestion().found)\n      return getNth(res, n)\n    }\n    // overloaded - keep Sentences class\n    update(pointer) {\n      let m = new Sentences(this.document, pointer)\n      m._cache = this._cache // share this full thing\n      return m\n    }\n  }\n  // aliases\n  Sentences.prototype.toPresent = Sentences.prototype.toPresentTense\n  Sentences.prototype.toPast = Sentences.prototype.toPastTense\n  Sentences.prototype.toFuture = Sentences.prototype.toFutureTense\n\n  const methods = {\n    sentences: function (n) {\n      let m = this.map(s => s.fullSentence())\n      m = getNth(m, n)\n      return new Sentences(this.document, m.pointer)\n    },\n    questions: function (n) {\n      let m = isQuestion(this)\n      return getNth(m, n)\n    },\n  }\n\n  Object.assign(View.prototype, methods)\n}\nexport default api\n","import api from './api.js'\n\nexport default { api }\n","const toPast = function (s) {\n  let verbs = s.verbs()\n  // translate the first verb, no-stress\n  let first = verbs.eq(0)\n  // already past\n  if (first.has('#PastTense')) {\n    return s\n  }\n  first.toPastTense()\n\n  // force agreement with any 2nd/3rd verbs:\n  if (verbs.length > 1) {\n    verbs = verbs.slice(1)\n    // remove any sorta infinitive - 'to engage'\n    verbs = verbs.filter((v) => !v.lookBehind('to$').found)\n\n    // keep -ing verbs\n    verbs = verbs.if('#PresentTense')\n    verbs = verbs.notIf('#Gerund')\n\n    //run-on infinitive-list - 'to walk, sit and eat'\n    let list = s.match('to #Verb+ #Conjunction #Verb').terms()\n    verbs = verbs.not(list)\n\n    // otherwise, I guess so?\n    if (verbs.found) {\n      verbs.verbs().toPastTense()\n    }\n  }\n\n  // s.compute('chunks')\n  return s\n}\nexport default toPast","const toPresent = function (s) {\n  let verbs = s.verbs()\n  // translate the first verb, no-stress\n  let first = verbs.eq(0)\n  // already present\n  // if (first.has('#PresentTense')) {\n  //   return s\n  // }\n  first.toPresentTense()\n\n  // force agreement with any 2nd/3rd verbs:\n  if (verbs.length > 1) {\n    verbs = verbs.slice(1)\n    // remove any sorta infinitive - 'to engage'\n    verbs = verbs.filter((v) => !v.lookBehind('to$').found)\n\n    // keep -ing verbs\n    // verbs = verbs.if('#PresentTense')\n    verbs = verbs.notIf('#Gerund')\n\n    //run-on infinitive-list - 'to walk, sit and eat'\n    // let list = s.match('to #Verb+ #Conjunction #Verb').terms()\n    // verbs = verbs.not(list)\n\n    // otherwise, I guess so?\n    if (verbs.found) {\n      verbs.verbs().toPresentTense()\n    }\n  }\n\n  // s.compute('chunks')\n  return s\n}\nexport default toPresent","const toFuture = function (s) {\n  let verbs = s.verbs()\n  // translate the first verb, no-stress\n  let first = verbs.eq(0)\n  first.toFutureTense()\n  s = s.fullSentence()\n  verbs = s.verbs()//re-do it\n  // verbs.debug()\n  // force agreement with any 2nd/3rd verbs:\n  if (verbs.length > 1) {\n    verbs = verbs.slice(1)\n    // which following-verbs should we also change?\n    let toChange = verbs.filter((vb) => {\n      // remove any sorta infinitive - 'to engage'\n      if (vb.lookBehind('to$').found) {\n        return false\n      }\n      // is watching\n      if (vb.has('#Copula #Gerund')) {\n        return true\n      }\n      // keep -ing verbs\n      if (vb.has('#Gerund')) {\n        return false\n      }\n      // he is green and he is friendly\n      if (vb.has('#Copula')) {\n        return true\n      }\n      // 'he will see when he watches'\n      if (vb.has('#PresentTense') && !vb.has('#Infinitive') && vb.lookBefore('(he|she|it|that|which)$').found) {\n        return false\n      }\n      return true\n    })\n    // otherwise, change em too\n    if (toChange.found) {\n      toChange.forEach(m => {\n        //extra rules for 'is'\n        if (m.has('#Copula')) {\n          // when he was out..\n          m.match('was').replaceWith('is')\n          // when he is out\n          m.match('is').replaceWith('will be')\n          return\n        }\n        // if (m.has('#PastTense')) {\n        //   m.toPresentTense()\n        //   return\n        // }\n        m.toInfinitive()\n      })\n    }\n  }\n  return s\n}\nexport default toFuture","const toInfinitive = function (s) {\n  s.verbs().toInfinitive()\n  // s.compute('chunks')\n  return s\n}\nexport default toInfinitive","const toNegative = function (s) {\n  s.verbs().first().toNegative().compute('chunks')\n  return s\n}\nconst toPositive = function (s) {\n  s.verbs().first().toPositive().compute('chunks')\n  return s\n}\nexport { toNegative, toPositive }","//is this sentence asking a question?\nconst isQuestion = function (doc) {\n  let clauses = doc.clauses()\n\n  // Has ellipsis at the end means it's probably not a question\n  // e.g., Is this just fantasy...\n  if (/\\.\\.$/.test(doc.out('text'))) {\n    return false\n  }\n\n  // Starts with question word, but has a comma, so probably not a question\n  // e.g., Why are we caught in a land slide, no escape from reality\n  if (doc.has('^#QuestionWord') && doc.has('@hasComma')) {\n    return false\n  }\n\n  // do you see it or not\n  if (doc.has('or not$')) {\n    return true\n  }\n\n  // Starts with a #QuestionWord\n  // e.g., What open your eyes look up to the skies and see\n  if (doc.has('^#QuestionWord')) {\n    return true\n  }\n\n  // Second word is a #QuestionWord\n  // e.g., I'm what a poor boy\n  // case ts.has('^\\w+\\s#QuestionWord'):\n  // return true;\n\n  // is it, do you - start of sentence\n  // e.g., Do I need no sympathy\n  if (doc.has('^(do|does|did|is|was|can|could|will|would|may) #Noun')) {\n    return true\n  }\n\n  // these are a little more loose..\n  // e.g., Must I be come easy come easy go\n  if (doc.has('^(have|must) you')) {\n    return true\n  }\n\n  // Clause starts with a question word\n  // e.g., Anyway the wind blows, what doesn't really matter to me\n  // if (clauses.has('^#QuestionWord')) {\n  //   return true\n  // }\n\n  //is wayne gretskzy alive\n  if (clauses.has('(do|does|is|was) #Noun+ #Adverb? (#Adjective|#Infinitive)$')) {\n    return true\n  }\n\n  // Probably not a question\n  return false\n}\n\nconst findQuestions = function (view) {\n  const hasQ = /\\?/\n  const { document } = view\n  return view.filter(m => {\n    let terms = m.docs[0] || []\n    let lastTerm = terms[terms.length - 1]\n    // is it not a full sentence?\n    if (!lastTerm || document[lastTerm.index[0]].length !== terms.length) {\n      return false\n    }\n    // does it end with a question mark?\n    if (hasQ.test(lastTerm.post)) {\n      return true\n    }\n    // try to guess a sentence without a question-mark\n    return isQuestion(m)\n  })\n}\nexport default findQuestions\n","const find = function (doc) {\n  let m = doc.match('#Honorific+? #Person+')\n  return m\n}\nexport default find\n","const parse = function (m) {\n  let res = {}\n  res.firstName = m.match('#FirstName+')\n  res.lastName = m.match('#LastName+')\n  res.honorific = m.match('#Honorific+')\n\n  let last = res.lastName\n  let first = res.firstName\n  if (!first.found || !last.found) {\n    // let p = m.clone()\n    // assume 'Mr Springer' is a last-name\n    if (!first.found && !last.found && m.has('^#Honorific .$')) {\n      res.lastName = m.match('.$')\n      return res\n    }\n  }\n  return res\n}\nexport default parse\n","/*\n  Important notice - \n  this method makes many assumptions about gender-identity, in-order to assign grammatical gender.\n  it should not be used for any other purposes, other than resolving pronouns in english\n*/\nconst m = 'male'\nconst f = 'female'\n\n// known gendered honorifics\nconst honorifics = {\n  mr: m,\n  mrs: f,\n  miss: f,\n  madam: f,\n\n  // british stuff\n  king: m,\n  queen: f,\n  duke: m,\n  duchess: f,\n  baron: m,\n  baroness: f,\n  count: m,\n  countess: f,\n  prince: m,\n  princess: f,\n  sire: m,\n  dame: f,\n  lady: f,\n\n  ayatullah: m, //i think?\n\n  congressman: m,\n  congresswoman: f,\n  'first lady': f,\n\n  // marked as non-binary\n  mx: null,\n}\n\nconst predictGender = function (parsed, person) {\n  let { firstName, honorific } = parsed\n  // use first-name as signal-signal\n  if (firstName.has('#FemaleName')) {\n    return f\n  }\n  if (firstName.has('#MaleName')) {\n    return m\n  }\n  // use honorics as gender-signal\n  if (honorific.found) {\n    let hon = honorific.text('normal')\n    hon = hon.replace(/\\./g, '') //clean it up a bit\n    if (honorifics.hasOwnProperty(hon)) {\n      return honorifics[hon]\n    }\n    // her excelency\n    if (/^her /.test(hon)) {\n      return f\n    }\n    if (/^his /.test(hon)) {\n      return m\n    }\n  }\n  // offer used-pronouns as a signal\n  let after = person.after()\n  if (!after.has('#Person') && after.has('#Pronoun')) {\n    let pro = after.match('#Pronoun')\n    // manual use of gender-neutral\n    if (pro.has('(they|their)')) {\n      return null\n    }\n    let hasMasc = pro.has('(he|his)')\n    let hasFem = pro.has('(she|her|hers)')\n    if (hasMasc && !hasFem) {\n      return m\n    }\n    if (hasFem && !hasMasc) {\n      return f\n    }\n  }\n  return null\n}\nexport default predictGender\n","import find from './find.js'\nimport parse from './parse.js'\nimport gender from './gender.js'\n\n// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst addMethod = function (View) {\n  /**\n   *\n   */\n  class People extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'People'\n    }\n    parse(n) {\n      return getNth(this, n).map(parse)\n    }\n    json(n) {\n      let opts = typeof n === 'object' ? n : {}\n      return getNth(this, n).map(p => {\n        let json = p.toView().json(opts)[0]\n        let parsed = parse(p)\n        json.person = {\n          firstName: parsed.firstName.text('normal'),\n          lastName: parsed.lastName.text('normal'),\n          honorific: parsed.honorific.text('normal'),\n          presumed_gender: gender(parsed, p),\n        }\n        return json\n      }, [])\n    }\n    // overloaded - keep People class\n    update(pointer) {\n      let m = new People(this.document, pointer)\n      m._cache = this._cache // share this full thing\n      return m\n    }\n  }\n\n  View.prototype.people = function (n) {\n    let m = find(this)\n    m = getNth(m, n)\n    return new People(this.document, m.pointer)\n  }\n}\nexport default addMethod\n","// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\n//combine them with .topics() method\nconst find = function (n) {\n  let r = this.clauses()\n  // Find people, places, and organizations\n  let m = r.people()\n  m = m.concat(r.places())\n  m = m.concat(r.organizations())\n  m = m.not('(someone|man|woman|mother|brother|sister|father)')\n  //return them to normal ordering\n  m = m.sort('seq')\n  // m = m.unique()\n  m = getNth(m, n)\n  return m\n}\n\nconst api = function (View) {\n  View.prototype.topics = find\n}\nexport default api\n","import people from './people/api.js'\nimport places from './places/api.js'\nimport orgs from './orgs/api.js'\nimport topics from './topics.js'\n\nconst api = function (View) {\n  people(View)\n  places(View)\n  orgs(View)\n  topics(View)\n}\nexport default { api }\n","import find from './find.js'\n\n// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst addMethod = function (View) {\n  View.prototype.places = function (n) {\n    let m = find(this)\n    m = getNth(m, n)\n    return new View(this.document, m.pointer)\n  }\n}\nexport default addMethod\n","const find = function (doc) {\n  let m = doc.match('(#Place|#Address)+')\n\n  // split all commas except for 'paris, france'\n  let splits = m.match('@hasComma')\n  splits = splits.filter(c => {\n    // split 'europe, china'\n    if (c.has('(asia|africa|europe|america)$')) {\n      return true\n    }\n    // don't split 'paris, france'\n    if (c.has('(#City|#Region|#ProperNoun)$') && c.after('^(#Country|#Region)').found) {\n      return false\n    }\n    return true\n  })\n  m = m.splitAfter(splits)\n  return m\n}\nexport default find\n","// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst api = function (View) {\n  View.prototype.organizations = function (n) {\n    let m = this.match('#Organization+')\n    return getNth(m, n)\n  }\n}\nexport default api\n","const findVerbs = function (doc) {\n  let m = doc.match('<Verb>')\n  // want to see\n  m = m.not('(#Conjunction && !to)')\n  // by walking\n  m = m.not('#Preposition')\n\n\n  m = m.splitAfter('@hasComma')\n\n  // the reason he will is ...\n  // all i do is talk\n  m = m.splitAfter('[(do|did|am|was|is|will)] (is|was)', 0)\n  // m = m.splitAfter('[(do|did|am|was|is|will)] #PresentTense', 0)\n\n  // cool\n\n  // like being pampered\n  m = m.splitBefore('(#Verb && !#Copula) [being] #Verb', 0)\n  // like to be pampered\n  m = m.splitBefore('#Verb [to be] #Verb', 0)\n\n  // implicit conjugation - 'help fix'\n\n  m = m.splitAfter('[help] #PresentTense', 0)\n  // what i can sell is..\n  m = m.splitBefore('(#PresentTense|#PastTense) [#Copula]$', 0)\n  // what i can sell will be\n  m = m.splitBefore('(#PresentTense|#PastTense) [will be]$', 0)\n\n  // 'allow yourself'\n  m = m.not('#Reflexive$')\n\n  //ensure there's actually a verb\n  m = m.if('#Verb')\n  // the reason he will is ...\n  // ensure it's not two verbs\n\n  // held annually is called\n  if (m.has('(#Verb && !#Auxiliary) #Adverb+? #Copula')) {\n    m = m.splitBefore('#Copula')\n  }\n  return m\n}\nexport default findVerbs\n","// split adverbs as before/after the root\nconst getAdverbs = function (vb, root) {\n  let res = {\n    pre: vb.none(),\n    post: vb.none(),\n  }\n  if (!vb.has('#Adverb')) {\n    return res\n  }\n  // pivot on the main verb\n  let parts = vb.splitOn(root)\n  if (parts.length === 3) {\n    return {\n      pre: parts.eq(0).adverbs(),\n      post: parts.eq(2).adverbs(),\n    }\n  }\n  // it must be the second one\n  if (parts.eq(0).isDoc(root)) {\n    res.post = parts.eq(1).adverbs()\n    return res\n  }\n  res.pre = parts.eq(0).adverbs()\n  return res\n}\nexport default getAdverbs\n","import getRoot from './root.js'\nimport getAdverbs from './adverbs.js'\n\nconst getAuxiliary = function (vb, root) {\n  let parts = vb.splitBefore(root)\n  if (parts.length <= 1) {\n    return vb.none()\n  }\n  let aux = parts.eq(0)\n  aux = aux.not('(#Adverb|#Negative|#Prefix)')\n  return aux\n}\n\nconst getNegative = function (vb) {\n  return vb.match('#Negative')\n}\n\n// pull-apart phrasal-verb into verb-particle\nconst getPhrasal = function (root) {\n  if (!root.has('(#Particle|#PhrasalVerb)')) {\n    return {\n      verb: root.none(),\n      particle: root.none()\n    }\n  }\n  let particle = root.match('#Particle$')\n  return {\n    verb: root.not(particle),\n    particle: particle,\n  }\n}\n\nconst parseVerb = function (view) {\n  let vb = view.clone()\n  vb.contractions().expand()\n  const root = getRoot(vb)\n  let res = {\n    root: root,\n    prefix: vb.match('#Prefix'),\n    adverbs: getAdverbs(vb, root),\n    auxiliary: getAuxiliary(vb, root),\n    negative: getNegative(vb),\n    phrasal: getPhrasal(root),\n  }\n  return res\n}\nexport default parseVerb\n","// find the main verb, from a verb phrase\nconst getMain = function (vb) {\n  let root = vb\n  if (vb.wordCount() > 1) {\n    root = vb.not('(#Negative|#Auxiliary|#Modal|#Adverb|#Prefix)')\n  }\n  // fallback to just the last word, sometimes\n  if (root.length > 1 && !root.has('#Phrasal #Particle')) {\n    root = root.last()\n  }\n  // look for more modals\n  root = root.not('(want|wants|wanted) to')\n\n  // fallback\n  if (!root.found) {\n    root = vb.not('#Negative')\n    return root\n  }\n  return root\n}\nexport default getMain\n","const present = { tense: 'PresentTense' }\nconst conditional = { conditional: true }\nconst future = { tense: 'FutureTense' }\nconst prog = { progressive: true }\nconst past = { tense: 'PastTense' }\nconst complete = { complete: true, progressive: false }\nconst passive = { passive: true }\nconst plural = { plural: true }\nconst singular = { plural: false }\n\nconst getData = function (tags) {\n  let data = {}\n  tags.forEach(o => {\n    Object.assign(data, o)\n  })\n  return data\n}\n\nconst verbForms = {\n  // === Simple ===\n  'imperative': [\n    // walk!\n    ['#Imperative', []],\n  ],\n\n  'want-infinitive': [\n    ['^(want|wants|wanted) to #Infinitive$', [present]],\n    ['^wanted to #Infinitive$', [past]],\n    ['^will want to #Infinitive$', [future]],\n  ],\n\n  'gerund-phrase': [\n    // started looking\n    ['^#PastTense #Gerund$', [past]],\n    // starts looking\n    ['^#PresentTense #Gerund$', [present]],\n    // start looking\n    ['^#Infinitive #Gerund$', [present]],\n    // will start looking\n    ['^will #Infinitive #Gerund$', [future]],\n    // have started looking\n    ['^have #PastTense #Gerund$', [past]],\n    // will have started looking\n    ['^will have #PastTense #Gerund$', [past]],\n  ],\n\n  'simple-present': [\n    // he walks',\n    ['^#PresentTense$', [present]],\n    // we walk\n    ['^#Infinitive$', [present]],\n  ],\n  'simple-past': [\n    // he walked',\n    ['^#PastTense$', [past]],\n  ],\n  'simple-future': [\n    // he will walk\n    ['^will #Adverb? #Infinitive', [future]],\n  ],\n\n  // === Progressive ===\n  'present-progressive': [\n    // he is walking\n    ['^(is|are|am) #Gerund$', [present, prog]],\n  ],\n  'past-progressive': [\n    // he was walking\n    ['^(was|were) #Gerund$', [past, prog]],\n  ],\n  'future-progressive': [\n    // he will be\n    ['^will be #Gerund$', [future, prog]],\n  ],\n\n  // === Perfect ===\n  'present-perfect': [\n    // he has walked\n    ['^(has|have) #PastTense$', [past, complete]], //past?\n  ],\n  'past-perfect': [\n    // he had walked\n    ['^had #PastTense$', [past, complete]],\n    // had been to see\n    ['^had #PastTense to #Infinitive', [past, complete]],\n  ],\n  'future-perfect': [\n    // he will have\n    ['^will have #PastTense$', [future, complete]],\n  ],\n\n  // === Progressive-perfect ===\n  'present-perfect-progressive': [\n    // he has been walking\n    ['^(has|have) been #Gerund$', [past, prog]], //present?\n  ],\n  'past-perfect-progressive': [\n    // he had been\n    ['^had been #Gerund$', [past, prog]],\n  ],\n  'future-perfect-progressive': [\n    // will have been\n    ['^will have been #Gerund$', [future, prog]],\n  ],\n\n  // ==== Passive ===\n  'passive-past': [\n    // got walked, was walked, were walked\n    ['(got|were|was) #Passive', [past, passive]],\n    // was being walked\n    ['^(was|were) being #Passive', [past, passive]],\n    // had been walked, have been eaten\n    ['^(had|have) been #Passive', [past, passive]],\n  ],\n  'passive-present': [\n    // is walked, are stolen\n    ['^(is|are|am) #Passive', [present, passive]],\n    // is being walked\n    ['^(is|are|am) being #Passive', [present, passive]],\n    // has been cleaned\n    ['^has been #Passive', [present, passive]],\n  ],\n  'passive-future': [\n    // will have been walked\n    ['will have been #Passive', [future, passive, conditional]],\n    // will be cleaned\n    ['will be being? #Passive', [future, passive, conditional]],\n  ],\n\n  // === Conditional ===\n  'present-conditional': [\n    // would be walked\n    ['would be #PastTense', [present, conditional]],\n  ],\n  'past-conditional': [\n    // would have been walked\n    ['would have been #PastTense', [past, conditional]],\n  ],\n\n  // ==== Auxiliary ===\n  'auxiliary-future': [\n    // going to drink\n    ['(is|are|am|was) going to (#Infinitive|#PresentTense)', [future]],\n  ],\n  'auxiliary-past': [\n    // he did walk\n    ['^did #Infinitive$', [past, singular]],\n    // used to walk\n    ['^used to #Infinitive$', [past, complete]],\n  ],\n  'auxiliary-present': [\n    // we do walk\n    ['^(does|do) #Infinitive$', [present, complete, plural]],\n  ],\n\n  // === modals ===\n  'modal-past': [\n    // he could have walked\n    ['^(could|must|should|shall) have #PastTense$', [past]],\n  ],\n  'modal-infinitive': [\n    // he can walk\n    ['^#Modal #Infinitive$', []],\n  ],\n\n  'infinitive': [\n    // walk\n    ['^#Infinitive$', []],\n  ],\n}\n\nlet list = []\nObject.keys(verbForms).map(k => {\n  verbForms[k].forEach(a => {\n    list.push({\n      name: k,\n      match: a[0],\n      data: getData(a[1]),\n    })\n  })\n})\n\nexport default list\n","import forms from './forms.js'\n\nconst cleanUp = function (vb, res) {\n  vb = vb.clone()\n  // remove adverbs\n  if (res.adverbs.post && res.adverbs.post.found) {\n    vb.remove(res.adverbs.post)\n  }\n  if (res.adverbs.pre && res.adverbs.pre.found) {\n    vb.remove(res.adverbs.pre)\n  }\n  // remove negatives\n  if (vb.has('#Negative')) {\n    vb = vb.remove('#Negative')\n  }\n  // remove prefixes like 'anti'\n  if (vb.has('#Prefix')) {\n    vb = vb.remove('#Prefix')\n  }\n  // cut-off phrasal-verb\n  if (res.root.has('#PhrasalVerb #Particle')) {\n    vb.remove('#Particle$')\n  }\n  // did we miss any of these?\n  // vb = vb.remove('#Adverb')\n  vb = vb.not('#Adverb')\n  return vb\n}\n\nconst getGrammar = function (vb, res) {\n  let grammar = {}\n  // make it easy to classify, first\n  vb = cleanUp(vb, res)\n  for (let i = 0; i < forms.length; i += 1) {\n    let todo = forms[i]\n    if (vb.has(todo.match) === true) {\n      grammar.form = todo.name\n      Object.assign(grammar, todo.data)\n      break //only match one\n    }\n  }\n  // did we find nothing?\n  if (!grammar.form) {\n    if (vb.has('^#Verb$')) {\n      grammar.form = 'infinitive'\n    }\n  }\n  // fallback to 'naiive' tense detection\n  if (!grammar.tense) {\n    grammar.tense = res.root.has('#PastTense') ? 'PastTense' : 'PresentTense'\n  }\n  grammar.copula = res.root.has('#Copula')\n  return grammar\n}\n\nexport default getGrammar\n","const shouldSkip = function (last) {\n  // is it our only choice?\n  if (last.length <= 1) {\n    return false\n  }\n  let obj = last.parse()[0] || {}\n  return obj.isSubordinate\n}\n\n// try to chop-out any obvious conditional phrases\n// he wore, [if it was raining], a raincoat.\nconst noSubClause = function (before) {\n  let parts = before.clauses()\n  parts = parts.filter((m, i) => {\n    // if it was raining..\n    if (m.has('^(if|unless|while|but|for|per|at|by|that|which|who|from)')) {\n      return false\n    }\n    // bowed to her,\n    if (i > 0 && m.has('^#Verb . #Noun+$')) {\n      return false\n    }\n    // the fog, suddenly increasing in..\n    if (i > 0 && m.has('^#Adverb')) {\n      return false\n    }\n    return true\n  })\n  // don't drop the whole thing.\n  if (parts.length === 0) {\n    return before\n  }\n  return parts\n}\n\n//\nconst lastNoun = function (vb) {\n  let before = vb.before()\n  // try to drop any mid-sentence clauses\n  before = noSubClause(before)\n  // parse-out our preceding nouns\n  let nouns = before.nouns()\n  // look for any dead-ringers\n  let last = nouns.last()\n  // i/she/he/they are very strong\n  let pronoun = last.match('(i|he|she|we|you|they)')\n  if (pronoun.found) {\n    return pronoun.nouns()\n  }\n  // these are also good hints\n  let det = nouns.if('^(that|this|those)')\n  if (det.found) {\n    return det\n  }\n  if (nouns.found === false) {\n    det = before.match('^(that|this|those)')\n    if (det.found) {\n      return det\n    }\n  }\n\n  // should we skip a subbordinate clause or two?\n  last = nouns.last()\n  if (shouldSkip(last)) {\n    nouns.remove(last)\n    last = nouns.last()\n  }\n  // i suppose we can skip two?\n  if (shouldSkip(last)) {\n    nouns.remove(last)\n    last = nouns.last()\n  }\n  return last\n}\n\nconst isPlural = function (subj, vb) {\n  // 'we are' vs 'he is'\n  if (vb.has('(are|were|does)')) {\n    return true\n  }\n  if (subj.has('(those|they|we)')) {\n    return true\n  }\n  if (subj.found && subj.isPlural) {\n    return subj.isPlural().found\n  }\n  return false\n}\n\nconst getSubject = function (vb) {\n  let subj = lastNoun(vb)\n  return {\n    subject: subj,\n    plural: isPlural(subj, vb),\n  }\n}\nexport default getSubject\n","import getSubject from './parse/getSubject.js'\n\nconst noop = vb => vb\n\nconst isPlural = (vb, parsed) => {\n  let subj = getSubject(vb, parsed)\n  let m = subj.subject\n  if (m.has('i') || m.has('we')) {\n    return true\n  }\n  return subj.plural\n}\n\nconst wasWere = (vb, parsed) => {\n  let { subject, plural } = getSubject(vb, parsed)\n  if (plural || subject.has('we')) {\n    return 'were'\n  }\n  return 'was'\n}\n\n// present-tense copula\nconst isAreAm = function (vb, parsed) {\n  // 'people were' -> 'people are'\n  if (vb.has('were')) {\n    return 'are'\n  }\n  // 'i was' -> i am\n  let { subject, plural } = getSubject(vb, parsed)\n  if (subject.has('i')) {\n    return 'am'\n  }\n  if (subject.has('we') || plural) {\n    return 'are'\n  }\n  // 'he was' -> he is\n  return 'is'\n}\n\n\nconst doDoes = function (vb, parsed) {\n  let subj = getSubject(vb, parsed)\n  let m = subj.subject\n  if (m.has('i') || m.has('we')) {\n    return 'do'\n  }\n  if (subj.plural) {\n    return 'do'\n  }\n  return 'does'\n}\n\nconst getTense = function (m) {\n  if (m.has('#Infinitive')) {\n    return 'Infinitive'\n  }\n  if (m.has('#Participle')) {\n    return 'Participle'\n  }\n  if (m.has('#PastTense')) {\n    return 'PastTense'\n  }\n  if (m.has('#Gerund')) {\n    return 'Gerund'\n  }\n  if (m.has('#PresentTense')) {\n    return 'PresentTense'\n  }\n  return undefined\n}\n\nconst toInf = function (vb, parsed) {\n  const { toInfinitive } = vb.methods.two.transform.verb\n  let str = parsed.root.text({ keepPunct: false })\n  str = toInfinitive(str, vb.model, getTense(vb))\n  if (str) {\n    vb.replace(parsed.root, str)\n  }\n  return vb\n}\n\n\n\n// i will start looking -> i started looking\n// i will not start looking -> i did not start looking\nconst noWill = (vb) => {\n  if (vb.has('will not')) {\n    return vb.replace('will not', 'have not')\n  }\n  return vb.remove('will')\n}\n\nexport { noop, isPlural, isAreAm, doDoes, toInf, getSubject, getTense, wasWere, noWill }","import parseVerb from './parse/index.js'\nimport getGrammar from './parse/grammar/index.js'\nimport { getTense } from './lib.js'\n\nconst toArray = function (m) {\n  if (!m || !m.isView) {\n    return []\n  }\n  const opts = { normal: true, terms: false, text: false }\n  return m.json(opts).map(s => s.normal)\n}\n\nconst toText = function (m) {\n  if (!m || !m.isView) {\n    return ''\n  }\n  return m.text('normal')\n}\n\nconst toInf = function (root) {\n  const { toInfinitive } = root.methods.two.transform.verb\n  let str = root.text('normal')\n  return toInfinitive(str, root.model, getTense(root))\n}\n\nconst toJSON = function (vb) {\n  let parsed = parseVerb(vb)\n  vb = vb.clone().toView()\n  const info = getGrammar(vb, parsed)\n  return {\n    root: parsed.root.text(),\n    preAdverbs: toArray(parsed.adverbs.pre),\n    postAdverbs: toArray(parsed.adverbs.post),\n    auxiliary: toText(parsed.auxiliary),\n    negative: parsed.negative.found,\n    prefix: toText(parsed.prefix),\n    infinitive: toInf(parsed.root),\n    grammar: info,\n  }\n}\nexport default toJSON\n","import { doDoes, getTense } from '../lib.js'\nconst keep = { tags: true }\n\n// all verb forms are the same\nconst toInf = function (vb, parsed) {\n  const { toInfinitive } = vb.methods.two.transform.verb\n  const { root, auxiliary } = parsed\n  let aux = auxiliary.terms().harden()\n  let str = root.text('normal')\n  str = toInfinitive(str, vb.model, getTense(root))\n  if (str) {\n    vb.replace(root, str, keep).tag('Verb').firstTerm().tag('Infinitive')\n  }\n  // remove any auxiliary terms\n  if (aux.found) {\n    vb.remove(aux)\n  }\n  // there is no real way to do this\n  // 'i not walk'?  'i walk not'?\n  if (parsed.negative.found) {\n    if (!vb.has('not')) {\n      vb.prepend('not')\n    }\n    let does = doDoes(vb, parsed)\n    vb.prepend(does)\n  }\n  vb.fullSentence().compute(['lexicon', 'preTagger', 'postTagger', 'chunks'])\n  return vb\n}\nexport default toInf\n","import { noop, getTense, wasWere, noWill } from '../lib.js'\nconst keep = { tags: true }\n\nconst fns = {\n\n  noAux: (vb, parsed) => {\n    if (parsed.auxiliary.found) {\n      vb = vb.remove(parsed.auxiliary)\n    }\n    return vb\n  },\n\n  // walk->walked\n  simple: (vb, parsed) => {\n    const { conjugate, toInfinitive } = vb.methods.two.transform.verb\n    const root = parsed.root\n    // 'i may'\n    if (root.has('#Modal')) {\n      return vb\n    }\n    let str = root.text({ keepPunct: false })\n    str = toInfinitive(str, vb.model, getTense(root))\n    let all = conjugate(str, vb.model)\n    // 'driven' || 'drove'\n    str = all.PastTense\n    // all.Participle || all.PastTense\n    // but skip the 'is' participle..\n    str = str === 'been' ? 'was' : str\n    if (str === 'was') {\n      str = wasWere(vb, parsed)\n    }\n    if (str) {\n      vb.replace(root, str, keep)\n    }\n    return vb\n  },\n\n  both: function (vb, parsed) {\n    // 'he did not walk'\n    if (parsed.negative.found) {\n      vb.replace('will', 'did')\n      return vb\n    }\n    // 'he walked'\n    vb = fns.simple(vb, parsed)\n    vb = fns.noAux(vb, parsed)\n    return vb\n  },\n\n  hasHad: vb => {\n    vb.replace('has', 'had', keep)\n    return vb\n  },\n\n  // some verbs have this weird past-tense form\n  // drive -> driven, (!drove)\n  hasParticiple: (vb, parsed) => {\n    const { conjugate, toInfinitive } = vb.methods.two.transform.verb\n    const root = parsed.root\n    let str = root.text('normal')\n    str = toInfinitive(str, vb.model, getTense(root))\n    return conjugate(str, vb.model).Participle\n  },\n\n\n\n}\n\n\nconst forms = {\n  // walk -> walked\n  'infinitive': fns.simple,\n  // he walks -> he walked\n  'simple-present': fns.simple,\n  // he walked\n  'simple-past': noop,\n  // he will walk -> he walked\n  'simple-future': fns.both,\n\n  // he is walking\n  'present-progressive': vb => {\n    vb.replace('are', 'were', keep)\n    vb.replace('(is|are|am)', 'was', keep)\n    return vb\n  },\n  // he was walking\n  'past-progressive': noop,\n  // he will be walking\n  'future-progressive': (vb, parsed) => {\n    vb.match(parsed.root).insertBefore('was')\n    vb.remove('(will|be)')\n    return vb\n  },\n\n  // has walked -> had walked (?)\n  'present-perfect': fns.hasHad,\n  // had walked\n  'past-perfect': noop,\n  // will have walked -> had walked\n  'future-perfect': (vb, parsed) => {\n    vb.match(parsed.root).insertBefore('had')\n    if (vb.has('will')) {\n      vb = noWill(vb)\n    }\n    vb.remove('have')\n    return vb\n  },\n\n  // has been walking -> had been\n  'present-perfect-progressive': fns.hasHad,\n  // had been walking\n  'past-perfect-progressive': noop,\n  // will have been -> had\n  'future-perfect-progressive': vb => {\n    vb.remove('will')\n    vb.replace('have', 'had', keep)\n    return vb\n  },\n\n  // got walked\n  'passive-past': vb => {\n    // 'have been walked' -> 'had been walked'\n    vb.replace('have', 'had', keep)\n    return vb\n  },\n  // is being walked  -> 'was being walked'\n  'passive-present': vb => {\n    vb.replace('(is|are)', 'was', keep)\n    return vb\n  },\n  // will be walked -> had been walked\n  'passive-future': (vb, parsed) => {\n    if (parsed.auxiliary.has('will be')) {\n      vb.match(parsed.root).insertBefore('had been')\n      vb.remove('(will|be)')\n    }\n    // will have been walked -> had been walked\n    if (parsed.auxiliary.has('will have been')) {\n      vb.replace('have', 'had', keep)\n      vb.remove('will')\n    }\n    return vb\n  },\n\n  // would be walked -> 'would have been walked'\n  'present-conditional': vb => {\n    vb.replace('be', 'have been')\n    return vb\n  },\n  // would have been walked\n  'past-conditional': noop,\n\n  // is going to drink -> was going to drink\n  'auxiliary-future': vb => {\n    vb.replace('(is|are|am)', 'was', keep)\n    return vb\n  },\n  // used to walk\n  'auxiliary-past': noop,\n  // we do walk -> we did walk\n  'auxiliary-present': vb => {\n    vb.replace('(do|does)', 'did', keep)\n    return vb\n  },\n\n  // must walk -> 'must have walked'\n  'modal-infinitive': (vb, parsed) => {\n    // this modal has a clear tense\n    if (vb.has('can')) {\n      // can drive -> could drive\n      vb.replace('can', 'could', keep)\n    } else {\n      // otherwise, \n      //  walk -> have walked\n      //  drive -> have driven\n      fns.simple(vb, parsed)\n      vb.match('#Modal').insertAfter('have').tag('Auxiliary')\n    }\n    return vb\n  },\n  // must have walked\n  'modal-past': noop,\n  // wanted to walk\n  'want-infinitive': vb => {\n    vb.replace('(want|wants)', 'wanted', keep)\n    vb.remove('will')\n    return vb\n  },\n  // started looking\n  'gerund-phrase': (vb, parsed) => {\n    parsed.root = parsed.root.not('#Gerund$')\n    fns.simple(vb, parsed)\n    noWill(vb)\n    return vb\n  },\n}\n\nconst toPast = function (vb, parsed, form) {\n  // console.log(form)\n  if (forms.hasOwnProperty(form)) {\n    vb = forms[form](vb, parsed)\n    vb.fullSentence().compute(['tagger', 'chunks'])\n    return vb\n  }\n  // do nothing i guess?\n  return vb\n}\nexport default toPast\n","import { noop, isPlural, isAreAm, doDoes, getSubject, toInf, getTense } from '../lib.js'\nconst keep = { tags: true }\n\n// walk->walked\nconst simple = (vb, parsed) => {\n  const { conjugate, toInfinitive } = vb.methods.two.transform.verb\n  const root = parsed.root\n  let str = root.text('normal')\n  str = toInfinitive(str, vb.model, getTense(root))\n  // 'i walk' vs 'he walks'\n  if (isPlural(vb, parsed) === false) {\n    str = conjugate(str, vb.model).PresentTense\n  }\n  // handle copula\n  if (root.has('#Copula')) {\n    str = isAreAm(vb, parsed)\n  }\n  if (str) {\n    vb = vb.replace(root, str, keep)\n    vb.not('#Particle').tag('PresentTense')\n  }\n  // vb.replace('not ' + str, str + ' not')\n  return vb\n}\n\nconst toGerund = (vb, parsed) => {\n  const { conjugate, toInfinitive } = vb.methods.two.transform.verb\n  const root = parsed.root\n  let str = root.text('normal')\n  str = toInfinitive(str, vb.model, getTense(root))\n  // 'i walk' vs 'he walks'\n  if (isPlural(vb, parsed) === false) {\n    str = conjugate(str, vb.model).Gerund\n  }\n  if (str) {\n    vb = vb.replace(root, str, keep)\n    vb.not('#Particle').tag('Gerund')\n  }\n  return vb\n}\n\nconst vbToInf = (vb, parsed) => {\n  const { toInfinitive } = vb.methods.two.transform.verb\n  const root = parsed.root\n  let str = parsed.root.text('normal')\n  str = toInfinitive(str, vb.model, getTense(root))\n  if (str) {\n    vb = vb.replace(parsed.root, str, keep)\n  }\n  return vb\n}\n\n\n\nconst forms = {\n  // walk\n  'infinitive': simple,\n  // he walks -> he walked\n  'simple-present': (vb, parsed) => {\n    const { conjugate } = vb.methods.two.transform.verb\n    let { root } = parsed\n    // is it *only* a infinitive? - 'we buy' etc\n    if (root.has('#Infinitive')) {\n      let subj = getSubject(vb, parsed)\n      let m = subj.subject\n      if (isPlural(vb, parsed) || m.has('i')) {\n        // keep it infinitive\n        return vb\n      }\n      let str = root.text('normal')\n      let pres = conjugate(str, vb.model).PresentTense\n      if (str !== pres) {\n        vb.replace(root, pres, keep)\n      }\n    } else {\n      return simple(vb, parsed)\n    }\n    return vb\n  },\n  // he walked\n  'simple-past': simple,\n  // he will walk -> he walked\n  'simple-future': (vb, parsed) => {\n    const { root, auxiliary } = parsed\n    // handle 'will be'\n    if (auxiliary.has('will') && root.has('be')) {\n      let str = isAreAm(vb, parsed)\n      vb.replace(root, str)\n      vb = vb.remove('will')\n      vb.replace('not ' + str, str + ' not')\n    } else {\n      simple(vb, parsed)\n      vb = vb.remove('will')\n    }\n    return vb\n  },\n\n  // is walking ->\n  'present-progressive': noop,\n  // was walking -> is walking\n  'past-progressive': (vb, parsed) => {\n    let str = isAreAm(vb, parsed)\n    return vb.replace('(were|was)', str, keep)\n  },\n  // will be walking -> is walking\n  'future-progressive': vb => {\n    vb.match('will').insertBefore('is')\n    vb.remove('be')\n    return vb.remove('will')\n  },\n\n  // has walked ->  (?)\n  'present-perfect': (vb, parsed) => {\n    simple(vb, parsed)\n    vb = vb.remove('(have|had|has)')\n    return vb\n  },\n\n  // had walked -> has walked\n  'past-perfect': (vb, parsed) => {\n    // not 'we has walked'\n    let subj = getSubject(vb, parsed)\n    let m = subj.subject\n    if (isPlural(vb, parsed) || m.has('i')) {\n      vb = toInf(vb, parsed)// we walk\n      vb.remove('had')\n      return vb\n    }\n    vb.replace('had', 'has', keep)\n    return vb\n  },\n  // will have walked -> has walked\n  'future-perfect': vb => {\n    vb.match('will').insertBefore('has')\n    return vb.remove('have').remove('will')\n  },\n\n  // has been walking\n  'present-perfect-progressive': noop,\n  // had been walking\n  'past-perfect-progressive': vb => vb.replace('had', 'has', keep),\n  // will have been -> has been\n  'future-perfect-progressive': vb => {\n    vb.match('will').insertBefore('has')\n    return vb.remove('have').remove('will')\n  },\n\n  // got walked -> is walked\n  // was walked -> is walked\n  // had been walked -> is walked\n  'passive-past': (vb, parsed) => {\n    let str = isAreAm(vb, parsed)\n    if (vb.has('(had|have|has)') && vb.has('been')) {\n      vb.replace('(had|have|has)', str, keep)\n      vb.replace('been', 'being')\n      return vb\n    }\n    return vb.replace('(got|was|were)', str)\n  },\n  // is being walked  ->\n  'passive-present': noop,\n  // will be walked -> is being walked\n  'passive-future': vb => {\n    vb.replace('will', 'is')\n    return vb.replace('be', 'being')\n  },\n\n  // would be walked ->\n  'present-conditional': noop,\n  // would have been walked ->\n  'past-conditional': vb => {\n    vb.replace('been', 'be')\n    return vb.remove('have')\n  },\n\n  // is going to drink -> is drinking\n  'auxiliary-future': (vb, parsed) => {\n    toGerund(vb, parsed)\n    vb.remove('(going|to)')\n    return vb\n  },\n  // used to walk -> is walking\n  // did walk -> is walking\n  'auxiliary-past': (vb, parsed) => {\n    // 'did provide' -> 'does provide'\n    if (parsed.auxiliary.has('did')) {\n      let str = doDoes(vb, parsed)\n      vb.replace(parsed.auxiliary, str)\n      return vb\n    }\n    toGerund(vb, parsed)\n    vb.replace(parsed.auxiliary, 'is')\n    return vb\n  },\n  // we do walk ->\n  'auxiliary-present': noop,\n\n  // must walk -> 'must have walked'\n  'modal-infinitive': noop,\n  // must have walked\n  'modal-past': (vb, parsed) => {\n    vbToInf(vb, parsed)\n    return vb.remove('have')\n  },\n  // started looking\n  'gerund-phrase': (vb, parsed) => {\n    parsed.root = parsed.root.not('#Gerund$')\n    simple(vb, parsed)\n    return vb.remove('(will|have)')\n  },\n  // wanted to walk\n  'want-infinitive': (vb, parsed) => {\n    let str = 'wants'\n    if (isPlural(vb, parsed)) {\n      str = 'want'//we want\n    }\n    vb.replace('(want|wanted|wants)', str, keep)\n    vb.remove('will')\n    return vb\n  },\n}\n\nconst toPresent = function (vb, parsed, form) {\n  // console.log(form)\n  if (forms.hasOwnProperty(form)) {\n    vb = forms[form](vb, parsed)\n    vb.fullSentence().compute(['tagger', 'chunks'])\n    return vb\n  }\n  return vb\n}\nexport default toPresent\n","import { noop, getTense } from '../lib.js'\nconst keep = { tags: true }\n\nconst simple = (vb, parsed) => {\n  const { toInfinitive } = vb.methods.two.transform.verb\n  const { root, auxiliary } = parsed\n  // 'i may'\n  if (root.has('#Modal')) {\n    return vb\n  }\n  let str = root.text('normal')\n  str = toInfinitive(str, vb.model, getTense(root))\n  if (str) {\n    vb = vb.replace(root, str, keep)\n    vb.not('#Particle').tag('Verb')\n  }\n  vb.prepend('will').match('will').tag('Auxiliary')\n  vb.remove(auxiliary)\n  return vb\n}\n\n// 'will be walking'\nconst progressive = (vb, parsed) => {\n  const { conjugate, toInfinitive } = vb.methods.two.transform.verb\n  const { root, auxiliary } = parsed\n  let str = root.text('normal')\n  str = toInfinitive(str, vb.model, getTense(root))\n  if (str) {\n    str = conjugate(str, vb.model).Gerund\n    vb.replace(root, str, keep)\n    vb.not('#Particle').tag('PresentTense')\n  }\n  vb.remove(auxiliary)\n  vb.prepend('will be').match('will be').tag('Auxiliary')\n  return vb\n}\n\nconst forms = {\n  // walk ->\n  'infinitive': simple,\n  // he walks ->\n  'simple-present': simple,\n  // he walked\n  'simple-past': simple,\n  // he will walk ->\n  'simple-future': noop,\n\n  // is walking ->\n  'present-progressive': progressive,\n  // was walking ->\n  'past-progressive': progressive,\n  // will be walking ->\n  'future-progressive': noop,\n\n  // has walked ->\n  'present-perfect': (vb) => {\n    vb.match('(have|has)').replaceWith('will have')\n    return vb\n  },\n  // had walked ->\n  'past-perfect': vb => vb.replace('(had|has)', 'will have'),\n  // will have walked ->\n  'future-perfect': noop,\n\n  // has been walking\n  'present-perfect-progressive': vb => vb.replace('has', 'will have'),\n  // had been walking\n  'past-perfect-progressive': vb => vb.replace('had', 'will have'),\n  // will have been ->\n  'future-perfect-progressive': noop,\n\n  // got walked ->\n  // was walked ->\n  // was being walked ->\n  // had been walked ->\n  'passive-past': vb => {\n    if (vb.has('got')) {\n      return vb.replace('got', 'will get')\n    }\n    if (vb.has('(was|were)')) {\n      vb.replace('(was|were)', 'will be')\n      return vb.remove('being')\n    }\n    if (vb.has('(have|has|had) been')) {\n      return vb.replace('(have|has|had) been', 'will be')\n    }\n    return vb\n  },\n  // is being walked  ->\n  'passive-present': vb => {\n    vb.replace('being', 'will be')\n    vb.remove('(is|are|am)')\n    return vb\n  },\n  // will be walked ->\n  'passive-future': noop,\n  // would be walked ->\n  'present-conditional': vb => vb.replace('would', 'will'),\n  // would have been walked ->\n  'past-conditional': vb => vb.replace('would', 'will'),\n\n  // is going to drink ->\n  'auxiliary-future': noop,\n  // used to walk -> is walking\n  // did walk -> is walking\n  'auxiliary-past': vb => {\n    if (vb.has('used') && vb.has('to')) {\n      vb.replace('used', 'will')\n      return vb.remove('to')\n    }\n    vb.replace('did', 'will')\n    return vb\n  },\n  // we do walk ->\n  // he does walk ->\n  'auxiliary-present': vb => {\n    return vb.replace('(do|does)', 'will')\n  },\n\n  // must walk ->\n  'modal-infinitive': noop,\n  // must have walked\n  'modal-past': noop,\n  // started looking\n  'gerund-phrase': (vb, parsed) => {\n    parsed.root = parsed.root.not('#Gerund$')\n    simple(vb, parsed)\n    return vb.remove('(had|have)')\n  },\n  // wanted to walk\n  'want-infinitive': vb => {\n    vb.replace('(want|wants|wanted)', 'will want')\n    return vb\n  },\n}\n\nconst toFuture = function (vb, parsed, form) {\n  // console.log(form)\n  // is it already future-tense?\n  if (vb.has('will') || vb.has('going to')) {\n    return vb\n  }\n  if (forms.hasOwnProperty(form)) {\n    vb = forms[form](vb, parsed)\n    vb.fullSentence().compute(['tagger', 'chunks'])\n    return vb\n  }\n  return vb\n}\nexport default toFuture\n","import { getTense, isAreAm } from '../lib.js'\nconst keep = { tags: true }\n\n// all verb forms are the same\nconst toGerund = function (vb, parsed) {\n  // console.log(form)\n  const { toInfinitive, conjugate } = vb.methods.two.transform.verb\n  const { root, auxiliary } = parsed\n  if (vb.has('#Gerund')) {\n    return vb\n  }\n\n  // conjugate '-ing' verb\n  let str = root.text('normal')\n  str = toInfinitive(str, vb.model, getTense(root))\n  let gerund = conjugate(str, vb.model).Gerund\n  // 'are walking', 'is walking'\n  if (gerund) {\n    gerund = `${isAreAm(vb, parsed)} ${gerund}`\n    vb.replace(root, gerund, keep)\n  }\n\n  // remove any existing auxiliary\n  if (auxiliary.found) {\n    vb.remove(auxiliary)\n  }\n  vb.replace('not is', 'is not')\n  vb.replace('not are', 'are not')\n  vb.fullSentence().compute(['tagger', 'chunks'])\n  return vb\n}\nexport default toGerund\n","import { doDoes, toInf } from '../lib.js'\nconst keep = { tags: true }\n\n// do/does not walk \nconst doesNot = function (vb, parsed) {\n  let does = doDoes(vb, parsed)\n  vb.prepend(does + ' not')\n  return vb\n}\n\nconst isWas = function (vb) {\n  // not be\n  let m = vb.match('be')\n  if (m.found) {\n    m.prepend('not')\n    return vb\n  }\n  // will not\n  m = vb.match('(is|was|am|are|will|were)')\n  if (m.found) {\n    m.append('not')\n    return vb\n  }\n  return vb\n}\n\nconst hasCopula = (vb) => vb.has('(is|was|am|are|will|were|be)')\n\n//vaguely, turn 'he is cool' into 'he is not cool'\nconst forms = {\n\n\n  // he walks' -> 'he does not walk'\n  'simple-present': (vb, parsed) => {\n    // is/was\n    if (hasCopula(vb) === true) {\n      return isWas(vb, parsed)\n    }\n    // he walk\n    vb = toInf(vb, parsed)\n    // does not \n    vb = doesNot(vb, parsed)\n    return vb\n  },\n  // 'he walked' -> 'he did not walk'\n  'simple-past': (vb, parsed) => {\n    // is/was\n    if (hasCopula(vb) === true) {\n      return isWas(vb, parsed)\n    }\n    // he walk\n    vb = toInf(vb, parsed)\n    // vb.debug()\n    // did not walk\n    vb.prepend('did not')\n    return vb\n  },\n\n  // walk! -> 'do not walk'\n  'imperative': (vb) => {\n    vb.prepend('do not')\n    return vb\n  },\n  // walk -> does not walk\n  'infinitive': (vb, parsed) => {\n    if (hasCopula(vb) === true) {\n      return isWas(vb, parsed)\n    }\n    return doesNot(vb, parsed)\n  },\n\n  'passive-past': (vb) => {\n    // got walked -> did not get walked\n    if (vb.has('got')) {\n      vb.replace('got', 'get', keep)\n      vb.prepend('did not')\n      return vb\n    }\n    // was walked, were walked\n    // was being walked\n    // had been walked, have been eaten\n    let m = vb.match('(was|were|had|have)')\n    if (m.found) {\n      m.append('not')\n    }\n    return vb\n  },\n  'auxiliary-past': (vb) => {\n    // used to walk\n    if (vb.has('used')) {\n      vb.prepend('did not')\n      return vb\n    }\n    // he did walk\n    let m = vb.match('(did|does|do)')\n    if (m.found) {\n      m.append('not')\n    }\n    return vb\n  },\n\n  // wants to walk\n  'want-infinitive': (vb, parsed) => {\n    // does not \n    vb = doesNot(vb, parsed)\n    // want\n    vb = vb.replace('wants', 'want', keep)\n    return vb\n  },\n\n}\n\nconst toNegative = function (vb, parsed, form) {\n  // console.log(form)\n  if (vb.has('#Negative')) {\n    return vb\n  }\n  if (forms.hasOwnProperty(form)) {\n    vb = forms[form](vb, parsed)\n    return vb\n  }\n\n  // 'not be'\n  let m = vb.matchOne('be')\n  if (m.found) {\n    m.prepend('not')\n    return vb\n  }\n  // is/was not\n  if (hasCopula(vb) === true) {\n    return isWas(vb, parsed)\n  }\n\n  // 'would not'\n  m = vb.matchOne('(will|had|have|has|did|does|do|#Modal)')\n  if (m.found) {\n    m.append('not')\n    return vb\n  }\n  // do nothing i guess?\n  return vb\n}\nexport default toNegative","import find from '../find.js'\nimport toJSON from './toJSON.js'\nimport parseVerb from './parse/index.js'\nimport toInfinitive from './conjugate/toInfinitive.js'\nimport toPast from './conjugate/toPast.js'\nimport toPresent from './conjugate/toPresent.js'\nimport toFuture from './conjugate/toFuture.js'\nimport toGerund from './conjugate/toGerund.js'\nimport getSubject from './parse/getSubject.js'\nimport getGrammar from './parse/grammar/index.js'\nimport toNegative from './conjugate/toNegative.js'\n// import debug from './debug.js'\n\n\n// return the nth elem of a doc\nexport const getNth = (doc, n) => (typeof n === 'number' ? doc.eq(n) : doc)\n\nconst api = function (View) {\n  class Verbs extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Verbs'\n    }\n    parse(n) {\n      return getNth(this, n).map(parseVerb)\n    }\n    json(opts, n) {\n      let m = getNth(this, n)\n      let arr = m.map(vb => {\n        let json = vb.toView().json(opts)[0] || {}\n        json.verb = toJSON(vb)\n        return json\n      }, [])\n      return arr\n    }\n    subjects(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parseVerb(vb)\n        return getSubject(vb, parsed).subject\n      })\n    }\n    adverbs(n) {\n      return getNth(this, n).map(vb => vb.match('#Adverb'))\n    }\n    isSingular(n) {\n      return getNth(this, n).filter(vb => {\n        return getSubject(vb).plural !== true\n      })\n    }\n    isPlural(n) {\n      return getNth(this, n).filter(vb => {\n        return getSubject(vb).plural === true\n      })\n    }\n    isImperative(n) {\n      return getNth(this, n).filter(vb => vb.has('#Imperative'))\n    }\n    toInfinitive(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parseVerb(vb)\n        let info = getGrammar(vb, parsed)\n        return toInfinitive(vb, parsed, info.form)\n      })\n    }\n    toPresentTense(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parseVerb(vb)\n        let info = getGrammar(vb, parsed)\n        return toPresent(vb, parsed, info.form)\n      })\n    }\n    toPastTense(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parseVerb(vb)\n        let info = getGrammar(vb, parsed)\n        return toPast(vb, parsed, info.form)\n      })\n    }\n    toFutureTense(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parseVerb(vb)\n        let info = getGrammar(vb, parsed)\n        return toFuture(vb, parsed, info.form)\n      })\n    }\n    toGerund(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parseVerb(vb)\n        let info = getGrammar(vb, parsed)\n        return toGerund(vb, parsed, info.form)\n      })\n    }\n    conjugate(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parseVerb(vb)\n        let info = getGrammar(vb, parsed)\n        // allow imperatives like 'go!' to be conjugated here (only)\n        if (info.form === 'imperative') {\n          info.form = 'simple-present'\n        }\n        return {\n          Infinitive: toInfinitive(vb.clone(), parsed, info.form).text('normal'),\n          PastTense: toPast(vb.clone(), parsed, info.form).text('normal'),\n          PresentTense: toPresent(vb.clone(), parsed, info.form).text('normal'),\n          FutureTense: toFuture(vb.clone(), parsed, info.form).text('normal'),\n        }\n      }, [])\n    }\n\n    /** return only verbs with 'not'*/\n    isNegative() {\n      return this.if('#Negative')\n    }\n    /**  return only verbs without 'not'*/\n    isPositive() {\n      return this.ifNo('#Negative')\n    }\n    /** remove 'not' from these verbs */\n    toPositive() {\n      let m = this.match('do not #Verb')\n      if (m.found) {\n        m.remove('do not')\n      }\n      return this.remove('#Negative')\n    }\n    toNegative(n) {\n      return getNth(this, n).map(vb => {\n        let parsed = parseVerb(vb)\n        let info = getGrammar(vb, parsed)\n        return toNegative(vb, parsed, info.form)\n      })\n    }\n    // overloaded - keep Verb class\n    update(pointer) {\n      let m = new Verbs(this.document, pointer)\n      m._cache = this._cache // share this full thing\n      return m\n    }\n  }\n  Verbs.prototype.toPast = Verbs.prototype.toPastTense\n  Verbs.prototype.toPresent = Verbs.prototype.toPresentTense\n  Verbs.prototype.toFuture = Verbs.prototype.toFutureTense\n\n  View.prototype.verbs = function (n) {\n    let vb = find(this)\n    vb = getNth(vb, n)\n    return new Verbs(this.document, vb.pointer)\n  }\n}\nexport default api\n","import api from './api/api.js'\n\nexport default {\n  api,\n}\n","import nlp from './two.js'\nimport chunker from './3-three/chunker/plugin.js'\nimport misc from './3-three/misc/plugin.js'\nimport normalize from './3-three/normalize/plugin.js'\nimport nouns from './3-three/nouns/plugin.js'\nimport numbers from './3-three/numbers/plugin.js'\nimport redact from './3-three/redact/plugin.js'\nimport sentences from './3-three/sentences/plugin.js'\nimport topics from './3-three/topics/plugin.js'\nimport verbs from './3-three/verbs/plugin.js'\n\nnlp.plugin(chunker) //\nnlp.plugin(misc) //\nnlp.plugin(normalize) //\nnlp.plugin(nouns) //\nnlp.plugin(numbers) //\nnlp.plugin(redact) //\nnlp.plugin(sentences) //\nnlp.plugin(topics) //\nnlp.plugin(verbs) //\n\nexport default nlp\n","const FRACION_ENTITY_TO_ASCII = new Map([\n    [\"½\", \"1/2\"],\n    [\"⅓\", \"1/3\"],\n    [\"⅔\", \"2/3\"],\n    [\"¼\", \"1/4\"],\n    [\"¾\", \"3/4\"],\n    [\"⅕\", \"1/5\"],\n    [\"⅖\", \"2/5\"],\n    [\"⅗\", \"3/5\"],\n    [\"⅘\", \"4/5\"],\n    [\"⅙\", \"1/6\"],\n    [\"⅚\", \"5/6\"],\n    [\"⅐\", \"1/7\"],\n    [\"⅛\", \"1/8\"],\n    [\"⅜\", \"3/8\"],\n    [\"⅝\", \"5/8\"],\n    [\"⅞\", \"7/8\"],\n    [\"⅑\", \"1/9\"],\n    [\"⅒\", \"1/10\"],\n]);\nfunction sanitiseFractions(str) {\n    let newStr = str.slice(0);\n    // ½ cup => 1/2 cup\n    for (const [entity, ascii] of FRACION_ENTITY_TO_ASCII.entries()) {\n        newStr = newStr.replace(new RegExp(`\\\\s*${entity}`, \"g\"), ` ${ascii}`);\n    }\n    return newStr;\n}\nfunction sanitiseWhitespace(str) {\n    let newStr = str.slice(0);\n    // 1½ cup => 1 ½ cup\n    newStr = newStr.replace(/([\\d]+)([½⅓⅔¼¾⅕⅖⅗⅘⅙⅚⅐⅛⅜⅝⅞⅑⅒])/g, \"$1 $2\");\n    // 1/4 cup/10 grams => 1/4 cup / 10 grams\n    newStr = newStr.replace(/([a-z]+)\\/([\\d])/gi, \"$1 / $2\");\n    // a word(with badly spaced)parentheses\n    newStr = newStr.replace(/([\\w])\\(([\\w])/gi, \"$1 ($2\");\n    newStr = newStr.replace(/([\\w])\\)([\\w])/gi, \"$1) $2\");\n    return newStr;\n}\nconst MEASUREMENT_ABBR = new Map([\n    [\"teaspoons\", \"teaspoon\"],\n    [\"tsp.\", \"teaspoon\"],\n    [\"tsp\", \"teaspoon\"],\n    [\"tablespoons\", \"tablespoon\"],\n    [\"tbsp.\", \"tablespoon\"],\n    [\"tbsp\", \"tablespoon\"],\n    [\"pounds\", \"pound\"],\n    [\"lb.\", \"pound\"],\n    [\"lb\", \"pound\"],\n    [\"cups\", \"cup\"],\n    [\"c.\", \"cup\"],\n    [\"c\", \"cup\"],\n    [\"ounces\", \"ounce\"],\n    [\"oz.\", \"ounce\"],\n    [\"oz\", \"ounce\"],\n    [\"grams\", \"gram\"],\n    [\"g.\", \"gram\"],\n    [\"g\", \"gram\"],\n    [\"pints\", \"pint\"],\n    [\"pt.\", \"pint\"],\n    [\"pt\", \"pint\"],\n]);\nfunction sanitiseMeasurements(str) {\n    let newStr = str.slice(0);\n    let re;\n    for (const [find, replace] of MEASUREMENT_ABBR.entries()) {\n        re = new RegExp(`([\\\\d]+)(\\\\s*${find})([^\\\\w])`, \"gi\");\n        newStr = newStr.replace(re, `$1 ${replace} $3`);\n    }\n    // Remove duplicate \\s\n    newStr = newStr.replace(/\\s+/, \" \");\n    return newStr;\n}\nfunction sanitise(str) {\n    let newStr = str.slice(0);\n    newStr = sanitiseWhitespace(newStr);\n    newStr = sanitiseFractions(newStr);\n    newStr = sanitiseMeasurements(newStr);\n    return newStr.trim();\n}\nexport { sanitise, sanitiseFractions, sanitiseWhitespace };\n","import compromise from \"compromise\";\nimport { sanitise } from \"./sanitise\";\nconst isAdjectiveTag = (tag) => tag === \"Adjective\";\nconst isAdverbTag = (tag) => tag === \"Adverb\";\nconst isNounTag = (tag) => tag === \"Noun\";\nconst isNumericValueTag = (tag) => tag === \"NumericValue\";\nconst isPrepositionTag = (tag) => tag === \"Preposition\";\nconst isTextValueTag = (tag) => tag === \"TextValue\";\nconst isUnitTag = (tag) => tag === \"Unit\";\nconst isVerbTag = (tag) => tag === \"Verb\";\nconst isIngredientTag = (tag) => isNounTag(tag) ||\n    isAdjectiveTag(tag) ||\n    isAdverbTag(tag) ||\n    isVerbTag(tag) ||\n    isTextValueTag(tag) ||\n    isPrepositionTag(tag);\nfunction getDocumentTerms(line) {\n    const sanitisedLine = sanitise(line);\n    const doc = compromise(sanitisedLine);\n    const terms = doc.terms().json();\n    // console.group(\"Terms\");\n    // console.log(\"Line\", line);\n    // console.log(\"Sanitised\", sanitisedLine);\n    // console.log(\"Terms\", terms);\n    // console.groupEnd();\n    return terms;\n}\nfunction extractUnitValue(terms, startIndex = 0, endIndex = terms.length - 1) {\n    let term;\n    let tags;\n    let hasNumericTag = false;\n    let sliceStartIndex = -1;\n    let sliceEndIndex = startIndex;\n    let unitValueTerms = [];\n    for (let i = startIndex; i <= endIndex; i++) {\n        term = terms[i];\n        tags = term.terms[0].tags;\n        hasNumericTag = tags.some((tag) => isNumericValueTag(tag));\n        if (hasNumericTag && sliceStartIndex === -1) {\n            sliceStartIndex = i;\n            continue;\n        }\n        else if (!hasNumericTag && sliceStartIndex > -1) {\n            sliceEndIndex = i;\n            unitValueTerms = terms.slice(sliceStartIndex, sliceEndIndex);\n            break;\n        }\n    }\n    return {\n        endIndex: sliceEndIndex,\n        terms: unitValueTerms,\n    };\n}\nfunction extractUnit(terms, startIndex = 0, endIndex = terms.length - 1) {\n    let term;\n    let tags;\n    let hasUnitTag = false;\n    let sliceStartIndex = -1;\n    let sliceEndIndex = startIndex;\n    let unitTerms = [];\n    for (let i = startIndex; i <= endIndex; i++) {\n        term = terms[i];\n        tags = term.terms[0].tags;\n        hasUnitTag = tags.some((tag) => isUnitTag(tag));\n        if (hasUnitTag && sliceStartIndex === -1) {\n            sliceStartIndex = i;\n            continue;\n        }\n        else if (!hasUnitTag && sliceStartIndex > -1) {\n            sliceEndIndex = i;\n            unitTerms = terms.slice(sliceStartIndex, sliceEndIndex);\n            break;\n        }\n    }\n    return {\n        endIndex: sliceEndIndex,\n        terms: unitTerms,\n    };\n}\nfunction extractIngredient(terms, startIndex = 0, endIndex = terms.length - 1) {\n    // We iterate twice through the terms. First loop we are trying to find the\n    // last noun we care about. The second loop we work backwards from that noun\n    // including other nouns or adjectives (and other types) as they might be\n    // describing the noun.\n    let term;\n    let tags;\n    let sliceStartIndex = -1;\n    let sliceEndIndex = -1;\n    let ingredientsTerms = [];\n    for (let i = startIndex; i <= endIndex; i++) {\n        term = terms[i];\n        tags = term.terms[0].tags;\n        // Ignore slashes or words that are prepositions\n        if (term.text === \"/\" || tags.some((tag) => isPrepositionTag(tag))) {\n            continue;\n        }\n        // Find a noun tag but not a unit tag\n        if (tags.some((tag) => isNounTag(tag)) &&\n            !tags.some((tag) => isUnitTag(tag))) {\n            sliceStartIndex = i;\n            sliceEndIndex = i;\n            continue;\n        }\n        if (sliceEndIndex > -1)\n            break;\n    }\n    // If we found a noun, extract it out with all descriptions before\n    if (sliceEndIndex > -1) {\n        for (let i = sliceEndIndex - 1; i >= startIndex; i--) {\n            term = terms[i];\n            tags = term.terms[0].tags;\n            if (!tags.some((tag) => isUnitTag(tag)) &&\n                tags.some((tag) => isIngredientTag(tag))) {\n                sliceStartIndex = i;\n                continue;\n            }\n            break;\n        }\n        // If the first term is a preposition, trim it\n        if (terms[sliceStartIndex].terms[0].tags.some((tag) => isPrepositionTag(tag))) {\n            sliceStartIndex++;\n        }\n        ingredientsTerms = terms.slice(sliceStartIndex, sliceEndIndex + 1);\n    }\n    return {\n        endIndex: sliceEndIndex,\n        terms: ingredientsTerms,\n    };\n}\nfunction parseStringValueToNumber(str) {\n    if (!str)\n        return NaN;\n    const valueParts = str.split(\" \");\n    const values = valueParts.map((value) => {\n        if (value.includes(\"/\")) {\n            const [numerator, denominator] = value.split(\"/\");\n            return parseInt(numerator, 10) / parseInt(denominator, 10);\n        }\n        else {\n            return parseFloat(value);\n        }\n    });\n    return values.reduce((acc, value) => acc + value, 0);\n}\nfunction flattenTerms(terms) {\n    const flattenedValue = terms\n        .flatMap((term) => {\n        const termToken = term.terms[0];\n        return `${termToken.pre}${termToken.text}${termToken.post}`;\n    })\n        .join(\"\");\n    return flattenedValue.trim();\n}\nfunction createIngredient(unitValue, unit, ingredient) {\n    // Trim whitespace and remove any garbage off the start or end of the\n    // ingredient\n    const ingredientName = flattenTerms(ingredient)\n        .replace(/^[^\\w]/i, \"\")\n        .replace(/[^\\w]$/i, \"\")\n        .trim();\n    let value = parseStringValueToNumber(flattenTerms(unitValue));\n    if (isNaN(value))\n        value = undefined;\n    return {\n        name: ingredientName,\n        unit: flattenTerms(unit),\n        value,\n    };\n}\nfunction extract(line) {\n    const terms = getDocumentTerms(line);\n    let unitValueTerms;\n    let unitTerms;\n    let ingredientsTerms;\n    let startIndex = 0;\n    let endIndex = 0;\n    ({ endIndex: startIndex, terms: unitValueTerms } = extractUnitValue(terms, 0));\n    ({ endIndex, terms: ingredientsTerms } = extractIngredient(terms, startIndex));\n    ({ terms: unitTerms } = extractUnit(terms, startIndex, endIndex));\n    // console.log(unitValueTerms);\n    // console.log(unitTerms);\n    // console.log(ingredientsTerms);\n    // TODO: multiple ingredients in one line\n    return [createIngredient(unitValueTerms, unitTerms, ingredientsTerms)];\n}\nexport { extract };\n","<script lang=\"ts\">\n  import { extract } from './extract';\n\n  export let onSubmit = () => {};\n\n  function onFormSubmit(){\n    let rawIngredients = document.getElementById('txtIngredients').value;\n    const lines = rawIngredients.split(\"\\n\").map(line => line.trim()).filter((line) => line);\n\n    const ingredients: Array<Ingredient> = lines.map((line) => extract(line)).flat();\n    const e = new CustomEvent('submit', {\n      detail: { ingredients }\n    });\n    onSubmit(e);\n  }\n</script>\n\n<section id=\"demo\">\n  <h2>Input</h2>\n  <p>Paste in a block of text containing ingredients on each line.</p>\n  <p>\n    <label for=\"txtIngredients\"><strong>Ingredients:</strong></label>\n  </p>\n  <textarea class=\"ingredients-form__textarea\" rows=\"15\" id=\"txtIngredients\">2 tsp. sugar, 6 g. and 3 oz for dusting\n1 large red onion, chopped into bite-sized pieces\n3 mixed peppers, chopped into bite-sized pieces\n1 large aubergine, chopped into bite-sized pieces\n1 tbsp extra virgin olive oil, plus extra for drizzling\n250g/9oz halloumi cheese, sliced\n250g / 9oz halloumi cheese, sliced\n250g or 9oz halloumi cheese, sliced\nsmall handful fresh basil\nfreshly ground sea salt and black pepper\n1 large butternut squash (about 3 1/2 pounds/1 1/2 kilograms), halved lengthwise and deseeded (stem, base, and skin intact, and one half reserved for later use)\n5 large shallots (10 1/2 ounces/300 grams), peeled and halved lengthways\n2½ tablespoons olive oil\n2 1/2 tablespoons olive oil\n1 teaspoon five-spice powder\n½ teaspoon ground cinnamon\n1/2 teaspoon ground cinnamon\n1/2 teaspoon of ground cinnamon\nKosher salt (Diamond Crystal) and black pepper\n¾ cup plus 2 tablespoons/200 milliliters chicken stock (or vegetable stock)\n¾ cup plus 1 tablespoon/200 milliliters heavy cream (double cream)\n3½ ounces/100 grams Gruyère, finely grated\n4 to 5 egg yolks (80 grams)\n2 garlic cloves, minced\n2 teaspoons cornstarch (cornflour)\n2 teaspoons white miso\n1½ tablespoons white sesame seeds\n¾ teaspoon Aleppo pepper\n½ teaspoon sweet paprika\n⅛ teaspoon five-spice powder\n2 tablespoons olive oil\n¼ cup/10 grams chives cut in 1/3-inch/1-centimeter pieces\n1½ tablespoons lime juice (from 1 lime)\n1 large head of iceberg lettuce\n¼ cup sliced pickled jalapeños\n½ cup basil and/or mint leaves, plus more for serving\n8 oz. thinly sliced mortadella, torn into large pieces\nKosher salt, freshly ground pepper\n1 lemon\n½ cup buttermilk\n¼ cup sour cream\n¼ cup extra-virgin olive oil\n1 garlic clove\n1 Tbsp. paprika\n2 tsp. kosher salt\n½ tsp. freshly ground black pepper\n½ tsp. cayenne pepper\n2 lb. bone-in beef short ribs or shanks\n1 lb. beef stew meat, cut into 1\" chunks\n2 bay leaves\n2 Tbsp. bacon drippings\n1 lb. fresh okra, trimmed, cut into ¼\" slices\n1 cup chopped onion\n⅔ cup chopped green bell pepper\n⅓ cup chopped celery\n1½ cups diced canned tomatoes, undrained\n3 garlic cloves, finely chopped\n1½ tsp. finely chopped Scotch bonnet pepper\n½ tsp. dried thyme\n½ lb. crabmeat, picked over (optional)\n1 lb. shrimp, peeled, deveined, tails on (optional)\nCooked rice (for serving)\n2 firm tart apples (1 pound or 2 454 grams)\n1 1/2 cups (6.75 ounces or 195 grams) all-purpose flour\n1/4 cup sugar plus 1 1/2 tablespoons for sprinkling (total of 2.2 ounces or 63 grams)\n1/2 tablespoon (7 grams) baking powder\n1/2 teaspoon salt (3 grams) plus additional for egg wash\n6 tablespoons (3 ounces or 85 grams)unsalted butter, chilled and cut into 1/2-inch cubes plus additional for baking sheet if not lining it with parchment\n1/2 cup (2.25 ounces or 65 grams) sharp cheddar, shredded (white is recommended, I assume for aesthetics)\n1/4 cup (2 ounces) heavy cream\n2 large eggs\n8 large eggs\n3 radishes, trimmed, thinly sliced (optional)\n1 cup coarsely chopped tender herbs (such as parsley, chives, and/or dill)\n1 tsp. Diamond Crystal or ½ tsp. Morton kosher salt, divided\nJuice of 1 lemon\n3 scallions\n3 Tbsp. extra-virgin olive oil, divided\n4 thick slices country-style bread (such as ciabatta or sourdough)\n1½ tsp. curry powder (preferably Madras)\n½ cup Kewpie mayonnaise\n1 Tbsp. Dijon mustard\nFlaky sea salt\nAleppo-style pepper (for serving)</textarea>\n  <button on:click={onFormSubmit}>Parse</button>\n</section>\n\n<style>\n  .ingredients-form__textarea {\n    display: block;\n    font-family: monospace;\n    margin: 1em 0;\n    width:  100%;\n  }\n</style>","<script lang=\"ts\">\n  export let ingredients: Array<Ingredient> = [];\n</script>\n\n<section>\n  <h2>Parsed Ingredients</h2>\n  <table class=\"ingredients-table__table\">\n    <thead>\n      <tr>\n        <th>Value</th>\n        <th>Unit</th>\n        <th>Ingredient</th>\n      </tr>\n    </thead>\n    <tbody>\n      {#each ingredients as ingredient (ingredient)}\n      <tr>\n        <td>{#if ingredient.value}{ingredient.value}{/if}</td>\n        <td>{ingredient.unit}</td>\n        <td>{ingredient.name}</td>\n      </tr>\n      {/each}\n    </tbody>\n  </table>\n</section>\n\n<style>\n  .ingredients-table__table {\n    border-collapse: collapse;\n    text-align: left;\n    width: 100%;\n  }\n\n  .ingredients-table__table th,\n  .ingredients-table__table td {\n    border: 1px solid #ccc;\n    padding: .5em;\n  }\n</style>","<script lang=\"ts\">\n\timport Nav from './Nav.svelte';\n\timport Body from './Body.svelte';\n\timport IngredientsForm from './IngredientsForm.svelte';\n\timport IngredientsTable from './IngredientsTable.svelte';\n\n\tlet ingredients: Array<Ingredient> = [];\n\n\tfunction onFormSubmit(e){\n\t\tingredients = e.detail.ingredients;\n\t}\n</script>\n\n<main>\n\t<Nav />\n\t<h1>Extracting Ingredients</h1>\n\t<p><strong>Just take me to the <a href=\"#demo\">demo</a>.</strong></p>\n\t<Body />\n\t<hr />\n\t<IngredientsForm onSubmit={onFormSubmit} />\n\t<hr />\n\t<IngredientsTable ingredients={ingredients} />\n\t<hr />\n\t<h2>TODO / TOFIX</h2>\n\t<ul>\n\t\t<li>Trim crap in parenthesis</li>\n\t\t<li>Handle multiple ingredients in one line</li>\n\t</ul>\n</main>\n\n<style global>\n\thtml {\n\t\tbackground-color: #2a363b;\n\t\tbackground: linear-gradient(180deg, rgba(55,69,75,1) 0%, rgba(42,54,59,1) 100%) fixed;\n\t\tcolor: #fecea8;\n\t}\n\n\ta, a:visited {\n\t\tcolor: #ff847c;\n\t\tfont-weight: bold;\n\t\ttext-decoration: underline;\n\t}\n\ta:hover {\n\t\tcolor: #e84a5f;\n\t\ttext-decoration-style: wavy;\n\t}\n\n\thr {\n\t\tborder-color: #fecea8;\n\t\tborder-style: dashed;\n\t}\n\t\n\tmain {\n\t\tfont-family: arial, sans-serif;\n\t\tmargin: 0 auto;\n\t\tmax-width: 540px;\n\t\tpadding: 1em;\n\t}\n</style>","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n    props: {},\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","length","update","$$","pop","i","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","destroy_block","lookup","key","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","detaching","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","nav","section","h20","p0","p1","p2","hr","h21","p3","ul","p4","p5","pre0","p6","p7","pre1","code1","tmpWrld","one","two","three","four","model","compute","hooks","input","world","hasOwnProperty","prototype","toString","call","isArray","console","warn","loops","cb","fullPointer","ptr","view","empty","res","out","undefined","none","isView","all","concat","toView","ptrs","find","found","some","random","n","r","Math","floor","slice","utils","termList","methods","docs","terms","match","eq","groups","group","_groups","k","pointer","_doc","first","last","firstTerms","lastTerms","min","max","pntrs","_o","fullSentences","isDoc","aPtr","bPtr","every","wordCount","reduce","count","t","isFull","start","end","fullSentence","sentence","lastTerm","firstTerm","assign","util","get","View","constructor","defineProperty","writable","getDoc","pointers","_d","id","endId","_cache","cache","fromText","tokenize","fromString","doc","preTagger","clone","term","tags","api","isObject","item","mergeDeep","plugin","extend","nlp","mergeQuick","irregulars","conj","models","pastTense","toPast","exceptions","fromPast","presentTense","toPresent","fromPresent","gerund","toGerund","fromGerund","comparative","toComparative","fromComparative","superlative","toSuperlative","fromSuperlative","addIrregulars","lib","addTags","words","addWords","mutate","arr","inputs","String","val","str","normal","pre","post","lex","handleInputs","_world","contractions","verbose","set","env","process","self","DEBUG_TAGS","DEBUG_MATCH","DEBUG_CHUNKS","version","nlp$1","cacheDoc","uncache","cache$1","stuff","switch","implicit","machine","alias","isTitleCase","test","spliceArr","parent","child","args","apply","endSpace","movePunct","source","needle","juicy","wasLast","punct","join","replace","cleanPrepend","home","x","toUpperCase","old","toLowerCase","moveTitleCase","pad3","toId","tx","parseInt","expand","grow","prepend","selfPtrs","getTerms","uuid","addIds","total","cleanAppend","insertAfter","dollarStub","fns$4","replaceWith","keep","main","replaceByFn","num","subDollarSign","original","oldTags","tagSafe","case","txt","charAt","substring","soften","remove","reg","indexN","not","nots","reverse","len","to","repairPunct","trimEnd","pluckOutTerm","gonePtrs","no","fixPointers","trim","trimStart","hyphenate","dehyphenate","hasHyphen","toQuotations","toParentheses","deHyphenate","toQuotation","methods$j","alpha","left","right","sequential","byFreq","counts","sort","seqNames","freqNames","alphaNames","sort$1","unique","already","customSort","combineDocs","homeDocs","inputDocs","more","at","combineViews","harden$1","harden","toTitleCase","toCamelCase","whitespace","change","model$6","word","after","before","insertContraction","point","w","hasContraction","alwaysDid","useWould","useHad","french","split","endsWith","isRange","timeRange","phoneNum","numberRange","parts","numUnit","notUnit","numberUnit","unit","byApostrophe","numDash","reTag","tmp","byEnd","apostropheT","apostropheD","byStart","j","knownOnes","list","toDocs","compute$7","units","setTag","multiWord","multi","_multiCache","lexicon","skip","tag","checkMulti","prefix","allowPrefix","checkLexicon","stem","compute$6","size","singleWord","methods$h","expandLexicon","_multi","lib$5","startsWith","lexicon$2","buildTrie","phrases","goNext","endAs","failTo","xs","phrase","curr","splitTerms","splitWhitespace","shift","s","fs","scanWords","trie","opts","results","form","cacheMiss","truncate","compress","build","compile","error","firstWords","scan","settle","relPointer","byGroup","isNet","parseRegs","regs","killUnicode","parseMatch","match$2","matchOne","intersection","sweep","tagger","todo","justOne","if","ifNo","lookaround","byN","preWords","postWords","growLeft","growRight","combine","splitAll","splits","passthrough","splitAfter","lookBehind","lookBefore","lookAhead","lookAfter","notIf","bySlashes","byParentheses","byWord","isReg","cleanUp","hasMinMax","andSign","captureName","RegExp","titleCase","stripStart","stripEnd","stripBoth","parseToken","groupStart","groupEnd","exec","greedy","optional","negative","fuzzy","choices","operator","caseSensitive","use","regex","pos","substr","sense","chunk","_a","Number","method","anything","hasDash","addVerbs","token","transform","verb","addNoun","noun","addAdjective","adjective","postProcess","inGroup","nameGroups","fuzzyOr","fastOr","anyIntersection","setA","setB","elem","failFast","fuzzyMatch","strA","strB","minLength","steps","aLength","bLength","limit","abs","a_index","b_index","cost","matrix","shouldUpdate","editDistance","startQuote","endQuote","hasPost","hasPre","hasQuote","hasComma","hasPeriod","hasExclamation","hasQuestionMark","hasEllipses","hasSemicolon","hasColon","hasSlash","Boolean","isAcronym","isKnown","isUpperCase","hasQuotation","wrapMatch","result","includes","doesMatch","matchTerm","isEndGreedy","state","start_i","phrase_length","tmpReg","getGroup","term_index","doAstrix","skipto","nextReg","greedyTo","hasGroup","doOrBlock","skipN","wasFound","cr","w_index","extra","foundBlock","orBlock","skipNum","andBlock","longest","allWords","tryTerm","doAndBlock","doNegative","negGreedy","greedyMatch","endReg","getGreedy","simpleMatch","startAt","nextRegMatched","nextTerm","foundOptional","contractionSkip","g","setGroup","tryHere","remain","pntr","addSentence","handleStart","fromHere","termMethods","tokens","final","isBlock","parseBlocks","prefixes","splitHyphens","inflectRoot","foundStart","isClass","isId","getIndex","starts","ends","toTag","html$1","html","punctToKill","isHyphen","hasSpace","textFromTerms","keepSpace","punctuation","keepPunct","lowerCase","fmts","unicode","clean","reduced","sin","PI","md5","h","decodeURI","encodeURI","charCodeAt","defaults","merge","hash","offset","confidence","_terms","syllables","sentences","json","option","reset","cli","green","red","blue","magenta","cyan","yellow","black","dim","showTags","log","padEnd","tagSet","color","tagString","showHighlight","bySentence","buff","spliceIn","toText","wrap","findStarts","debug","window","groupCollapsed","table","logClientSide","chunks","showChunks","highlight","topk","fmt","cleanWhitespace","textFromDoc","output","doesOverlap","startA","endA","startB","endB","ref","full","matches","carry","mStart","mEnd","pivotBy","methods$9","wild","findIndex","blindSweep","startId","newEnd","repairEnding","getUnion","both","hmm","range","getExtent","values","uniquePtrs","subtract","refs","and","union","overlap","getIntersection","getDifference","difference","methods$8","complement","getTokenNeeds","parse","needs","oneSide","getNeeds","wants","rs","getWants","minWant","minWords","methods$7","buildNet","always","bulkMatch","net","docCache","maybeList","docCaches","maybe","getHooks","haves","need","trimDown","termCount","tooSmall","unTag","runMatch","bulkTagger","looksPlural","reason","safe","canBe","_expanded","isMulti","addChunk","tagTerm","isSafe","known","parents","multiTag","tg","validate","isComment","parseLine","label","parseOne","byDepth","queue","normalize","lines","line","indent","indentLevel","have","rollBackWards","byIndent","rows","fromArray","arrow","depth","repeat","toArray","array","flat","cacheDown","enumerable","parsePointer","getByPointer","byId","cacheUp","fillDown","grad","colors","Noun","Verb","Negative","Date","Value","Adjective","Preposition","Conjunction","Determiner","Adverb","getColor","is","toArr","isA","notA","addImplied","methods$6","novel","fromUser","allTags","flatList","also","nope","noDoc","lib$1","boringTags","tagRank","kids","aKids","bKids","sortByKids","initSplit","splitsOnly","newLine","hasLetter","hasSomething","pairs","openQuote","closeQuote","closesQuote","hasOpen","hasClosed","startWhitespace","suffixes","hyphens","whichDash","isSlash","wordlike","isBoundary","naiiveSplit","notWord","isLetter","isNumber","hasAcronym","chillin","periodAcronym","oneLetterAcronym","noPeriodAcronym","lowerCaseAcronym","doAcronym","cleanup","doAcronyms","hasEllipse","leadInit","methods$5","chars","splitSentences","simpleSplit","simpleMerge","isSentence","abbrevs","abbreviations","smartMerge","toAdd","quoteMerge","parensMerge","ws","lastWord","combineSlashes","startRange","endRange","combineRanges","prePunctuation","postPunctuation","emoticons","parsed","prefixes$1","compact","e","f","I","q","u","v","y","z","hasDomain","isMath","addAliases","aliases","doMachine","termLoop","freq","elapsed","plz","bein","like","ish","less","able","elect","designate","_","compute$4","typeahead","lastPhrase","autoFill","collisions","existing","allPrefixes","irregularPlurals","addendum","corpus","criterion","curriculum","genus","memorandum","opus","ovum","phenomenon","referendum","alga","alumna","antenna","formula","larva","nebula","vertebra","analysis","axis","diagnosis","parenthesis","prognosis","synopsis","thesis","neurosis","appendix","ox","sex","alumnus","bacillus","cactus","fungus","hippopotamus","libretto","modulus","nucleus","octopus","radius","stimulus","syllabus","cookie","calorie","auntie","movie","pie","rookie","tie","zombie","leaf","loaf","thief","foot","goose","tooth","beau","chateau","tableau","bus","gas","circus","crisis","virus","database","excuse","abuse","avocado","barracks","clothes","echo","embargo","epoch","deer","halo","man","woman","mosquito","mouse","person","quiz","rodeo","shoe","sombrero","stomach","tornado","tuxedo","lexData","Comparative","Superlative","PresentTense","Condition","PastTense","Gerund","Expression","QuestionWord","Reflexive","Plural","Imperative","PhrasalVerb","Demonym","Organization","Possessive","Actor","Pronoun","Singular","SportsTeam","Uncountable","Unit","ProperNoun","Ordinal","Cardinal","Multiple","City","Region","Country","Place","WeekDay","Month","Duration","FemaleName","FirstName","LastName","MaleName","Person","Currency","Comparable","Infinitive","Modal","Participle","fns$1","w1","w2","Histogram","sym","countOf","highest","top","sorted","BASE","seq","encoding","places","fromCharCode","pow","config","nodeLine","sep","isTerminal","nodeProps","prop","syms","_n","symCount","_g","analyzeRefs","visited","histRel","histAbs","numberNodes","unshift","pack","nodeCount","optimize","prepDFS","savings","best","sCount","defSize","symbolCount","NOT_ALLOWED","internal","_v","_c","insertWords","_insert","freeze","uniqueNode","combineSuffixNode","next","addTerminal","nodesOnly","countDegree","collapseChains","sig","shared","cNext","vCur","other","indexFromRef","dnode","unpack","reSymbol","parseSymbols","crawl","pref","newIndex","addE","pluralize","uncountable","plural","rules","trySuffix","hasSwitch","g8","vh1","km2","m2","dm2","cm2","mm2","mile2","in2","yd2","ft2","m3","dm3","cm3","in3","ft3","yd3","he","she","it","they","we","was","are","am","were","her","his","hers","their","themselves","your","our","my","its","vs","closer","closest","much","may","babysat","blew","drank","drove","forgave","skiied","spilt","stung","swam","swung","guaranteed","shrunk","nears","nearing","neared","switches","tmpModel","wordsObj","cat","traverse","toPlural","jj","adj$1","beforeTags","afterTags","beforeWords","seem","seemed","seems","feel","feels","felt","appear","appears","appeared","over","under","too","but","still","really","quite","well","very","how","deeply","profoundly","extremely","so","badly","mostly","totally","awfully","rather","nothing","something","me","afterWords","or","Copula","been","continue","stop","be","began","started","stops","stopped","help","helps","avoid","avoids","love","loves","loved","hate","hates","hated","you","him","them","there","on","about","for","clue","adj","suggest","recommend","the","noun$1","Acronym","with","without","of","any","cut","cuts","increase","decrease","raise","drop","save","saved","saves","make","makes","made","minus","plus","than","another","versus","neither","favorite","daily","weekly","linear","binary","mobile","lexical","technical","computer","scientific","formal","system","aid","utility","tool","reform","therapy","philosophy","room","authority","says","said","wanted","can","misc","off","past","adjPast","Auxiliary","who","had","as","by","back","in","up","down","between","adjPast$1","please","will","would","could","should","do","did","does","must","us","let","even","when","being","bi","co","contra","de","inter","intra","mis","counter","an","because","although","otherwise","together","though","into","yet","went","goes","got","that","instead","person$1","Honorific","ownTags","hi","hey","yo","dear","hello","told","tells","thinks","thought","spends","spendt","plays","played","sing","sang","learn","learned","month","during","until","til","sometime","previous","following","personDate","place","Abbreviation","near","government","council","region","city","un","general","royal","vice","rear","major","clues","adjGerund","adjNoun","adjPresent","nounVerb","nounGerund","per","each","square","cubic","sq","metric","squared","cubed","long","honorable","honourable","worship","excellency","majesty","copy","Adj","Inf","Pres","Sing","Past","Avb","Plrl","Vb","Last","Prt","suffixPatterns","ea","ia","ic","ly","oed","ued","xed","azy","eer","ped","ffy","ify","ing","ize","ibe","lar","mum","nes","nny","ous","que","rol","sis","ogy","oid","ian","zes","eld","ken","ven","ten","ect","ict","ign","ful","bal","amed","aped","ched","lked","rked","reed","nded","mned","cted","dged","ield","akis","cede","chuk","czyk","ects","enko","ette","wner","fies","fore","gate","gone","ices","ints","ruct","ines","ions","ners","pers","lers","llen","nsen","oses","ould","sson","tion","tage","ique","tive","tors","lier","fier","wned","gent","tist","pist","rist","mist","yist","vist","lite","site","rite","mite","bite","mate","date","ndal","vent","uist","gist","note","cide","ence","wide","vide","ract","duce","pose","eive","lyze","lyse","iant","nary","elist","holic","phite","tized","urned","eased","ances","ettes","fully","ishes","ities","marek","nssen","ology","osome","tment","ports","rough","tches","tieth","tures","wards","where","archy","pathy","opoly","embly","phate","ndent","scent","onist","anist","alist","olist","icist","ounce","iable","borne","gnant","inant","igent","atory","rient","dient","auskas","cedent","ionary","cklist","keeper","logist","teenth","opoulos","borough","sdottir","prefixPatterns","neo","bio","anti","auto","faux","hexa","kilo","mono","nano","octa","poly","semi","tele","anglo","centi","ethno","ferro","grand","hepta","hydro","macro","micro","milli","nitro","penta","quasi","radio","tetra","pseudo","electro","Exp","vb","nn","neighbours$1","leftTags","leftWords","rightTags","rightWords","rev","convert","getKeyVal","reversed","getRules","suffix","indexRules","byChar","suff","char","pipe","uncompress","entries","fromParticiple","toParticiple","orgWords","rules$1","toSingular","invert","nouns$2","guessVerb","guess","getTense","copulaMap","toInfinitive","tense","particle","toParts","inf","conjugate","FutureTense","pastPrt","verbs$3","mod","suffixLoop","ical","ily","bly","ply","ally","rply","ually","ially","cally","eally","rally","nally","mally","eeply","eaply","ically","noAdj","wholly","truly","gently","singly","customarily","idly","publically","quickly","ial","ual","tle","ble","ple","ary","cool","whole","good","idle","public","single","special","toAdverb","doRules","le","al","ay","ess","ive","ting","ring","cial","nate","rate","bing","atic","iful","ible","erate","ionate","naive","dramatic","ironic","deep","automatic","simple","boring","free","wise","fortunate","gentle","quiet","expensive","offensive","dontDo","adjectives","toNoun","fromAdverb","nouns","verbs","fancyThings","sup","comp","isPlural","notPlural","methods$1","quickSplit","splitHere","isNum","maybeDate","splitOn","getWords","switchDefaults","expandVerb","doPresent","expandVariable","switchWords","expandAdjective","neighbours","regexNormal","regexText","regexNumbers","addUncountables","expandModels","expandIrregulars","model$2","fillTags","fastTag","setPluralSingular","setTense","hasNumber","notProper","romanNumeral","romanNumValid","li","dc","md","dm","ml","hasApostrophe","doRegs","dateWords","seemsGood","seemsOkay","seemsFine","oneLetterWord","A","lookAtWord","lookAtTag","isOrg","yelling","isCapital","isAloneVerb","adhoc","isEndNoun","checkWord","checkTag","second","doEndsWith","prefixLoop","isNaN","third","isNoPeriodAcronym","fillTag","pickTag","ignoreCase","secondPass","thirdPass","toRoot","mapping","TO","Particle","There","compute$3","penn","toPenn","entity","nouns$1","Address","School","Company","Activity","misc$1","NumberRange","Url","PhoneNumber","HashTag","AtMention","Emoji","Emoticon","Email","Prefix","Passive","Fraction","RomanNumeral","TextValue","NumericValue","Money","Percent","Year","FinancialQuarter","Holiday","Season","Timezone","Time","preTag","postPunct","setContraction","contract","banList","here","everywhere","beforePossessive","reIndex","hasPastTense","lastNoun","nextStr","twoTerm","isPossessive","isHas","apostropheS","compute$2","contractionTwo","Contractions","super","viewType","personAdj","compute$1","postTagger","sum","round","maybeMatch","_m","lazy","swap","lemma","matchVerb","swapVerb","swapNoun","adv","swapAdverb","swapAdjective","postTag","clauses","parentheses","splitParentheses","quotations","splitQuotes","commas","byComma","splitBefore","setChunk","easyMode","onRight","onLeft","byNeighbour","matcher","fallback","byChunk","current","fixUp","chunker","Chunks","isVerb","isNoun","isAdjective","isPivot","getChunks","getNth","findEnd","Parentheses","strip","want","Quotations","phoneNumbers","selections","addSelections","Possessives","possessives","addPossessives","addParentheses","addQuotations","Adjectives","adverb","adverbs","superlatives","comparatives","addAdjectives","Adverbs","addAdverbs","Acronyms","addPeriods","acronyms","addAcronyms","emoji","emojis","honorifics","numbers","toNumber","light","medium","presets","heavy","isSubordinate","parseNoun","getRoot","determiner","number","getNum","Nouns","toJSON","isSingular","hasPlural","copula","ones","zeroth","fourth","fifth","sixth","seventh","eighth","ninth","zero","five","six","seven","eight","nine","teens","tenth","eleventh","twelfth","thirteenth","fourteenth","fifteenth","sixteenth","seventeenth","eighteenth","nineteenth","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","tens","twentieth","thirtieth","fortieth","fourtieth","fiftieth","sixtieth","seventieth","eightieth","ninetieth","twenty","thirty","forty","fourty","fifty","sixty","seventy","eighty","ninety","multiples","hundredth","thousandth","millionth","billionth","trillionth","quadrillionth","quintillionth","sextillionth","septillionth","hundred","thousand","million","billion","trillion","quadrillion","quintillion","sextillion","septillion","isValid","parseDecimals","parseFloat","parseNumeric","improperFraction","casualForms","section_sum","modifier","mults","mult","amount","findModifiers","last_mult","isNegative","fm","denom","endS","parseNumber","parseText","half","halve","quarter","parseFraction","numerator","denominator","named","slashForm","den","nOutOfN","nOrinalth","oneNth","decimal","rounded","numToString","toFixed","tens_mapping","ones_mapping","sequence","breakdown_hundred","working","howmany","breakdown_magnitudes","unit_name","names","decimals","handle_decimal","textOrdinal","textValue","Fractions","fraction","toDecimal","toFraction","toOrdinal","toCardinal","toPercentage","percent","fractions","findNumbers","double","noMultiple","tensVal","multVal","frPart","isOrdinal","isText","isFraction","isMoney","$","addSuffix","format","makeSuffix","numOrdinal","textCardinal","toLocaleString","Numbers","isCardinal","isEqual","greaterThan","lessThan","agree","increment","decrement","toNice","isBetween","equals","percentages","money","people","emails","redact","grammar","findMain","subj","pred","ch","Sentences","subject","predicate","toPastTense","toPresentTense","toFutureTense","toChange","toFuture","toNegative","toPositive","isQuestion","questions","isExclamation","isStatement","hasQ","firstName","lastName","honorific","mr","mrs","miss","madam","king","queen","duke","duchess","baron","baroness","countess","prince","princess","sire","dame","lady","ayatullah","congressman","congresswoman","mx","predictGender","hon","pro","hasMasc","hasFem","organizations","topics","People","presumed_gender","gender","orgs","getAdverbs","getAuxiliary","aux","getNegative","getPhrasal","parseVerb","auxiliary","phrasal","present","conditional","future","prog","progressive","complete","passive","getData","verbForms","imperative","infinitive","getGrammar","forms","shouldSkip","getSubject","noSubClause","pronoun","det","isAreAm","doDoes","toInf","noWill","noAux","wasWere","hasHad","hasParticiple","pres","vbToInf","doesNot","isWas","hasCopula","Verbs","info","preAdverbs","postAdverbs","subjects","isImperative","isPositive","FRACION_ENTITY_TO_ASCII","MEASUREMENT_ABBR","sanitise","newStr","sanitiseWhitespace","ascii","sanitiseFractions","re","sanitiseMeasurements","isNounTag","isNumericValueTag","isPrepositionTag","isUnitTag","isIngredientTag","isAdjectiveTag","isAdverbTag","isVerbTag","isTextValueTag","flattenTerms","flatMap","termToken","createIngredient","unitValue","ingredient","ingredientName","acc","NaN","extract","sanitisedLine","compromise","getDocumentTerms","unitValueTerms","unitTerms","ingredientsTerms","startIndex","endIndex","hasNumericTag","sliceStartIndex","sliceEndIndex","extractUnitValue","extractIngredient","hasUnitTag","extractUnit","event","handler","h2","textarea","button","addEventListener","removeEventListener","onSubmit","ingredients","getElementById","CustomEvent","detail","t_value","t1_value","t3_value","if_block","create_if_block","tr","td0","td1","td2","t1","t3","thead","tbody","old_blocks","get_key","dynamic","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","will_move","did_move","new_block","old_block","new_key","old_key","h1","hr0","hr1","hr2","$$invalidate","body"],"mappings":"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A,EACNzC,KAAM,IAAIzM,IAELi4B,EJIT7rB,WKZc,SAAUtF,EAAOC,GAC7B,MAAMkC,QAAEA,EAAOtC,MAAEA,GAAUI,GACrB+vB,eAAEA,EAAc5b,WAAEA,EAAUC,gBAAEA,GAAoBlS,EAAQ1C,IAAI4F,SAepE,OAVArF,EAFgBgwB,EAFhBhwB,EAAQA,GAAS,GAEqBC,GAEpBzE,KAAKoR,IACrB,IAAIvK,EAAQ+R,EAAWxH,EAAK/M,GAO5B,OALAwC,EAAQA,EAAM7G,KAAIsI,GAAKuQ,EAAgBvQ,EAAGjE,KAE1CwC,EAAMjM,SAAS0N,IACbumB,GAAUvmB,EAAG7D,EAAM,IAEdoC,IAGX,KCZA,IAUIguB,GAAgB,CAAE,EAElB1d,GAAU,CAAE,EAZL,CACT,CCVa,CACb,SACA,MACA,KACA,MACA,KACA,MACA,MACA,MACA,KACA,MACA,OACA,OACA,MACA,MACA,QACA,MACA,KACA,MACA,MACA,MACA,KACA,MACA,OACA,MACA,KACA,KACA,MACA,KACA,OACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,KACA,KACA,MACA,OACA,OACA,QACA,ODxCA,CEVa,CACb,KACA,KACA,MAEA,KACA,KACA,MACA,MACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,KACA,MACA,MACA,OACA,KACA,KAEA,KACA,KACA,KAEA,QACA,MF7BQ,QACR,CGZa,CACb,KACA,KACA,MACA,KACA,KACA,KACA,MACA,MACA,OACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,OHLQ,QACR,CIba,CACb,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,MACA,KACA,MACA,SACA,OACA,MACA,KACA,MACA,KACA,OACA,MACA,OACA,MACA,MACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,KACA,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,QACA,OACA,SACA,UACA,cACA,WACA,SACA,OACA,KACA,SACA,UACA,OACA,YACA,SACA,SACA,YACA,QACA,YACA,SACA,SACA,SACA,WACA,OACA,KACA,YACA,SACA,aACA,UACA,aACA,YACA,iBACA,YACA,UACA,gBACA,YACA,gBACA,aACA,UACA,aACA,aACA,cACA,QACA,OACA,UACA,OACA,OACA,cACA,aACA,cACA,SACA,cACA,cACA,WACA,WACA,YACA,SACA,WACA,cACA,SACA,WACA,aACA,cACA,gBACA,SACA,OACA,UACA,aACA,YACA,KACA,aACA,OACA,MACA,UACA,QACA,aACA,QACA,QACA,SACA,WACA,WACA,QACA,SACA,MACA,aACA,WACA,YACA,aACA,YACA,gBACA,aACA,aACA,cACA,YACA,UACA,aACA,OACA,MACA,MACA,UACA,WACA,WACA,aACA,SACA,YACA,UACA,QACA,WACA,YACA,WACA,WACA,SACA,QACA,SACA,QACA,SACA,OACA,cACA,SACA,MACA,UACA,YACA,eACA,WACA,cACA,SACA,YACA,aACA,iBACA,kBACA,QACA,MACA,SACA,cACA,OACA,QACA,QACA,cACA,UACA,QACA,UACA,YACA,aACA,cACA,UACA,SACA,aACA,UACA,WACA,UACA,UACA,OAEA,eACA,WACA,UACA,qBACA,YACA,aACA,QACA,WACA,KACA,QACA,aACA,YACA,WACA78C,QAAO,CAACme,EAAG9Z,KACX8Z,EAAE9Z,IAAO,EACF8Z,IACN,CAAE,GC7LU2+B,GAAA,CACb,CAAC,cAAe,OAChB,CAAC,WAAY,MACb,CAAC,qBAAsB,SACvB,CAAC,qEAAsE,OACvE,CAAC,yCAA0C,OAC3C,CAAC,wCAAyC,OAC1C,CAAC,+CAAgD,QACjD,CAAC,+BAAgC,OAEjC,CAAC,YAAa,MACd,CAAC,YAAa,MACd,CAAC,aAAc,MACf,CAAC,YAAa,MACd,CAAC,WAAY,MAEb,CAAC,kBAAmB,MACpB,CAAC,0BAA2B,QAC5B,CAAC,wBAAyB,QAC1B,CAAC,sBAAuB,MACxB,CAAC,QAA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"}